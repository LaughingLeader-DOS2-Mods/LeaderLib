Version 1
SubGoalCombiner SGC_AND
INITSECTION
KBSECTION

//REGION GLOBAL_SETTING_FLAG_REGISTER_OLD
PROC
LeaderLib_GlobalSettings_Register_Flag_Old((STRING)_ModID, (STRING)_Author, (STRING)_Flag)
THEN
LeaderLib_GlobalSettings_Register_Flag_Old(_ModID, _Author, _Flag, 0);

PROC
LeaderLib_GlobalSettings_Register_Flag_Old((STRING)_ModID, (STRING)_Author, (STRING)_Flag, (INTEGER)_SaveWhenFalse)
AND
DB_LeaderLib_GlobalSettings_Flags(_Flag, _ModID, _Author, _LastVal)
THEN
NOT DB_LeaderLib_GlobalSettings_Flags(_Flag, _ModID, _Author, _LastVal);

PROC
LeaderLib_GlobalSettings_Register_Flag_Old((STRING)_ModID, (STRING)_Author, (STRING)_Flag, (INTEGER)_SaveWhenFalse)
AND
NOT DB_LeaderLib_GlobalSettings_Flags(_Flag, _ModID, _Author, _)
THEN
DB_LeaderLib_GlobalSettings_Flags(_Flag, _ModID, _Author, _SaveWhenFalse);
//END_REGION

//REGION GLOBAL_SETTING_INT_REGISTER_OLD
PROC
LeaderLib_GlobalSettings_Register_Integer_Old((STRING)_ModID, (STRING)_Author, (STRING)_Name)
THEN
LeaderLib_GlobalSettings_Register_Integer_Old(_ModID, _Author, _Name, 0);

PROC
LeaderLib_GlobalSettings_Register_Integer_Old((STRING)_ModID, (STRING)_Author, (STRING)_Name, (INTEGER)_DefaultValue)
AND
DB_LeaderLib_GlobalSettings_Integers(_ModID, _Author, _Name, _LastDefaultValue)
THEN
NOT DB_LeaderLib_GlobalSettings_Integers(_ModID, _Author, _Name, _LastDefaultValue);

PROC
LeaderLib_GlobalSettings_Register_Integer_Old((STRING)_ModID, (STRING)_Author, (STRING)_Name, (INTEGER)_DefaultValue)
THEN
DB_LeaderLib_GlobalSettings_Integers(_ModID, _Author, _Name, _DefaultValue);

//Called by LeaderLib_GlobalSettings.lua
PROC
LeaderLib_GlobalSettings_Internal_GetIntegerVariable_Old((STRING)_ModID, (STRING)_Author, (STRING)_Name)
AND
DB_LeaderLib_GlobalSettings_Integers(_ModID, _Author, _Name, _DefaultValue)
THEN
LeaderLib_GlobalSettings_GetIntegerVariable(_ModID, _Author, _Name);

PROC
LeaderLib_GlobalSettings_GetIntegerVariable((STRING)_ModID, (STRING)_Author, (STRING)_Name)
THEN
DB_NOOP(1);

// Listen for this in mods
PROC
LeaderLib_GlobalSettings_GetIntegerVariable((STRING)_ModID, (STRING)_Author, (STRING)_Name)
THEN
DB_NOOP(1);
//Call this proc with the value to send.
//LeaderLib_GlobalSettings_SaveIntegerVariable(_ModID, _Author, _Name, _Value);

//Called by other mods
PROC
LeaderLib_GlobalSettings_SaveIntegerVariable((STRING)_ModID, (STRING)_Author, (STRING)_Name, (INTEGER)_Value)
THEN
DB_NOOP(1);
/* [OSITOOLS_ONLY]
SetGlobalPriceModifier(_Value);
*/
//Called by LeaderLib_GlobalSettings.lua, listened for in mods
PROC
LeaderLib_GlobalSettings_SetIntegerVariable((STRING)_ModID, (STRING)_Author, (STRING)_Name, (INTEGER)_Value)
THEN
DB_NOOP(1);
//END_REGION

//REGION TRANSFER_OLD
PROC
LeaderLib_GlobalSettings_Internal_TransferFlags()
AND
DB_Mods_Registered(_ModID, _Author, _Version)
AND
DB_LeaderLib_GlobalSettings_Flags(_Flag, _ModID, _Author, _SaveWhenFalse)
AND
IntegertoString(_SaveWhenFalse, _IntStr)
THEN
NRD_LuaCall("LeaderLib_Ext_GlobalSettings_StoreGlobalFlag_Old", _ModID, _Author, _Flag, _IntStr);

PROC
LeaderLib_GlobalSettings_Internal_TransferIntegers()
AND
DB_Mods_Registered(_ModID, _Author, _Version)
AND
DB_LeaderLib_GlobalSettings_Integers(_ModID, _Author, _VarName, _DefaultValue)
AND
IntegertoString(_DefaultValue, _IntStr)
THEN
NRD_LuaCall("LeaderLib_Ext_GlobalSettings_StoreGlobalInteger_Old", _ModID, _Author, _VarName, _IntStr);
//END_REGION

//REGION VERSION_UPDATING
QRY
LeaderLib_GlobalSettings_QRY_ModHasVariables_Old((STRING)_ModID, (STRING)_Author)
AND
DB_LeaderLib_GlobalSettings_Flags(_Flag, _ModID, _Author, _SaveWhenFalse)
THEN
DB_NOOP(1);

QRY
LeaderLib_GlobalSettings_QRY_ModHasVariables_Old((STRING)_ModID, (STRING)_Author)
AND
DB_LeaderLib_GlobalSettings_Integers(_ModID, _Author, _VarName, _DefaultValue)
THEN
DB_NOOP(1);

/* [OSITOOLS_ONLY]
PROC
LeaderLib_GlobalSettings_TransferVariables()
AND
DB_Mods_Registered(_ModID, _Author, _CurrentVersion)
AND
LeaderLib_GlobalSettings_QRY_ModHasVariables_Old(_ModID, _Author)
THEN
NRD_LuaCall("LeaderLib_Ext_GlobalSettings_StoreModVersion_Old", _ModID, _Author, _CurrentVersion);

PROC
LeaderUpdater_ModUpdated((STRING)_ModID, (STRING)_Author, (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_GlobalSettings_QRY_ModHasVariables_Old(_ModID, _Author)
THEN
NRD_LuaCall("LeaderLib_Ext_GlobalSettings_StoreModVersion_Old",  _ModID, _Author, _NewVersion);
*/
//END_REGION

EXITSECTION
ENDEXITSECTION
ParentTargetEdge "__AAA_Z_LaughingLeader_LeaderLib_Top"