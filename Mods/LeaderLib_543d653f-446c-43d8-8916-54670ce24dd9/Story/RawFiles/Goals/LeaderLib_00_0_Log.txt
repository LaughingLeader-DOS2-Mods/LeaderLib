Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LeaderLog_Temp_CombinedString(_CombinedStr)
//DB_LeaderLog_Temp_NextLogTarget(_Target)
//DB_LeaderLog_Temp_TargetOnce(_Target)
//DB_LeaderLog_Temp_NextStatusColor(_Target, _Color, _Size)
//DB_LeaderLog_Temp_RealString(_ID, _Str)
//DB_LeaderLog_Temp_RealString(_ID, _Str1, _Str2)
//DB_LeaderLog_Temp_RealString(_ID, _Str1, _Str2, _Str3)
SysActivateGoal("LeaderLib_00_0_TS_StrictLogCalls");
LeaderLib_LeaderLog_SetInitialEnable();
// DB_LeaderLog_Flags("LeaderLog_DebugStatus_Enabled");
// DB_LeaderLog_Flags("LeaderLog_DebugEvents_Enabled");
// DB_LeaderLog_Flags("LeaderLog_DebugDialog_Enabled");
// DB_LeaderLog_Flags("LeaderLog_Debug_Enabled");
// DB_LeaderLog_Flags("LeaderLog_Trace_Enabled");
KBSECTION
//REGION EDITOR_DEBUG_ENABLE
PROC
LeaderLib_LeaderLog_SetInitialEnable()
AND
NOT DB_LeaderLog_InitialEnable(_)
THEN
GlobalSetFlag("LeaderLog_Debug_Enabled"); // For tracing system logs before it's defaultly disabled
DB_LeaderLog_InitialEnable(1);

IF
StoryEvent(_, "LeaderLib_Initialized")
AND
NOT GlobalGetFlag("LeaderLib_IsEditorMode", 1)
AND
DB_LeaderLog_InitialEnable(_Val)
THEN
NOT DB_LeaderLog_InitialEnable(_Val);
GlobalClearFlag("LeaderLog_Debug_Enabled");

//END_REGION

//REGION DISABLED_CHECK
QRY
LeaderLog_QRY_Internal_DisableFlagActive((STRING)_Flag)
AND
GlobalGetFlag(_Flag, 1)
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("COMBAT")
AND
NOT LeaderLog_QRY_Internal_DisableFlagActive("LeaderLog_CombatLog_Disabled")
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("STATUS")
AND
NOT LeaderLog_QRY_Internal_DisableFlagActive("LeaderLog_Status_Disabled")
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("PRINT")
AND
NOT LeaderLog_QRY_Internal_DisableFlagActive("LeaderLog_Status_Disabled")
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("ERROR")
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("DEBUG")
AND
GlobalGetFlag("LeaderLog_Debug_Enabled", 1)
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("TRACE")
AND
GlobalGetFlag("LeaderLog_Trace_Enabled", 1)
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("DEBUG_STATUS")
AND
GlobalGetFlag("LeaderLog_DebugStatus_Enabled", 1)
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("DEBUG_EVENTS")
AND
GlobalGetFlag("LeaderLog_DebugEvents_Enabled", 1)
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("DEBUG_DIALOG")
AND
GlobalGetFlag("LeaderLog_DebugDialog_Enabled", 1)
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("EDITOR")
AND
GlobalGetFlag("LeaderLog_Debug_Enabled", 1)
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("SYSTEM")
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("NOTIFICATION")
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_LogTypeEnabled("COMBINE")
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_AllDebugLogTypesDisabled()
AND
NOT LeaderLog_QRY_LogTypeEnabled("DEBUG")
AND
NOT LeaderLog_QRY_LogTypeEnabled("TRACE")
AND
NOT LeaderLog_QRY_LogTypeEnabled("COMBAT")
THEN
DB_NOOP(1);
//END_REGION

//REGION LOG_TOGGLING
PROC
LeaderLog_Internal_ToggleLogging(1)
THEN
SysActivateGoal("LeaderLib_00_0_TS_AllLogging");
SysCompleteGoal("LeaderLib_00_0_TS_StrictLogCalls");

PROC
LeaderLog_Internal_ToggleLogging(1)
AND
NOT DB_LeaderLog_Internal_LoggingMode(_)
THEN
DB_LeaderLog_Internal_LoggingMode(1);

PROC
LeaderLog_Internal_ToggleLogging(0)
THEN
SysCompleteGoal("LeaderLib_00_0_TS_AllLogging");
SysActivateGoal("LeaderLib_00_0_TS_StrictLogCalls");

PROC
LeaderLog_Internal_ToggleLogging(0)
AND
DB_LeaderLog_Internal_LoggingMode(_Mode)
THEN
NOT DB_LeaderLog_Internal_LoggingMode(_Mode);

IF
GlobalFlagSet("LeaderLog_Debug_Enabled")
THEN
LeaderLog_Internal_ToggleLogging(1);

IF
GlobalFlagSet("LeaderLog_Trace_Enabled")
THEN
LeaderLog_Internal_ToggleLogging(1);

IF
GlobalFlagCleared("LeaderLog_Debug_Enabled")
AND
LeaderLog_QRY_AllDebugLogTypesDisabled()
THEN
LeaderLog_Internal_ToggleLogging(0);

IF
GlobalFlagCleared("LeaderLog_Trace_Enabled")
AND
LeaderLog_QRY_AllDebugLogTypesDisabled()
THEN
LeaderLog_Internal_ToggleLogging(0);
//END_REGION

//REGION TYPE_CHECK
QRY
LeaderLog_QRY_IsStatusType("STATUS")
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_IsStatusType("PRINT")
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_IsDebugType("EDITOR")
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_IsDebugType("DEBUG")
THEN
DB_NOOP(1);

QRY
LeaderLog_QRY_IsDebugType("ERROR")
THEN
DB_NOOP(1);

//Default to DebugBreak if no types match
QRY
LeaderLog_QRY_IsDebugType((STRING)_Type)
AND
NOT LeaderLog_QRY_IsStatusType(_Type)
AND
_Type != "COMBINE"
THEN
DB_NOOP(1);
//END_REGION

//REGION PLAYER_LOG_TARGETING
QRY
LeaderLog_QRY_SetTarget((GUIDSTRING)_Target)
THEN
LeaderLog_SetTarget(_Target);

PROC
LeaderLog_SetTarget((GUIDSTRING)_Target)
AND
NOT DB_LeaderLog_Temp_NextLogTarget(_Target)
THEN
DB_LeaderLog_Temp_NextLogTarget(_Target);

QRY
LeaderLog_QRY_SetOneshotTarget((GUIDSTRING)_Target)
THEN
LeaderLog_SetOneshotTarget(_Target);

PROC
LeaderLog_SetOneshotTarget((GUIDSTRING)_Target)
THEN
LeaderLog_SetTarget(_Target);
DB_LeaderLog_Temp_TargetOnce(_Target);

PROC
LeaderLog_Internal_ClearTargetIfOneshot((GUIDSTRING)_Target)
AND
DB_LeaderLog_Temp_NextLogTarget(_Target)
AND
DB_LeaderLog_Temp_TargetOnce(_Target)
THEN
NOT DB_LeaderLog_Temp_NextLogTarget(_Target);

PROC
LeaderLog_Internal_ClearTargetIfOneshot((GUIDSTRING)_Target)
AND
DB_LeaderLog_Temp_TargetOnce(_Target)
THEN
NOT DB_LeaderLog_Temp_TargetOnce(_Target);

PROC
LeaderLog_SetNextOneshotStatus((GUIDSTRING)_Target, (STRING)_Color)
THEN
LeaderLog_SetOneshotTarget(_Target);
LeaderLog_SetNextStatusColor(_Target, _Color);

PROC
LeaderLog_SetNextOneshotStatus((GUIDSTRING)_Target, (STRING)_Color, (STRING)_Size)
THEN
LeaderLog_SetOneshotTarget(_Target);
LeaderLog_SetNextStatusColor(_Target, _Color, _Size);

QRY
LeaderLog_QRY_SetNextOneshotStatus((GUIDSTRING)_Target, (STRING)_Color, (STRING)_Size)
THEN
LeaderLog_SetNextOneshotStatus(_Target, _Color, _Size);

QRY
LeaderLog_QRY_SetNextOneshotStatus((GUIDSTRING)_Target, (STRING)_Color)
THEN
LeaderLog_SetNextOneshotStatus(_Target, _Color);
//END_REGION

//REGION COLOR
PROC
LeaderLog_SetNextStatusColor((GUIDSTRING)_Target, (STRING)_Color)
THEN
LeaderLog_SetNextStatusColor(_Target, _Color, "20");

QRY
LeaderLog_QRY_SetNextStatusColor((GUIDSTRING)_Target, (STRING)_Color)
THEN
LeaderLog_SetNextStatusColor(_Target, _Color);

PROC
LeaderLog_SetNextStatusColor((GUIDSTRING)_Target, (STRING)_Color, (STRING)_Size)
THEN
DB_LeaderLog_Temp_NextStatusColor(_Target, _Color, _Size);

QRY
LeaderLog_QRY_SetNextStatusColor((GUIDSTRING)_Target, (STRING)_Color, (STRING)_Size)
THEN
LeaderLog_SetNextStatusColor(_Target, _Color, _Size);

PROC
LeaderLog_ClearStatusColor((GUIDSTRING)_Target)
AND
DB_LeaderLog_Temp_NextStatusColor(_Target, _Color, _Size)
THEN
NOT DB_LeaderLog_Temp_NextStatusColor(_Target, _Color, _Size);
//END_REGION

//REGION RUN_STRING
PROC
LeaderLog_Internal_RunString((STRING)_Type, (STRING)_Str)
AND
LeaderLog_QRY_IsStatusType(_Type)
AND
DB_LeaderLog_Temp_NextLogTarget(_Target)
AND
NOT DB_LeaderLog_Temp_NextStatusColor(_Target, _, _)
THEN
LeaderLog_Internal_DisplayStatusText(_Target, _Str);
LeaderLog_Internal_ClearTargetIfOneshot(_Target);

PROC
LeaderLog_Internal_RunString((STRING)_Type, (STRING)_Str)
AND
LeaderLog_QRY_IsStatusType(_Type)
AND
DB_LeaderLog_Temp_NextLogTarget(_Target)
AND
DB_LeaderLog_Temp_NextStatusColor(_Target, _Color, _Size)
AND
StringConcatenate("<font color='", _Color, _ColorStr1)
AND
StringConcatenate(_ColorStr1, "' size='", _ColorStr2)
AND
StringConcatenate(_ColorStr2, _Size, _ColorStr3)
AND
StringConcatenate(_ColorStr3, "'>", _ColorStr4)
AND
StringConcatenate(_ColorStr4, _Str, _ColorStr5)
AND
StringConcatenate(_ColorStr5, "</font>", _ColorStr6)
THEN
LeaderLog_Internal_DisplayStatusText(_Target, _ColorStr6);
NOT DB_LeaderLog_Temp_NextStatusColor(_Target, _Color, _Size);
LeaderLog_Internal_ClearTargetIfOneshot(_Target);

PROC
LeaderLog_Internal_DisplayStatusText((GUIDSTRING)_Target, (STRING)_Str)
AND
ObjectIsCharacter(_Target, 1)
THEN
CharacterStatusText((CHARACTERGUID)_Target, _Str);

//Use the behavior script version of StatusText, since it supports items
PROC
LeaderLog_Internal_DisplayStatusText((GUIDSTRING)_Target, (STRING)_Str)
AND
ObjectIsCharacter(_Target, 0)
AND
ObjectIsItem(_Target, 1)
THEN
SetVarFixedString(_Target, "LeaderLog_Internal_StatusText", _Str);
SetStoryEvent(_Target, "LeaderLog_Commands_DisplayStatusText");

PROC
LeaderLog_Internal_DisplayStatusText((GUIDSTRING)_Target, (STRING)_Str)
AND
ObjectIsCharacter(_Target, 0)
AND
ObjectIsItem(_Target, 0)
AND
StringConcatenate("[LeaderLog:ERROR] No valid target set! | ", _Str, _Msg)
THEN
LeaderLog_Internal_RunString("DEBUG", _Msg);

PROC
LeaderLog_Internal_RunString((STRING)_Type, (STRING)_Str)
AND
LeaderLog_QRY_IsDebugType(_Type)
THEN
DebugBreak(_Str);

PROC
LeaderLog_Internal_RunString((STRING)_Type, (STRING)_Str)
AND
_Type == "COMBAT"
AND
NOT DB_LeaderLog_Temp_NextLogTarget(_)
AND
LeaderLib_Events_QRY_GetEventParser()
AND
DB_LeaderLib_EventParser(_EventParser)
THEN
LeaderLib_StringExt_DetermineStringLength(_Str);
LeaderLog_Internal_LogToCombatLog(_EventParser, _Str);

PROC
LeaderLog_Internal_RunString((STRING)_Type, (STRING)_Str)
AND
_Type == "COMBAT"
AND
DB_LeaderLog_Temp_NextLogTarget(_Target)
THEN
LeaderLib_StringExt_DetermineStringLength(_Str);
LeaderLog_Internal_LogToCombatLog(_Target, _Str);

PROC
LeaderLog_Internal_LogToCombatLog((GUIDSTRING)_Object, (STRING)_Str)
AND
DB_LeaderLib_StringLength(_Str, _Length)
AND
_Length >= 255 // > 255 characters can cause a crash
AND
StringSub(_Str, 0, 254, _SubbedStr)
THEN
NOT DB_LeaderLib_StringLength(_Str, _Length);
SetVarFixedString(_Object, "LeaderLog_CombatLogText", _SubbedStr);
SetStoryEvent(_Object, "LeaderLib_Commands_LogToCombatLog");
LeaderLog_Internal_ClearTargetIfOneshot(_Object);

PROC
LeaderLog_Internal_LogToCombatLog((GUIDSTRING)_Object, (STRING)_Str)
AND
DB_LeaderLib_StringLength(_Str, _Length)
AND
_Length < 255 // > 255 characters can cause a crash
THEN
NOT DB_LeaderLib_StringLength(_Str, _Length);
SetVarFixedString(_Object, "LeaderLog_CombatLogText", _Str);
SetStoryEvent(_Object, "LeaderLib_Commands_LogToCombatLog");
LeaderLog_Internal_ClearTargetIfOneshot(_Object);

PROC
LeaderLog_Internal_LogToNotification((CHARACTERGUID)_Target, (STRING)_Str)
AND
DB_LeaderLib_StringLength(_Str, _Length)
AND
_Length >= 255
AND
StringSub(_Str, 0, 254, _SubbedStr)
THEN
NOT DB_LeaderLib_StringLength(_Str, _Length);
ShowNotification(_Target, _SubbedStr);
LeaderLog_Internal_ClearTargetIfOneshot(_Target);

PROC
LeaderLog_Internal_LogToNotification((CHARACTERGUID)_Target, (STRING)_Str)
AND
DB_LeaderLib_StringLength(_Str, _Length)
AND
_Length < 255 // Strings greater than 255 characters can cause a crash
THEN
NOT DB_LeaderLib_StringLength(_Str, _Length);
ShowNotification(_Target, _Str);
LeaderLog_Internal_ClearTargetIfOneshot(_Target);

PROC
LeaderLog_Internal_RunString((STRING)_Type, (STRING)_Str)
AND
_Type == "COMBINE"
THEN
DB_LeaderLog_Temp_CombinedString(_Str);
//END_REGION

//REGION LOG_QRY
QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1)
THEN
LeaderLog_Log(_Type, _Str1);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2)
THEN
LeaderLog_Log(_Type, _Str1, _Str2);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9, _Str10);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10, (STRING)_Str11)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9, _Str10, _Str11);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10, (STRING)_Str11, (STRING)_Str12)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9, _Str10, _Str11, _Str12);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10, (STRING)_Str11, (STRING)_Str12, (STRING)_Str13)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9, _Str10, _Str11, _Str12, _Str13);

QRY
LeaderLog_QRY_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10, (STRING)_Str11, (STRING)_Str12, (STRING)_Str13, (STRING)_Str14)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9, _Str10, _Str11, _Str12, _Str13, _Str14);
//END_REGION

//REGION LOG_TARGET
PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Str1);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg1);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
AND
StringConcatenate(_Msg1, _Str3, _Msg2)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg2);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
AND
StringConcatenate(_Msg1, _Str3, _Msg2)
AND
StringConcatenate(_Msg2, _Str4, _Msg3)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg3);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
AND
StringConcatenate(_Msg1, _Str3, _Msg2)
AND
StringConcatenate(_Msg2, _Str4, _Msg3)
AND
StringConcatenate(_Msg3, _Str5, _Msg4)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg4);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
AND
StringConcatenate(_Msg1, _Str3, _Msg2)
AND
StringConcatenate(_Msg2, _Str4, _Msg3)
AND
StringConcatenate(_Msg3, _Str5, _Msg4)
AND
StringConcatenate(_Msg4, _Str6, _Msg5)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg5);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
AND
StringConcatenate(_Msg1, _Str3, _Msg2)
AND
StringConcatenate(_Msg2, _Str4, _Msg3)
AND
StringConcatenate(_Msg3, _Str5, _Msg4)
AND
StringConcatenate(_Msg4, _Str6, _Msg5)
AND
StringConcatenate(_Msg5, _Str7, _Msg6)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg6);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
AND
StringConcatenate(_Msg1, _Str3, _Msg2)
AND
StringConcatenate(_Msg2, _Str4, _Msg3)
AND
StringConcatenate(_Msg3, _Str5, _Msg4)
AND
StringConcatenate(_Msg4, _Str6, _Msg5)
AND
StringConcatenate(_Msg5, _Str7, _Msg6)
AND
StringConcatenate(_Msg6, _Str8, _Msg7)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg7);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
AND
StringConcatenate(_Msg1, _Str3, _Msg2)
AND
StringConcatenate(_Msg2, _Str4, _Msg3)
AND
StringConcatenate(_Msg3, _Str5, _Msg4)
AND
StringConcatenate(_Msg4, _Str6, _Msg5)
AND
StringConcatenate(_Msg5, _Str7, _Msg6)
AND
StringConcatenate(_Msg6, _Str8, _Msg7)
AND
StringConcatenate(_Msg7, _Str9, _Msg8)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg8);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
AND
StringConcatenate(_Msg1, _Str3, _Msg2)
AND
StringConcatenate(_Msg2, _Str4, _Msg3)
AND
StringConcatenate(_Msg3, _Str5, _Msg4)
AND
StringConcatenate(_Msg4, _Str6, _Msg5)
AND
StringConcatenate(_Msg5, _Str7, _Msg6)
AND
StringConcatenate(_Msg6, _Str8, _Msg7)
AND
StringConcatenate(_Msg7, _Str9, _Msg8)
AND
StringConcatenate(_Msg8, _Str10, _Msg9)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg9);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10, (STRING)_Str11)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
AND
StringConcatenate(_Msg1, _Str3, _Msg2)
AND
StringConcatenate(_Msg2, _Str4, _Msg3)
AND
StringConcatenate(_Msg3, _Str5, _Msg4)
AND
StringConcatenate(_Msg4, _Str6, _Msg5)
AND
StringConcatenate(_Msg5, _Str7, _Msg6)
AND
StringConcatenate(_Msg6, _Str8, _Msg7)
AND
StringConcatenate(_Msg7, _Str9, _Msg8)
AND
StringConcatenate(_Msg8, _Str10, _Msg9)
AND
StringConcatenate(_Msg9, _Str11, _Msg10)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg10);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10, (STRING)_Str11, (STRING)_Str12)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
AND
StringConcatenate(_Msg1, _Str3, _Msg2)
AND
StringConcatenate(_Msg2, _Str4, _Msg3)
AND
StringConcatenate(_Msg3, _Str5, _Msg4)
AND
StringConcatenate(_Msg4, _Str6, _Msg5)
AND
StringConcatenate(_Msg5, _Str7, _Msg6)
AND
StringConcatenate(_Msg6, _Str8, _Msg7)
AND
StringConcatenate(_Msg7, _Str9, _Msg8)
AND
StringConcatenate(_Msg8, _Str10, _Msg9)
AND
StringConcatenate(_Msg9, _Str11, _Msg10)
AND
StringConcatenate(_Msg10, _Str12, _Msg11)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg11);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10, (STRING)_Str11, (STRING)_Str12, (STRING)_Str13)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
AND
StringConcatenate(_Msg1, _Str3, _Msg2)
AND
StringConcatenate(_Msg2, _Str4, _Msg3)
AND
StringConcatenate(_Msg3, _Str5, _Msg4)
AND
StringConcatenate(_Msg4, _Str6, _Msg5)
AND
StringConcatenate(_Msg5, _Str7, _Msg6)
AND
StringConcatenate(_Msg6, _Str8, _Msg7)
AND
StringConcatenate(_Msg7, _Str9, _Msg8)
AND
StringConcatenate(_Msg8, _Str10, _Msg9)
AND
StringConcatenate(_Msg9, _Str11, _Msg10)
AND
StringConcatenate(_Msg10, _Str12, _Msg11)
AND
StringConcatenate(_Msg11, _Str13, _Msg12)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg12);

PROC
LeaderLog_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10, (STRING)_Str11, (STRING)_Str12, (STRING)_Str13, (STRING)_Str14)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
StringConcatenate(_Str1, _Str2, _Msg1)
AND
StringConcatenate(_Msg1, _Str3, _Msg2)
AND
StringConcatenate(_Msg2, _Str4, _Msg3)
AND
StringConcatenate(_Msg3, _Str5, _Msg4)
AND
StringConcatenate(_Msg4, _Str6, _Msg5)
AND
StringConcatenate(_Msg5, _Str7, _Msg6)
AND
StringConcatenate(_Msg6, _Str8, _Msg7)
AND
StringConcatenate(_Msg7, _Str9, _Msg8)
AND
StringConcatenate(_Msg8, _Str10, _Msg9)
AND
StringConcatenate(_Msg9, _Str11, _Msg10)
AND
StringConcatenate(_Msg10, _Str12, _Msg11)
AND
StringConcatenate(_Msg11, _Str13, _Msg12)
AND
StringConcatenate(_Msg12, _Str14, _Msg13)
THEN
LeaderLog_Internal_RunStringOnTarget(_Type, _Target, _Msg13);

PROC
LeaderLog_Internal_RunStringOnTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str)
AND
LeaderLog_QRY_IsStatusType(_Type)
AND
NOT DB_LeaderLog_Temp_NextStatusColor(_Target, _, _)
THEN
LeaderLog_Internal_DisplayStatusText(_Target, _Str);
LeaderLog_Internal_ClearTargetIfOneshot(_Target);

PROC
LeaderLog_Internal_RunStringOnTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str)
AND
LeaderLog_QRY_IsStatusType(_Type)
AND
DB_LeaderLog_Temp_NextStatusColor(_Target, _Color, _Size)
AND
StringConcatenate("<font color='", _Color, _ColorStr1)
AND
StringConcatenate(_ColorStr1, "' size='", _ColorStr2)
AND
StringConcatenate(_ColorStr2, _Size, _ColorStr3)
AND
StringConcatenate(_ColorStr3, "'>", _ColorStr4)
AND
StringConcatenate(_ColorStr4, _Str, _ColorStr5)
AND
StringConcatenate(_ColorStr5, "</font>", _ColorStr6)
THEN
LeaderLog_Internal_DisplayStatusText(_Target, _ColorStr6);
NOT DB_LeaderLog_Temp_NextStatusColor(_Target, _Color, _Size);
LeaderLog_Internal_ClearTargetIfOneshot(_Target);

PROC
LeaderLog_Internal_RunStringOnTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str)
AND
LeaderLog_QRY_IsDebugType(_Type)
THEN
DebugBreak(_Str);

PROC
LeaderLog_Internal_RunStringOnTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str)
AND
_Type == "COMBAT"
THEN
LeaderLib_StringExt_DetermineStringLength(_Str);
LeaderLog_Internal_LogToCombatLog(_Target, _Str);

//255 character limit as well
PROC
LeaderLog_Internal_RunStringOnTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str)
AND
_Type == "NOTIFICATION"
AND
ObjectIsCharacter((CHARACTERGUID)_Target, 1)
THEN
LeaderLib_StringExt_DetermineStringLength(_Str);
LeaderLog_Internal_LogToNotification(_Target, _Str);

PROC
LeaderLog_Internal_RunStringOnTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str)
AND
_Type == "NOTIFICATION"
AND
ObjectIsCharacter(_Target, 0)
THEN
LeaderLog_Internal_DisplayStatusText(_Target, _Str);

PROC
LeaderLog_Internal_RunStringOnTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str)
AND
_Type == "COMBINE"
THEN
DB_LeaderLog_Temp_CombinedString(_Str);
//END_REGION

//REGION LOG_TARGET_QRY
QRY
LeaderLog_QRY_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1)
THEN
LeaderLog_LogTarget(_Type, _Target, _Str1);

QRY
LeaderLog_QRY_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2)
THEN
LeaderLog_LogTarget(_Type, _Target, _Str1, _Str2);

QRY
LeaderLog_QRY_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3)
THEN
LeaderLog_LogTarget(_Type, _Target, _Str1, _Str2, _Str3);

QRY
LeaderLog_QRY_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4)
THEN
LeaderLog_LogTarget(_Type, _Target, _Str1, _Str2, _Str3, _Str4);

QRY
LeaderLog_QRY_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5)
THEN
LeaderLog_LogTarget(_Type, _Target, _Str1, _Str2, _Str3, _Str4, _Str5);

QRY
LeaderLog_QRY_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6)
THEN
LeaderLog_LogTarget(_Type, _Target, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6);

QRY
LeaderLog_QRY_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7)
THEN
LeaderLog_LogTarget(_Type, _Target, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7);

QRY
LeaderLog_QRY_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8)
THEN
LeaderLog_LogTarget(_Type, _Target, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8);

QRY
LeaderLog_QRY_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9)
THEN
LeaderLog_LogTarget(_Type, _Target, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9);

QRY
LeaderLog_QRY_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10)
THEN
LeaderLog_LogTarget(_Type, _Target, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9, _Str10);

QRY
LeaderLog_QRY_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10, (STRING)_Str11)
THEN
LeaderLog_LogTarget(_Type, _Target, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9, _Str10, _Str11);

QRY
LeaderLog_QRY_LogTarget((STRING)_Type, (GUIDSTRING)_Target, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10, (STRING)_Str11, (STRING)_Str12)
THEN
LeaderLog_LogTarget(_Type, _Target, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9, _Str10, _Str11, _Str12);
//END_REGION

//REGION LOG_BEHAVIOR_EVENTS
IF
StoryEvent(_Target, "LeaderLog_Commands_Log")
AND
GetVarString(_Target, "LeaderLog_Message", _Message)
AND
NOT LeaderLib_Variables_QRY_StringVariableSet(_Target, "LeaderLog_Type")
THEN
LeaderLog_Log("DEBUG", _Message);
ClearVarObject(_Target, "LeaderLog_Message");

IF
StoryEvent(_Target, "LeaderLog_Commands_Log")
AND
GetVarString(_Target, "LeaderLog_Message", _Message)
AND
LeaderLib_Variables_QRY_StringVariableSet(_Target, "LeaderLog_Type")
AND
GetVarString(_Target, "LeaderLog_Type", _Type)
THEN
LeaderLog_Log(_Type, _Message);
ClearVarObject(_Target, "LeaderLog_Message");
ClearVarObject(_Target, "LeaderLog_Type");
//END_REGION

//REGION NUMBER_CONVERSION
QRY
LeaderLog_QRY_IntegerToString((INTEGER)_Num)
AND
_Num >= 0
AND
IntegertoString(_Num, _NumStr)
THEN
DB_LeaderLog_IntString(_Num, _NumStr);

//Negative integers aren't converted to strings correctly
QRY
LeaderLog_QRY_IntegerToString((INTEGER)_Num)
AND
_Num < 0
AND
IntegerProduct(_Num, -1, _TraceNum)
AND
IntegertoString(_TraceNum, _NumStr)
AND
StringConcatenate("-", _NumStr, _NegativeNumStr)
THEN
DB_LeaderLog_IntString(_Num, _NegativeNumStr);

PROC
LeaderLog_LogInt((STRING)_Type, (STRING)_Prefix, (INTEGER)_Num, (STRING)_Suffix)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
LeaderLog_QRY_IntegerToString(_Num)
AND
DB_LeaderLog_IntString(_Num, _NumStr)
THEN
NOT DB_LeaderLog_IntString(_Num, _NumStr);
LeaderLog_Log(_Type, _Prefix, _NumStr, _Suffix);

PROC
LeaderLog_LogInt((STRING)_Type, (STRING)_Prefix, (INTEGER)_Num, (STRING)_Prefix2, (INTEGER)_Num2, (STRING)_Suffix)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
LeaderLog_QRY_IntegerToString(_Num)
AND
DB_LeaderLog_IntString(_Num, _NumStr)
AND
LeaderLog_QRY_IntegerToString(_Num2)
AND
DB_LeaderLog_IntString(_Num2, _Num2Str)
THEN
NOT DB_LeaderLog_IntString(_Num, _NumStr);
NOT DB_LeaderLog_IntString(_Num2, _Num2Str);
LeaderLog_Log(_Type, _Prefix, _NumStr, _Prefix2, _Num2Str, _Suffix);

PROC
LeaderLog_LogInt((STRING)_Type, (STRING)_Str1, (INTEGER)_Num, (STRING)_Str2, (INTEGER)_Num2, (STRING)_Str3, (INTEGER)_Num3, (STRING)_Str4)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
LeaderLog_QRY_IntegerToString(_Num)
AND
DB_LeaderLog_IntString(_Num, _NumStr)
AND
LeaderLog_QRY_IntegerToString(_Num2)
AND
DB_LeaderLog_IntString(_Num2, _Num2Str)
AND
LeaderLog_QRY_IntegerToString(_Num3)
AND
DB_LeaderLog_IntString(_Num3, _Num3Str)
THEN
NOT DB_LeaderLog_IntString(_Num, _NumStr);
NOT DB_LeaderLog_IntString(_Num2, _Num2Str);
NOT DB_LeaderLog_IntString(_Num3, _Num3Str);
LeaderLog_Log(_Type, _Str1, _NumStr, _Str2, _Num2Str, _Str3, _Num3Str, _Str4);

PROC
LeaderLog_LogIntWithString((STRING)_Type, (STRING)_Prefix, (STRING)_Str1, (STRING)_Prefix2, (INTEGER)_Num, (STRING)_Suffix)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
LeaderLog_QRY_IntegerToString(_Num)
AND
DB_LeaderLog_IntString(_Num, _NumStr)
THEN
NOT DB_LeaderLog_IntString(_Num, _NumStr);
LeaderLog_Log(_Type, _Prefix, _Str1, _Prefix2,_NumStr, _Suffix);

PROC
LeaderLog_LogIntWithString((STRING)_Type, (STRING)_Prefix, (STRING)_Str1, (STRING)_Prefix2, (INTEGER)_Num, (STRING)_Prefix3, (INTEGER)_Num2, (STRING)_Suffix)
AND
LeaderLog_QRY_LogTypeEnabled(_Type)
AND
LeaderLog_QRY_IntegerToString(_Num)
AND
DB_LeaderLog_IntString(_Num, _NumStr)
AND
LeaderLog_QRY_IntegerToString(_Num2)
AND
DB_LeaderLog_IntString(_Num2, _Num2Str)
THEN
NOT DB_LeaderLog_IntString(_Num, _NumStr);
NOT DB_LeaderLog_IntString(_Num2, _Num2Str);
LeaderLog_Log(_Type, _Prefix, _Str1, _Prefix2,_NumStr, _Prefix3, _Num2Str, _Suffix);

QRY
LeaderLog_QRY_LogInt((STRING)_Type, (STRING)_Prefix, (INTEGER)_Num, (STRING)_Suffix)
THEN
LeaderLog_LogInt(_Type, _Prefix, _Num, _Suffix);

QRY
LeaderLog_QRY_LogInt((STRING)_Type, (STRING)_Prefix, (INTEGER)_Num, (STRING)_Prefix2, (INTEGER)_Num2, (STRING)_Suffix)
THEN
LeaderLog_LogInt(_Type, _Prefix, _Num, _Prefix2, _Num2, _Suffix);

PROC
LeaderLog_RealToIntToString((STRING)_ID, (REAL)_a)
AND
Integer(_a, _ai)
AND
LeaderLog_QRY_IntegerToString(_ai)
AND
DB_LeaderLog_IntString(_ai, _NumStr)
THEN
NOT DB_LeaderLog_IntString(_ai, _NumStr);
DB_LeaderLog_Temp_RealString(_ID, _NumStr);

PROC
LeaderLog_RealToIntToString((STRING)_ID, (REAL)_a, (REAL)_b)
AND
DB_LeaderLog_Temp_RealString(_ID, _NumStr, _Num2Str)
THEN
NOT DB_LeaderLog_Temp_RealString(_ID, _NumStr, _Num2Str);

PROC
LeaderLog_RealToIntToString((STRING)_ID, (REAL)_a, (REAL)_b)
AND
Integer(_a, _ai)
AND
Integer(_b, _bi)
AND
LeaderLog_QRY_IntegerToString(_ai)
AND
DB_LeaderLog_IntString(_ai, _NumStr)
AND
LeaderLog_QRY_IntegerToString(_bi)
AND
DB_LeaderLog_IntString(_bi, _Num2Str)
THEN
NOT DB_LeaderLog_IntString(_ai, _NumStr);
NOT DB_LeaderLog_IntString(_bi, _Num2Str);
DB_LeaderLog_Temp_RealString(_ID, _NumStr, _Num2Str);

PROC
LeaderLog_RealToIntToString((STRING)_ID, (REAL)_a, (REAL)_b, (REAL)_c)
AND
DB_LeaderLog_Temp_RealString(_ID, _NumStr, _Num2Str, _Num3Str)
THEN
NOT DB_LeaderLog_Temp_RealString(_ID, _NumStr, _Num2Str, _Num3Str);

PROC
LeaderLog_RealToIntToString((STRING)_ID, (REAL)_a, (REAL)_b, (REAL)_c)
AND
Integer(_a, _ai)
AND
Integer(_b, _bi)
AND
Integer(_c, _ci)
AND
LeaderLog_QRY_IntegerToString(_ai)
AND
DB_LeaderLog_IntString(_ai, _NumStr)
AND
LeaderLog_QRY_IntegerToString(_bi)
AND
DB_LeaderLog_IntString(_bi, _Num2Str)
AND
LeaderLog_QRY_IntegerToString(_ci)
AND
DB_LeaderLog_IntString(_ci, _Num3Str)
THEN
NOT DB_LeaderLog_IntString(_ai, _NumStr);
NOT DB_LeaderLog_IntString(_bi, _Num2Str);
NOT DB_LeaderLog_IntString(_ci, _Num3Str);
DB_LeaderLog_Temp_RealString(_ID, _NumStr, _Num2Str, _Num3Str);

QRY
LeaderLog_QRY_RealToIntToString((STRING)_ID, (REAL)_a)
THEN
LeaderLog_RealToIntToString(_ID, _a);

QRY
LeaderLog_QRY_RealToIntToString((STRING)_ID, (REAL)_a, (REAL)_b)
THEN
LeaderLog_RealToIntToString(_ID, _a, _b);

QRY
LeaderLog_QRY_RealToIntToString((STRING)_ID, (REAL)_a, (REAL)_b, (REAL)_c)
THEN
LeaderLog_RealToIntToString(_ID, _a, _b, _c);
//END_REGION

//REGION REAL_TO_STRING
PROC
LeaderLog_RealToStringWithEvent((GUIDSTRING)_Target, (REAL)_Num, (STRING)_CompletionEvent)
THEN
SetVarFloat(_Target, "LeaderLog_RealValue", _Num);
SetVarString(_Target, "LeaderLog_RealToString_CompletionEvent", _CompletionEvent);
SetStoryEvent(_Target, "LeaderLog_Commands_RealToStringWithEvent");

QRY
LeaderLog_QRY_RealToStringWithEvent((GUIDSTRING)_Target, (REAL)_Num, (STRING)_CompletionEvent)
THEN
LeaderLog_RealToStringWithEvent(_Target, _Num, _CompletionEvent);

PROC
LeaderLog_RealToStringWithEvent((REAL)_Num, (STRING)_CompletionEvent)
AND
LeaderLib_Events_QRY_GetEventParser()
AND
DB_LeaderLib_EventParser(_EventParser)
THEN
SetVarFloat(_EventParser, "LeaderLog_RealValue", _Num);
SetVarString(_EventParser, "LeaderLog_RealToString_CompletionEvent", _CompletionEvent);
SetStoryEvent(_EventParser, "LeaderLog_Commands_RealToStringWithEvent");

QRY
LeaderLog_QRY_RealToStringWithEvent((REAL)_Num, (STRING)_CompletionEvent)
THEN
LeaderLog_RealToStringWithEvent(_Num, _CompletionEvent);

//Default event, if not set
IF
StoryEvent(_Target, "LeaderLog_Events_OnRealConverted")
AND
GetVarString(_Target, "LeaderLog_RealString", _Str)
THEN
LeaderLog_Log("DEBUG", "[LeaderLog:LeaderLog_Events_OnRealConverted] Real value: [",_Str,"].");

PROC
LeaderLog_RealToString((REAL)_Num, (STRING)_Prefix, (STRING)_Suffix)
AND
CharacterGetHostCharacter(_Host)
AND
GetPosition(_Host, _x,_y,_z)
AND
CreateItemTemplateAtPosition("LOOT_LeaderLib_BackPack_Invisible_98fa7688-0810-4113-ba94-9a8c8463f830", _x, _y, _z, _Dummy)
THEN
SetInvulnerable_UseProcSetInvulnerable(_Dummy, 1);
DB_LeaderLog_Temp_TraceDummy((GUIDSTRING)_Dummy);
LeaderLog_RealToString(_Dummy, _Num, _Prefix, _Suffix);

QRY
LeaderLog_QRY_RealToString((REAL)_Num, (STRING)_Prefix, (STRING)_Suffix)
THEN
LeaderLog_RealToString(_Num, _Prefix, _Suffix);

PROC
LeaderLog_RealToString((GUIDSTRING)_Object, (REAL)_Num, (STRING)_Prefix, (STRING)_Suffix)
THEN
SetVarString(_Object, "LeaderLog_RealToString_Prefix", _Prefix);
SetVarString(_Object, "LeaderLog_RealToString_Suffix", _Suffix);
SetVarFloat(_Object, "LeaderLog_RealToString_Value", _Num);
SetStoryEvent(_Object, "LeaderLog_Commands_RealToString");

QRY
LeaderLog_QRY_RealToString((GUIDSTRING)_Object, (REAL)_Num, (STRING)_Prefix, (STRING)_Suffix)
THEN
LeaderLog_RealToString(_Object, _Num, _Prefix, _Suffix);

PROC
LeaderLog_TracePosition((GUIDSTRING)_Object, (STRING)_Prefix, (STRING)_Suffix)
AND
GetPosition(_Object, _x, _y, _z)
THEN
SetVarString(_Object, "LeaderLog_PositionToString_Prefix", _Prefix);
SetVarString(_Object, "LeaderLog_PositionToString_Suffix", _Suffix);
SetVarFloat3(_Object, "LeaderLog_PositionToString_Position", _x, _y, _z);
SetStoryEvent(_Object, "LeaderLog_Commands_PositionToString");

PROC
LeaderLog_TracePosition((GUIDSTRING)_Object, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Prefix, (STRING)_Suffix)
THEN
SetVarString(_Object, "LeaderLog_PositionToString_Prefix", _Prefix);
SetVarString(_Object, "LeaderLog_PositionToString_Suffix", _Suffix);
SetVarFloat3(_Object, "LeaderLog_PositionToString_Position", _x, _y, _z);
SetStoryEvent(_Object, "LeaderLog_Commands_PositionToString");

QRY
LeaderLog_QRY_TracePosition((GUIDSTRING)_Object, (STRING)_Prefix, (STRING)_Suffix)
THEN
LeaderLog_TracePosition(_Object, _Prefix, _Suffix);

QRY
LeaderLog_QRY_TracePosition((GUIDSTRING)_Object, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Prefix, (STRING)_Suffix)
THEN
LeaderLog_TracePosition(_Object, _x, _y, _z, _Prefix, _Suffix);

QRY
LeaderLog_QRY_TracePositionWithoutObject((REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Prefix, (STRING)_Suffix)
THEN
LeaderLog_TracePositionWithoutObject(_x, _y, _z, _Prefix, _Suffix);

PROC
LeaderLog_TracePositionWithoutObject((REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Prefix, (STRING)_Suffix)
AND
CreateItemTemplateAtPosition("LOOT_LeaderLib_BackPack_Invisible_98fa7688-0810-4113-ba94-9a8c8463f830", _x, _y, _z, _Object)
THEN
SetInvulnerable_UseProcSetInvulnerable(_Object, 1);
DB_LeaderLog_Temp_TraceDummy((GUIDSTRING)_Object);
SetVarString(_Object, "LeaderLog_PositionToString_Prefix", _Prefix);
SetVarString(_Object, "LeaderLog_PositionToString_Suffix", _Suffix);
SetVarFloat3(_Object, "LeaderLog_PositionToString_Position", _x, _y, _z);
SetStoryEvent(_Object, "LeaderLog_Commands_PositionToString");
//END_REGION

//REGION FLAG_LOGS
PROC
LeaderLog_PrintFlag((GUIDSTRING)_Target, (STRING)_FlagName1, (INTEGER)_FlagVal1)
AND
LeaderLog_QRY_LogTypeEnabled("PRINT")
AND
IntegertoString(_FlagVal1, _FlagVal1Str)
THEN
LeaderLog_SetTarget(_Target);
LeaderLog_Log("PRINT", "[LeaderLog:PrintFlag] ", _FlagName1, " = ", _FlagVal1Str);

PROC
LeaderLog_LogFlag((GUIDSTRING)_Target, (STRING)_FlagName1, (INTEGER)_FlagVal1)
AND
LeaderLog_QRY_LogTypeEnabled("COMBAT")
AND
IntegertoString(_FlagVal1, _FlagVal1Str)
THEN
LeaderLog_SetTarget(_Target);
LeaderLog_Log("COMBAT", "[LeaderLog:LogFlag] ", _FlagName1, " = ", _FlagVal1Str);

PROC
LeaderLog_LogFlag((GUIDSTRING)_Target, (STRING)_FlagName1, (INTEGER)_FlagVal1, (STRING)_FlagName2, (INTEGER)_FlagVal2)
AND
LeaderLog_QRY_LogTypeEnabled("COMBAT")
AND
IntegertoString(_FlagVal1, _FlagVal1Str)
AND
IntegertoString(_FlagVal2, _FlagVal2Str)
THEN
LeaderLog_SetTarget(_Target);
LeaderLog_Log("COMBAT", "[LeaderLog:LogFlag] ", _FlagName1, " = ", _FlagVal1Str, " | ", _FlagName2, " = ", _FlagVal2Str);
//END_REGION

//REGION CLEANUP
QRY
LeaderLog_QRY_ClearCombinedString((STRING)_CombinedStr)
THEN
LeaderLog_ClearCombinedString(_CombinedStr);

PROC
LeaderLog_ClearCombinedString((STRING)_CombinedStr)
AND
DB_LeaderLog_Temp_CombinedString(_CombinedStr)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_CombinedStr);

QRY
LeaderLog_QRY_ClearCombinedString()
THEN
LeaderLog_ClearAllCombinedStrings();

PROC
LeaderLog_ClearAllCombinedStrings()
AND
DB_LeaderLog_Temp_CombinedString(_CombinedStr)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_CombinedStr);

PROC
LeaderLog_ClearTarget((GUIDSTRING)_Target)
AND
DB_LeaderLog_Temp_NextLogTarget(_Target)
THEN
NOT DB_LeaderLog_Temp_NextLogTarget(_Target);

PROC
LeaderLog_QRY_ClearTarget((GUIDSTRING)_Target)
THEN
LeaderLog_ClearTarget(_Target);

PROC
LeaderLog_ClearAllTargets()
AND
DB_LeaderLog_Temp_NextLogTarget(_Target)
THEN
NOT DB_LeaderLog_Temp_NextLogTarget(_Target);

QRY
LeaderLog_QRY_ClearAllTargets()
THEN
LeaderLog_ClearAllTargets();
//END_REGION

//REGION DUMMY_CLEANUP
IF
StoryEvent(_Dummy, "LeaderLog_Commands_Log")
AND
DB_LeaderLog_Temp_TraceDummy(_Dummy)
AND
ObjectIsItem((ITEMGUID)_Dummy, 1)
THEN
SetInvulnerable_UseProcSetInvulnerable(_Dummy, 0);
ItemRemove(_Dummy);
NOT DB_LeaderLog_Temp_TraceDummy(_Dummy);
//END_REGION

//REGION UPDATES
//Enable strict logging mode (less QRY spam)
PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
NOT SysIsActive("LeaderLib_00_0_TS_StrictLogCalls")
AND
NOT SysIsActive("LeaderLib_00_0_TS_AllLogging")
THEN
LeaderLog_Internal_ToggleLogging(0);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
