Version 1
SubGoalCombiner SGC_AND
INITSECTION
//Initializing the mod version here, so settings will use this version
LeaderUpdater_Register_Mod("LeaderLib", "LaughingLeader", 1,7,21,6);
LeaderUpdater_Register_UUID("LeaderLib", "LaughingLeader", 7e737d2f-31d2-4751-963f-be6ccc59cd0c);
LeaderUpdater_Register_ActiveGoal("LeaderLib", "LaughingLeader", "LeaderLib_ZZZ_Updater");
LeaderLib_Register_ModMenuByUUID("7e737d2f-31d2-4751-963f-be6ccc59cd0c", "LeaderLib_SettingsMenu", "[LeaderLib] Settings", "LeaderLib", "LaughingLeader");

KBSECTION
//REGION INIT_EVENT
//Moved the init rules to LeaderLib_11_ZZZ_Init, so it only fires once per GameStarted event

PROC
LeaderLib_System_ResetInit()
THEN
SysClear("DB_LeaderLib_Initialized", 1);
GlobalClearFlag("LeaderLib_Initialized");
//END_REGION

//REGION HOST_FLAGGING
IF
StoryEvent(_,"LeaderLib_Initialized")
THEN
LeaderLib_System_MarkHost();

PROC
LeaderLib_System_MarkHost()
AND
CharacterGetHostCharacter(_Host)
AND
UserGetFlag(_Host, "LeaderLib_IsHost", 0)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:System] Flagged host user.");
UserSetFlag(_Host, "LeaderLib_IsHost", 0);

PROC
LeaderLib_System_MarkHost()
AND
CharacterGetHostCharacter(_Host)
AND
DB_IsPlayer(_Player)
AND
_Player != _Host
AND
NOT LeaderLib_Helper_QRY_UserMatch(_Player, _Host)
AND
UserGetFlag(_Player, "LeaderLib_IsHost", 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:System] Cleared host flag from non-host user.");
UserClearFlag(_Player, "LeaderLib_IsHost", 0);

PROC
LeaderLib_System_MarkHost()
AND
NOT CharacterGetHostCharacter(_)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:System][ERROR] No host character found.");
//END_REGION

//REGION ITERATOR
PROC
LeaderLib_CreateIterator((STRING)_IteratorName, (INTEGER)_MaxInt)
THEN
LeaderLib_Helper_CreateIteratorDB(_IteratorName, _MaxInt);

PROC
LeaderLib_Helper_CreateIteratorDB((STRING)_IteratorName, (INTEGER)_MaxInt)
THEN
LeaderLib_Helper_Internal_CreateIteratorDB_Run(_IteratorName, 0, _MaxInt);

PROC
LeaderLib_Helper_Internal_CreateIteratorDB_Run((STRING)_IteratorName, (INTEGER)_CurrentInt, (INTEGER)_MaxInt)
AND
_CurrentInt < _MaxInt
AND
IntegerSum(_CurrentInt, 1, _NextInt)
THEN
DB_LeaderLib_Iterator(_IteratorName, _CurrentInt);
LeaderLib_Helper_Internal_CreateIteratorDB_Run(_IteratorName, _NextInt, _MaxInt);
//END_REGION

//REGION EDITOR_MODE_FLAG
IF
GameModeStarted(_, 1)
THEN
GlobalSetFlag("LeaderLib_IsEditorMode");
//END_REGION

//REGION GAME_MODE_VALUES
IF
GameModeStarted(_Mode, _IsEditorMode)
THEN
SysClear("DB_LeaderLib_GameMode", 2);
DB_LeaderLib_GameMode(_Mode, _IsEditorMode);
//END_REGION

//REGION EXTENDER
IF
GameModeStarted(_,_)
THEN
LeaderLib_System_SetExtenderFlag();

QRY
LeaderLib_QRY_ExtenderIsActive()
// [BEGIN_NO_OSITOOLS]
AND
1 == 0
// [END_NO_OSITOOLS]
THEN
DB_NOOP(1);

PROC
LeaderLib_System_SetExtenderFlag()
AND
GlobalGetFlag("LeaderLib_ExtenderIsActive", 0)
AND
LeaderLib_QRY_ExtenderIsActive()
THEN
GlobalSetFlag("LeaderLib_ExtenderIsActive");
LeaderLib_Extender_Enabled(1);

PROC
LeaderLib_System_SetExtenderFlag()
AND
GlobalGetFlag("LeaderLib_ExtenderIsActive", 1)
AND
NOT LeaderLib_QRY_ExtenderIsActive()
THEN
GlobalClearFlag("LeaderLib_ExtenderIsActive");
LeaderLib_Extender_Enabled(0);

PROC
LeaderLib_Extender_Enabled((INTEGER)_Enabled)
THEN
DB_NOOP(1);
//END_REGION

//REGION LUA_INIT
PROC
LeaderLib_StoryStarted()
THEN
DB_LeaderLib_GameStarted(1);
NOT DB_LeaderLib_Extender_LuaInitialized(1);
/* [OSITOOLS_ONLY]
DB_LeaderLib_Extender_LuaInitialized(1);
*/

/* [OSITOOLS_ONLY]
IF
SavegameLoading(_,_,_,_)
AND
//NOT DB_LeaderLib_Mods_Registered(7e737d2f-31d2-4751-963f-be6ccc59cd0c, _, _, _, _, _, _, _, _)
NOT DB_LeaderLib_Extender_LuaInitialized(1)
THEN
DB_LeaderLib_Extender_LuaInitialized(1);
*/
//END_REGION

//REGION DEBUG_MODE_LUA
/* [OSITOOLS_ONLY]
IF
StoryEvent(_, "LeaderLib_Initialized")
AND
GlobalGetFlag("LeaderLib_DebugModeEnabled", 1)
THEN
NRD_ModCall("LeaderLib", "DebugInit");
*/
//END_REGION

//REGION GAME_STARTED_AFTER_SAVE_LOADED
IF
SavegameLoading(_,_,_,_)
THEN
LeaderLib_System_SetExtenderFlag();
DB_LeaderLib_System_Temp_SaveLoad(1);

IF
GameStarted(_,_)
AND
NOT DB_LeaderLib_GameStarted(1)
THEN
DB_LeaderLib_GameStarted(1);

IF
GameStarted(_,_)
AND
DB_LeaderLib_System_Temp_SaveLoad(1)
THEN
NOT DB_LeaderLib_System_Temp_SaveLoad(1);
LeaderLib_OnSaveLoaded();

PROC
LeaderLib_OnSaveLoaded()
THEN
DB_NOOP(1);
//END_REGION

//REGION DIFFICULTY
/*
0 -> Story
1 -> Casual
2 -> Normal
3 -> Hardcore
4 -> Honour
*/
IF
DifficultyChanged(_DifficultyLevel)
AND
DB_LeaderLib_GameDifficulty(_Last)
THEN
NOT DB_LeaderLib_GameDifficulty(_Last);

IF
DifficultyChanged(_DifficultyLevel)
THEN
DB_LeaderLib_GameDifficulty(_DifficultyLevel);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
