Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LeaderLib_Array_Length(_ID, _Length)
//DB_LeaderLib_Array_Data(_ID, _Index, _Value)
//DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value)
//DB_LeaderLib_Array_Iterator(_ID, _CurrentIndex)

/*Temp*/
//DB_LeaderLib_Array_Temp_RandomResult(_ID, _Index, _Value)
//DB_LeaderLib_Array_Temp_ArrayIteratorBuilder(_ID, _CurrentIndex, _Length)
//DB_LeaderLib_Array_Temp_PopValue(_ID, _Value)
//DB_LeaderLib_Array_Temp_FirstEntry(_ID, _Index, _Value)
KBSECTION
//REGION ARRAY_LENGTH
QRY
LeaderLib_Array_QRY_RebuildArrayLength((STRING)_ID, (STRING)_ArrayType)
THEN
LeaderLib_Array_RebuildArrayLength(_ID, _ArrayType);

PROC
LeaderLib_Array_RebuildArrayLength((STRING)_ID, (STRING)_ArrayType)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
THEN
NOT DB_LeaderLib_Array_Length(_ID, _Length);

PROC
LeaderLib_Array_RebuildArrayLength((STRING)_ID, (STRING)_ArrayType)
THEN
DB_LeaderLib_Array_Length(_ID, 0);

PROC
LeaderLib_Array_RebuildArrayLength((STRING)_ID, "Array")
AND
DB_LeaderLib_Array_Data(_ID, _Index, _Value)
AND
DB_LeaderLib_Array_Length(_ID, _Total)
AND
IntegerSum(_Total, 1, _NewTotal)
THEN
NOT DB_LeaderLib_Array_Length(_ID, _Total);
DB_LeaderLib_Array_Length(_ID, _NewTotal);

PROC
LeaderLib_Array_RebuildArrayLength((STRING)_ID, "Dictionary")
AND
DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value)
AND
DB_LeaderLib_Array_Length(_ID, _Total)
AND
IntegerSum(_Total, 1, _NewTotal)
THEN
NOT DB_LeaderLib_Array_Length(_ID, _Total);
DB_LeaderLib_Array_Length(_ID, _NewTotal);

PROC
LeaderLib_Array_IncreaseArrayLength((STRING)_ID)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
AND
IntegerSum(_Length, 1, _NextLength)
THEN
NOT DB_LeaderLib_Array_Length(_ID, _Length);
DB_LeaderLib_Array_Length(_ID, _NextLength);
DB_LeaderLib_Array_Iterator(_ID, _NextLength);

PROC
LeaderLib_Array_DecreaseArrayLength((STRING)_ID)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
AND
IntegerSubtract(_Length, 1, _NextLength)
THEN
NOT DB_LeaderLib_Array_Length(_ID, _Length);
NOT DB_LeaderLib_Array_Iterator(_ID, _Length);
DB_LeaderLib_Array_Length(_ID, _NextLength);
//END_REGION

//REGION ARRAY_NEW
PROC
LeaderLib_Array_NewArray((STRING)_ID)
AND
NOT DB_LeaderLib_Array_Length(_ID, _)
THEN
DB_LeaderLib_Array_Length(_ID, 0);
DB_LeaderLib_Array_Iterator(_ID, 0);
//END_REGION

//REGION ARRAY_ADD
PROC
LeaderLib_Array_AddToArray((STRING)_ID, (STRING)_Value)
AND
NOT DB_LeaderLib_Array_Length(_ID, _)
THEN
LeaderLib_Array_NewArray(_ID);

PROC
LeaderLib_Array_AddToArray((STRING)_ID, (STRING)_Value)
AND
DB_LeaderLib_Array_Length(_ID, _NextIndex)
THEN
DB_LeaderLib_Array_Data(_ID, _NextIndex, _Value);
LeaderLib_Array_IncreaseArrayLength(_ID);

PROC
LeaderLib_Array_AddToArrayAtIndex((STRING)_ID, (STRING)_Value, (INTEGER)_Index)
AND
NOT DB_LeaderLib_Array_Temp_Added(_ID, _Value, _Index)
AND
NOT DB_LeaderLib_Array_Data(_ID, _, _)
THEN
LeaderLib_Array_AddToArray(_ID, _Value);
DB_LeaderLib_Array_Temp_Added(_ID, _Value, _Index);

PROC
LeaderLib_Array_AddToArrayAtIndex((STRING)_ID, (STRING)_Value, (INTEGER)_Index)
AND
NOT DB_LeaderLib_Array_Temp_Added(_ID, _Value, _Index)
THEN
LeaderLib_Array_ShiftArrayDown(_ID, _Index);
DB_LeaderLib_Array_Data(_ID, _Index, _Value);
LeaderLib_Array_IncreaseArrayLength(_ID);
DB_LeaderLib_Array_Temp_Added(_ID, _Value, _Index);

PROC
LeaderLib_Array_AddToArrayAtIndex((STRING)_ID, (STRING)_Value, (INTEGER)_Index)
AND
DB_LeaderLib_Array_Temp_Added(_ID, _Value, _Index)
THEN
NOT DB_LeaderLib_Array_Temp_Added(_ID, _Value, _Index);

PROC
LeaderLib_Array_ShiftArrayDown((STRING)_ID, (INTEGER)_AtIndex)
AND
DB_LeaderLib_Array_Data(_ID, _Index, _Value)
AND
_Index >= _AtIndex
AND
IntegerSum(_Index, 1, _NextIndex)
THEN
NOT DB_LeaderLib_Array_Data(_ID, _Index, _Value);
DB_LeaderLib_Array_Data(_ID, _NextIndex, _Value);

PROC
LeaderLib_Array_ShiftArrayUp((STRING)_ID, (INTEGER)_StartIndex)
AND
DB_LeaderLib_Array_Data(_ID, _Index, _Value)
AND
_Index > _StartIndex
AND
IntegerSubtract(_Index, 1, _NextIndex)
THEN
NOT DB_LeaderLib_Array_Data(_ID, _Index, _Value);
DB_LeaderLib_Array_Data(_ID, _NextIndex, _Value);
//END_REGION

//REGION ARRAY_REMOVE
PROC
LeaderLib_Array_RemoveFromArray((STRING)_ID, (INTEGER)_Index, (STRING)_Value)
AND
DB_LeaderLib_Array_Data(_ID, _Index, _Value)
THEN
NOT DB_LeaderLib_Array_Data(_ID, _Index, _Value);
LeaderLib_Array_DecreaseArrayLength(_ID);
LeaderLib_Array_ShiftArrayUp(_ID, _Index);

PROC
LeaderLib_Array_RemoveFromArrayAtIndex((STRING)_ID, (INTEGER)_Index)
AND
DB_LeaderLib_Array_Data(_ID, _Index, _Value)
THEN
NOT DB_LeaderLib_Array_Data(_ID, _Index, _Value);
LeaderLib_Array_DecreaseArrayLength(_ID);
LeaderLib_Array_ShiftArrayUp(_ID, _Index);

PROC
LeaderLib_Array_RemoveValueFromArray((STRING)_ID, (STRING)_Value)
AND
DB_LeaderLib_Array_Data(_ID, _Index, _Value)
THEN
NOT DB_LeaderLib_Array_Data(_ID, _Index, _Value);
LeaderLib_Array_DecreaseArrayLength(_ID);
LeaderLib_Array_ShiftArrayUp(_ID, _Index);
//END_REGION

//REGION ARRAY_FIRST_ENTRY
PROC
LeaderLib_Array_Internal_ClearFirstEntry((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_FirstEntry(_ID, _Index, _Value)
THEN
NOT DB_LeaderLib_Array_Temp_FirstEntry(_ID, _Index, _Value);

QRY
LeaderLib_Array_QRY_GetFirstEntry((STRING)_ID)
THEN
LeaderLib_Array_GetFirstEntry(_ID);

PROC
LeaderLib_Array_GetFirstEntry((STRING)_ID)
THEN
LeaderLib_Array_Internal_ClearFirstEntry(_ID);

PROC
LeaderLib_Array_GetFirstEntry((STRING)_ID)
AND
NOT DB_LeaderLib_Array_Iterator(_ID, _)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:DatabaseExtensions:GetFirstEntry] [ERROR] No iterator found for array [",_ID,"]!");

PROC
LeaderLib_Array_GetFirstEntry((STRING)_ID)
AND
NOT DB_LeaderLib_Array_Data(_ID, _, _)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:DatabaseExtensions:GetFirstEntry] [ERROR] No entries found for array [",_ID,"]!");

//The first entry should always be at 0 in most cases, if Pop is used
PROC
LeaderLib_Array_GetFirstEntry((STRING)_ID)
AND
NOT DB_LeaderLib_Array_Temp_FirstEntry(_ID, _, _)
AND
DB_LeaderLib_Array_Data(_ID, 0, _Value)
THEN
DB_LeaderLib_Array_Temp_FirstEntry(_ID, 0, _Value);
LeaderLog_Log("TRACE", "[LeaderLib:DatabaseExtensions:GetFirstEntry] Set first entry for array [",_ID,"] to index [0](",_Value,").");

PROC
LeaderLib_Array_GetFirstEntry((STRING)_ID)
AND
NOT DB_LeaderLib_Array_Temp_FirstEntry(_ID, _, _) // Skip if already set
AND
DB_LeaderLib_Array_Iterator(_ID, _Index)
AND
NOT DB_LeaderLib_Array_Temp_FirstEntry(_ID, _, _) // Skip if set during iteration
AND
IntegertoString(_Index, _IndexStr)
AND
LeaderLog_QRY_Log("TRACE", "[LeaderLib:DatabaseExtensions:GetFirstEntry] Checking index [",_IndexStr,"] in array [",_ID,"]")
AND
DB_LeaderLib_Array_Data(_ID, _Index, _Value)
THEN
LeaderLog_Log("TRACE", "[LeaderLib:DatabaseExtensions:GetFirstEntry] First entry for array [",_ID,"] set to [",_IndexStr,"](",_Value,").");
DB_LeaderLib_Array_Temp_FirstEntry(_ID, _Index, _Value);
//END_REGION

//REGION LAST_ENTRY
QRY
LeaderLib_Array_QRY_GetLastEntry((STRING)_ID)
AND
LeaderLib_Array_Internal_QRY_ClearLastEntry(_ID)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
AND
IntegerSubtract(_Length, 1, _LastIndex)
AND
DB_LeaderLib_Array_Data(_ID, _LastIndex, _Value)
THEN
DB_LeaderLib_Array_Temp_LastEntry(_ID, _LastIndex, _Value);

QRY
LeaderLib_Array_Internal_QRY_ClearLastEntry((STRING)_ID)
THEN
LeaderLib_Array_Internal_ClearLastEntry(_ID);

PROC
LeaderLib_Array_Internal_ClearLastEntry((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_LastEntry(_ID, _Index, _Value)
THEN
NOT DB_LeaderLib_Array_Temp_LastEntry(_ID, _Index, _Value);
//END_REGION

//REGION ARRAY_POP
QRY
LeaderLib_Array_QRY_Pop((STRING)_ID)
THEN
LeaderLib_Array_Pop(_ID);

/* Stack-like behavior. Removed the top entry at index 0, shifts all other entries up one, and sets DB_LeaderLib_Array_Temp_PopValue(_ID, _Value)
*/
PROC
LeaderLib_Array_Pop((STRING)_ID)
THEN
LeaderLib_Array_Internal_ClearPreviousPop(_ID);
LeaderLib_Array_GetFirstEntry(_ID);
LeaderLib_Array_Internal_Pop(_ID);

PROC
LeaderLib_Array_Internal_ClearPreviousPop((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_PopValue(_ID, _Value)
THEN
NOT DB_LeaderLib_Array_Temp_PopValue(_ID, _Value);

PROC
LeaderLib_Array_Internal_Pop((STRING)_ID)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
AND
_Length <= 0
AND
IntegertoString(_Length, _LengthStr)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:DatabaseExtensions:Pop] [ERROR] Error popping array [",_ID,"]: length is [",_LengthStr,"]!");

PROC
LeaderLib_Array_Internal_Pop((STRING)_ID)
AND
NOT DB_LeaderLib_Array_Length(_ID, _)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:DatabaseExtensions:Pop] [ERROR] Error popping array [",_ID,"]: length is null!");

PROC
LeaderLib_Array_Internal_Pop((STRING)_ID)
AND
NOT DB_LeaderLib_Array_Temp_FirstEntry(_ID, _, _)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:DatabaseExtensions:Pop] [ERROR] No first entry found for array [",_ID,"]!");

PROC
LeaderLib_Array_Internal_Pop((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_FirstEntry(_ID, _Index, _Value)
AND
NOT DB_LeaderLib_Array_Temp_PopValue(_ID, _)
THEN
DB_LeaderLib_Array_Temp_PopValue(_ID, _Value);
NOT DB_LeaderLib_Array_Temp_FirstEntry(_ID, _Index, _Value);
LeaderLib_Array_RemoveFromArray(_ID, _Index, _Value); // Important in case two entries have the same string value
LeaderLog_Log("TRACE", "[LeaderLib:DatabaseExtensions:Pop] Popped [",_Value,"] from array [",_ID,"].");
//END_REGION

//REGION ARRAY_RANDOM
QRY
LeaderLib_Array_QRY_Random((STRING)_ID)
THEN
LeaderLib_Array_Random(_ID);

PROC
LeaderLib_Array_Random((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_RandomResult(_ID, _Index, _Value)
THEN
NOT DB_LeaderLib_Array_Temp_RandomResult(_ID, _Index, _Value);

PROC
LeaderLib_Array_Random((STRING)_ID)
AND
LeaderLib_Array_QRY_ArrayIsPopulated(_ID)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
AND
IntegerSubtract(_Length, 1, _LastIndex)
AND
LeaderLib_Random_QRY(0, _LastIndex)
AND
DB_LeaderLib_Random(_Index)
AND
DB_LeaderLib_Array_Data(_ID, _Index, _Value)
THEN
NOT DB_LeaderLib_Random(_Index);
DB_LeaderLib_Array_Temp_RandomResult(_ID, _Index, _Value);
//END_REGION

//REGION ARRAY_CLEAR
QRY
LeaderLib_Array_Internal_QRY_ClearArrayEntries((STRING)_ID)
THEN
LeaderLib_Array_Internal_ClearArrayEntries(_ID);

PROC
LeaderLib_Array_Internal_ClearArrayEntries((STRING)_ID)
AND
DB_LeaderLib_Array_Data(_ID, _Index, _Value)
THEN
NOT DB_LeaderLib_Array_Data(_ID, _Index, _Value);

PROC
LeaderLib_Array_Internal_ClearArrayLength((STRING)_ID)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
THEN
NOT DB_LeaderLib_Array_Length(_ID, _Length);

PROC
LeaderLib_Array_Internal_ClearArrayIterators((STRING)_ID)
AND
DB_LeaderLib_Array_Iterator(_ID, _CurrentIndex)
THEN
NOT DB_LeaderLib_Array_Iterator(_ID, _CurrentIndex);

PROC
LeaderLib_Array_Internal_ClearArrayIterators((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_ArrayIteratorBuilder(_ID, _CurrentIndex, _Length)
THEN
NOT DB_LeaderLib_Array_Temp_ArrayIteratorBuilder(_ID, _CurrentIndex, _Length);

PROC
LeaderLib_Array_QRY_ClearArray((STRING)_ID)
THEN
LeaderLib_Array_ClearArray(_ID);

PROC
LeaderLib_Array_ClearArray((STRING)_ID)
THEN
LeaderLib_Array_Internal_ClearArrayEntries(_ID);
LeaderLib_Array_Internal_ClearArrayIterators(_ID);
LeaderLib_Array_Internal_ClearArrayLength(_ID);

PROC
LeaderLib_Array_ClearArray((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_PopValue(_ID, _Value)
THEN
NOT DB_LeaderLib_Array_Temp_PopValue(_ID, _Value);

PROC
LeaderLib_Array_ClearArray((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_FirstEntry(_ID, _Index, _Value)
THEN
NOT DB_LeaderLib_Array_Temp_FirstEntry(_ID, _Index, _Value);
//END_REGION

//REGION ARRAY_ITERATOR
QRY
LeaderLib_Array_QRY_BuildArrayIterator((STRING)_ID)
THEN
LeaderLib_Array_BuildArrayIterator(_ID);

/*
//Clear
PROC
LeaderLib_Array_BuildArrayIterator((STRING)_ID)
AND
DB_LeaderLib_Array_Iterator(_ID, _CurrentIndex)
THEN
NOT DB_LeaderLib_Array_Iterator(_ID, _CurrentIndex);
*/

//Clear2
PROC
LeaderLib_Array_BuildArrayIterator((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_ArrayIteratorBuilder(_ID, _CurrentIndex, _Length)
THEN
NOT DB_LeaderLib_Array_Temp_ArrayIteratorBuilder(_ID, _CurrentIndex, _Length);

PROC
LeaderLib_Array_BuildArrayIterator((STRING)_ID)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
AND
NOT DB_LeaderLib_Array_Iterator(_ID, _Length)
THEN
//LeaderLog_Log("DEBUG", "[LeaderLib:DatabaseExtensions:BuildArrayIterator] Building array iterator for [",_ID,"].");
LeaderLib_Array_Internal_StartArrayIteratorBuilder(_ID);

PROC
LeaderLib_Array_Internal_StartArrayIteratorBuilder((STRING)_ID)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
THEN
DB_LeaderLib_Array_Temp_ArrayIteratorBuilder(_ID, 0, _Length);
LeaderLib_Array_Internal_OnBuildArrayIterator(_ID);

PROC
LeaderLib_Array_Internal_OnBuildArrayIterator((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_ArrayIteratorBuilder(_ID, _CurrentIndex, _Length)
AND
_CurrentIndex <= _Length
AND
NOT DB_LeaderLib_Array_Iterator(_ID, _CurrentIndex)
THEN
DB_LeaderLib_Array_Iterator(_ID, _CurrentIndex);

PROC
LeaderLib_Array_Internal_OnBuildArrayIterator((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_ArrayIteratorBuilder(_ID, _CurrentIndex, _Length)
AND
_CurrentIndex <= _Length
AND
IntegerSum(_CurrentIndex, 1, _NextIndex)
THEN
NOT DB_LeaderLib_Array_Temp_ArrayIteratorBuilder(_ID, _CurrentIndex, _Length);
DB_LeaderLib_Array_Temp_ArrayIteratorBuilder(_ID, _NextIndex, _Length);
LeaderLib_Array_Internal_OnBuildArrayIterator(_ID);

/*
IF
DB_LeaderLib_Array_Iterator(_ID, _Index)
AND
IntegertoString(_Index, _IndexStr)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:DatabaseExtensions:ArrayIterator] Added [",_IndexStr,"] to array iterator [",_ID,"][",_SessionID,"].");
*/
//END_REGION

//REGION ARRAY_QUERIES
QRY
LeaderLib_Array_QRY_DataExists((STRING)_ID)
AND
DB_LeaderLib_Array_Data(_ID, _, _)
THEN
DB_NOOP(1);

QRY
LeaderLib_Array_QRY_EmptyLength((STRING)_ID)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
AND
_Length <= 0
THEN
DB_NOOP(1);

QRY
LeaderLib_Array_QRY_EmptyLength((STRING)_ID)
AND
NOT DB_LeaderLib_Array_Length(_ID, _)
THEN
DB_NOOP(1);

QRY
LeaderLib_Array_QRY_ArrayIsPopulated((STRING)_ID)
AND
LeaderLib_Array_QRY_DataExists(_ID)
AND
NOT LeaderLib_Array_QRY_EmptyLength(_ID)
THEN
DB_NOOP(1);

QRY
LeaderLib_Array_QRY_DictionaryDataExists((STRING)_ID)
AND
DB_LeaderLib_Dictionary_Data(_ID, _, _, _)
THEN
DB_NOOP(1);
//END_REGION

//REGION DICTIONARY_ADD
PROC
LeaderLib_Array_AddToDictionary((STRING)_ID, (STRING)_Key, (STRING)_Value)
AND
NOT DB_LeaderLib_Array_Length(_ID, _)
THEN
LeaderLib_Array_NewArray(_ID);

PROC
LeaderLib_Array_AddToDictionary((STRING)_ID, (STRING)_Key, (STRING)_Value)
AND
DB_LeaderLib_Array_Length(_ID, _NextIndex)
THEN
DB_LeaderLib_Dictionary_Data(_ID, _NextIndex, _Key, _Value);
LeaderLib_Array_IncreaseArrayLength(_ID);

PROC
LeaderLib_Array_AddToDictionaryAtIndex((STRING)_ID, (STRING)_Key, (STRING)_Value, (INTEGER)_Index)
AND
NOT DB_LeaderLib_Dictionary_Data(_ID, _Index, _, _)
THEN
DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value);
LeaderLib_Array_IncreaseArrayLength(_ID);
//LeaderLib_Array_RebuildArrayLength(_ID, "Dictionary");

QRY
LeaderLib_Array_QRY_DictionaryEntryMatch((STRING)_ID, (STRING)_Key1, (STRING)_Value1, (STRING)_Key2, (STRING)_Value2)
AND
_Value1 == _Value2
AND
_Key1 == _Key2
THEN
DB_NOOP(1);

PROC
LeaderLib_Array_AddToDictionaryAtIndex((STRING)_ID, (STRING)_Key, (STRING)_Value, (INTEGER)_Index)
AND
DB_LeaderLib_Dictionary_Data(_ID, _Index, _OtherKey, _OtherValue)
AND
NOT LeaderLib_Array_QRY_DictionaryEntryMatch(_ID, _Key, _Value, _OtherKey, _OtherValue)
THEN
LeaderLib_Array_ShiftDictionaryDown(_ID, _Index);
DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value);
LeaderLib_Array_IncreaseArrayLength(_ID);
//LeaderLib_Array_RebuildArrayLength(_ID, "Dictionary");

PROC
LeaderLib_Array_ShiftDictionaryDown((STRING)_ID, (INTEGER)_AtIndex)
AND
DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value)
AND
_Index >= _AtIndex
AND
IntegerSum(_Index, 1, _NextIndex)
THEN
NOT DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value);
DB_LeaderLib_Dictionary_Data(_ID, _NextIndex, _Key, _Value);

PROC
LeaderLib_Array_ShiftDictionaryUp((STRING)_ID, (INTEGER)_StartIndex)
AND
DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value)
AND
_Index > _StartIndex
AND
IntegerSubtract(_Index, 1, _NextIndex)
THEN
NOT DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value);
DB_LeaderLib_Dictionary_Data(_ID, _NextIndex, _Key, _Value);
//END_REGION

//REGION DICTIONARY_REMOVE
PROC
LeaderLib_Array_RemoveFromDictionary((STRING)_ID, (INTEGER)_Index, (STRING)_Key, (STRING)_Value)
AND
DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value)
THEN
NOT DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value);
LeaderLib_Array_DecreaseArrayLength(_ID);
LeaderLib_Array_ShiftDictionaryUp(_ID, _Index);

PROC
LeaderLib_Array_RemoveFromDictionaryAtIndex((STRING)_ID, (INTEGER)_Index)
AND
DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value)
THEN
NOT DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value);
LeaderLib_Array_DecreaseArrayLength(_ID);
LeaderLib_Array_ShiftDictionaryUp(_ID, _Index);

PROC
LeaderLib_Array_RemoveKeyFromDictionary((STRING)_ID, (STRING)_Key)
AND
DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value)
THEN
NOT DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value);
LeaderLib_Array_DecreaseArrayLength(_ID);
LeaderLib_Array_ShiftDictionaryUp(_ID, _Index);

PROC
LeaderLib_Array_RemoveValueFromDictionary((STRING)_ID, (STRING)_Value)
AND
DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value)
THEN
NOT DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value);
LeaderLib_Array_DecreaseArrayLength(_ID);
LeaderLib_Array_ShiftDictionaryUp(_ID, _Index);
//END_REGION

//REGION DICTIONARY_CLEAR
QRY
LeaderLib_Array_QRY_ClearDictionaryEntries((STRING)_ID)
THEN
LeaderLib_Array_ClearDictionaryEntries(_ID);

PROC
LeaderLib_Array_ClearDictionaryEntries((STRING)_ID)
AND
DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value)
THEN
NOT DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value);

PROC
LeaderLib_Array_ClearDictionaryLength((STRING)_ID)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
THEN
NOT DB_LeaderLib_Array_Length(_ID, _Length);

PROC
LeaderLib_Array_ClearDictionaryIterators((STRING)_ID)
AND
DB_LeaderLib_Array_Iterator(_ID, _CurrentIndex)
THEN
NOT DB_LeaderLib_Array_Iterator(_ID, _CurrentIndex);

PROC
LeaderLib_Array_ClearDictionaryIterators((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_ArrayIteratorBuilder(_ID, _CurrentIndex, _Length)
THEN
NOT DB_LeaderLib_Array_Temp_ArrayIteratorBuilder(_ID, _CurrentIndex, _Length);

PROC
LeaderLib_Array_ClearDictionary((STRING)_ID)
THEN
LeaderLib_Array_ClearDictionaryEntries(_ID);
LeaderLib_Array_ClearDictionaryIterators(_ID);
LeaderLib_Array_ClearDictionaryLength(_ID);

PROC
LeaderLib_Array_ClearDictionary((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_PopValue(_ID, _Value)
THEN
NOT DB_LeaderLib_Array_Temp_PopValue(_ID, _Value);

PROC
LeaderLib_Array_ClearDictionary((STRING)_ID)
AND
DB_LeaderLib_Array_Temp_FirstEntry(_ID, _Index, _Value)
THEN
NOT DB_LeaderLib_Array_Temp_FirstEntry(_ID, _Index, _Value);
//END_REGION

//REGION DEBUG
QRY
LeaderLib_Array_Debug_QRY_Print((STRING)_ID)
THEN
LeaderLib_Array_Debug_Print(_ID);

PROC
LeaderLib_Array_Debug_Print((STRING)_ID)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
AND
IntegertoString(_Length, _LengthStr)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib_00_2_DatabaseExtensions:Array:Debug:Print] Array (",_ID,") Length: (",_LengthStr,")");

PROC
LeaderLib_Array_Debug_Print((STRING)_ID)
AND
NOT DB_LeaderLib_Array_Length(_ID, _)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib_00_2_DatabaseExtensions:Array:Debug:Print] Array (",_ID,") Length: (-1)");

PROC
LeaderLib_Array_Debug_Print((STRING)_ID)
AND
DB_LeaderLib_Array_Data(_ID, _Index, _Val)
AND
IntegertoString(_Index, _IndexStr)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib_00_2_DatabaseExtensions:Array:Debug:Print] Array (",_ID,") Index (",_IndexStr,") Value (",_Val,")");

/*
PROC
LeaderLib_Array_AddToArray((STRING)_ID, (STRING)_Value)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
AND
IntegerSubtract(_Length, 1, _AddedIndex)
AND
IntegertoString(_AddedIndex, _AddedIndexStr)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:DatabaseExtensions:AddToArray] Added '",_Value,"' to array [",_ID,"] at index [",_AddedIndexStr,"].");
*/

/*
PROC
LeaderLib_Array_AddToDictionaryAtIndex((STRING)_ID, (STRING)_Key, (STRING)_Value, (INTEGER)_Index)
AND
DB_LeaderLib_Dictionary_Data(_ID, _Index, _Key, _Value)
AND
IntegertoString(_Index, _IndexStr)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:DatabaseExtensions:AddToArray] Added [",_Key,"] = '",_Value,"' to dictionary [",_ID,"] at index [",_IndexStr,"].");

PROC
LeaderLib_Array_AddToDictionary((STRING)_ID, (STRING)_Key, (STRING)_Value)
AND
DB_LeaderLib_Array_Length(_ID, _Length)
AND
IntegerSubtract(_Length, 1, _AddedIndex)
AND
IntegertoString(_AddedIndex, _AddedIndexStr)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:DatabaseExtensions:AddToArray] Added '",_Value,"' to array [",_ID,"] at index [",_AddedIndexStr,"].");
*/

/*
PROC
LeaderLib_Array_ShiftArrayDown((STRING)_ID, (INTEGER)_AtIndex)
AND
DB_LeaderLib_Array_Data(_ID, _Index, _Value)
AND
_Index > _AtIndex
AND
IntegertoString(_Index, _IndexStr)
AND
IntegertoString(_AtIndex, _AtIndexStr)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:DatabaseExtensions:ShiftArrayDown(",_AtIndexStr,")] Shifted '",_Value,"' in array [",_ID,"] down, to index [",_IndexStr,"].");

PROC
LeaderLib_Array_ShiftArrayUp((STRING)_ID, (INTEGER)_StartIndex)
AND
DB_LeaderLib_Array_Data(_ID, _Index, _Value)
AND
_Index >= _StartIndex
AND
IntegertoString(_Index, _IndexStr)
AND
IntegertoString(_StartIndex, _StartIndexStr)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:DatabaseExtensions:ShiftArrayUp(",_StartIndexStr,")] Shifted '",_Value,"' in array [",_ID,"] up, to index [",_IndexStr,"].");
*/
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
