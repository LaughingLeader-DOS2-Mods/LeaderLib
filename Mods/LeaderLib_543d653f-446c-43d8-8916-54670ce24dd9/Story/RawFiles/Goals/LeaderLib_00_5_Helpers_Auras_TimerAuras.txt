Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
//REGION REGISTER
PROC
LeaderLib_Auras_Register_TimerAura((STRING)_AuraID, (INTEGER)_DefaultTimerRate, (REAL)_Radius, (INTEGER)_HitCharacters, (INTEGER)_HitItems)
THEN
LeaderLib_Auras_Register_TimerAura(_AuraID, _DefaultTimerRate, _Radius, _HitCharacters, _HitItems, 0);

PROC
LeaderLib_Auras_Register_TimerAura((STRING)_AuraID, (INTEGER)_DefaultTimerRate, (REAL)_Radius, (INTEGER)_HitCharacters, (INTEGER)_HitItems, (INTEGER)_HitSelf)
THEN
LeaderLib_Auras_Register_TimerAura(_AuraID, _DefaultTimerRate, _Radius, _HitCharacters, _HitItems, _HitSelf, 0);

PROC
LeaderLib_Auras_Register_TimerAura((STRING)_AuraID, (INTEGER)_DefaultTimerRate, (REAL)_Radius, (INTEGER)_HitCharacters, (INTEGER)_HitItems, (INTEGER)_HitSelf, (INTEGER)_TrackTargets)
AND
IntegerMax(_DefaultTimerRate, 1, _CappedTimerRate)
THEN
DB_LeaderLib_Auras_TimerAuras(_AuraID, _Radius, _CappedTimerRate, _HitCharacters, _HitItems, _HitSelf, _TrackTargets);
//END_REGION

//REGION AURA_APPLY
PROC
LeaderLib_Auras_ApplyTimerAura((GUIDSTRING)_Source, (STRING)_AuraID)
AND
DB_LeaderLib_Auras_TimerAuras(_AuraID, _DefaultRadius, _DefaultTimerRate, _HitCharacters, _HitItems, _HitSelf, _TrackTargets)
THEN
LeaderLib_Auras_ApplyTimerAura(_Source, _AuraID, _DefaultTimerRate, _DefaultRadius, _HitCharacters, _HitItems, _HitSelf, _TrackTargets);

PROC
LeaderLib_Auras_ApplyTimerAura((GUIDSTRING)_Source, (STRING)_AuraID, (INTEGER)_PulseTimerRate)
AND
DB_LeaderLib_Auras_TimerAuras(_AuraID, _DefaultRadius, _DefaultTimerRate, _HitCharacters, _HitItems, _HitSelf, _TrackTargets)
THEN
LeaderLib_Auras_ApplyTimerAura(_Source, _AuraID, _PulseTimerRate, _DefaultRadius, _HitCharacters, _HitItems, _HitSelf, _TrackTargets);

PROC
LeaderLib_Auras_ApplyTimerAura((GUIDSTRING)_Source, (STRING)_AuraID, (INTEGER)_PulseTimerRate, (REAL)_Radius)
AND
DB_LeaderLib_Auras_TimerAuras(_AuraID, _DefaultRadius, _DefaultTimerRate, _DefaultHitCharacters, _DefaultHitItems, _DefaultHitSelf, _DefaultTrackTargets)
THEN
LeaderLib_Auras_ApplyTimerAura(_Source, _AuraID, _PulseTimerRate, _Radius, _DefaultHitCharacters, _DefaultHitItems, _DefaultHitSelf, _DefaultTrackTargets);

PROC
LeaderLib_Auras_ApplyTimerAura((GUIDSTRING)_Source, (STRING)_AuraID, (INTEGER)_PulseTimerRate, (REAL)_Radius)
AND
DB_LeaderLib_Auras_TimerAuras(_AuraID, _DefaultRadius, _DefaultTimerRate, _DefaultHitCharacters, _DefaultHitItems, _DefaultHitSelf, _DefaultTrackTargets)
THEN
LeaderLib_Auras_ApplyTimerAura(_Source, _AuraID, _PulseTimerRate, _Radius, _DefaultHitCharacters, _DefaultHitItems, _DefaultHitSelf, _DefaultTrackTargets);

PROC
LeaderLib_Auras_ApplyTimerAura((GUIDSTRING)_Source, (STRING)_AuraID, (INTEGER)_PulseTimerRate, (REAL)_Radius, (INTEGER)_HitCharacters)
AND
DB_LeaderLib_Auras_TimerAuras(_AuraID, _DefaultRadius, _DefaultTimerRate, _DefaultHitCharacters, _DefaultHitItems, _DefaultHitSelf, _DefaultTrackTargets)
THEN
LeaderLib_Auras_ApplyTimerAura(_Source, _AuraID, _PulseTimerRate, _Radius, _HitCharacters, _DefaultHitItems, _DefaultHitSelf, _DefaultTrackTargets);

PROC
LeaderLib_Auras_ApplyTimerAura((GUIDSTRING)_Source, (STRING)_AuraID, (INTEGER)_PulseTimerRate, (REAL)_Radius, (INTEGER)_HitCharacters, (INTEGER)_HitItems)
AND
DB_LeaderLib_Auras_TimerAuras(_AuraID, _DefaultRadius, _DefaultTimerRate, _DefaultHitCharacters, _DefaultHitItems, _DefaultHitSelf, _DefaultTrackTargets)
THEN
LeaderLib_Auras_ApplyTimerAura(_Source, _AuraID, _PulseTimerRate, _Radius, _HitCharacters, _HitItems, _DefaultHitSelf, _DefaultTrackTargets);

PROC
LeaderLib_Auras_ApplyTimerAura((GUIDSTRING)_Source, (STRING)_AuraID, (INTEGER)_PulseTimerRate, (REAL)_Radius, (INTEGER)_HitCharacters, (INTEGER)_HitItems, (INTEGER)_HitSelf)
AND
DB_LeaderLib_Auras_TimerAuras(_AuraID, _DefaultRadius, _DefaultTimerRate, _DefaultHitCharacters, _DefaultHitItems, _DefaultHitSelf, _DefaultTrackTargets)
THEN
LeaderLib_Auras_ApplyTimerAura(_Source, _AuraID, _PulseTimerRate, _Radius, _HitCharacters, _HitItems, _HitSelf, _DefaultTrackTargets);

PROC
LeaderLib_Auras_ApplyTimerAura((GUIDSTRING)_Source, (STRING)_AuraID, (INTEGER)_PulseTimerRate, (REAL)_Radius, (INTEGER)_HitCharacters, (INTEGER)_HitItems, (INTEGER)_HitSelf, (INTEGER)_TrackTargets)
AND
NOT DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _)
AND
GetUUID(_Source, _UUID)
AND
LeaderLib_StringExt_QRY_SafeCombine("LeaderLib_AuraTimerName", "Timers_LeaderLib_Auras_", _AuraID, _UUID)
AND
DB_LeaderLib_StringExt_CombineResult("LeaderLib_AuraTimerName", _TimerName)
THEN
NOT DB_LeaderLib_StringExt_CombineResult("LeaderLib_AuraTimerName", _TimerName);
DB_LeaderLib_Auras_Temp_ActiveTimerAuras(_Source, _AuraID, _PulseTimerRate, _Radius, _HitCharacters, _HitItems, _HitSelf, _TrackTargets);
DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _TimerName);
LeaderLib_ToggleScripts_EnableScriptForObject(_Source, "LeaderLib_Auras_TimerAuraEnabled", "LeaderLib");
LeaderLib_Auras_OnAuraApplied(_Source, _AuraID);
LeaderLib_Auras_PulseAura(_Source, _AuraID);
//END_REGION

//REGION AURA_REMOVE
PROC
LeaderLib_Auras_RemoveTimerAura((GUIDSTRING)_Source, (STRING)_AuraID)
THEN
LeaderLib_Auras_Internal_ClearData(_Source, _AuraID);

PROC
LeaderLib_Auras_RemoveTimerAura((GUIDSTRING)_Source, (STRING)_AuraID)
AND
DB_LeaderLib_Auras_Temp_ActiveTimerAuras(_Source, _AuraID, _PulseTimerRate, _Radius, _HitCharacters, _HitItems, _HitSelf, _TrackTargets)
THEN
NOT DB_LeaderLib_Auras_Temp_ActiveTimerAuras(_Source, _AuraID, _PulseTimerRate, _Radius, _HitCharacters, _HitItems, _HitSelf, _TrackTargets);

PROC
LeaderLib_Auras_RemoveTimerAura((GUIDSTRING)_Source, (STRING)_AuraID)
AND
DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _TimerName)
THEN
NOT DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _TimerName);
TimerCancel(_TimerName);

PROC
LeaderLib_Auras_RemoveTimerAura((GUIDSTRING)_Source, (STRING)_AuraID)
AND
NOT DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _, _)
THEN
LeaderLib_ToggleScripts_DisableScriptForObject(_Source, "LeaderLib_Auras_TimerAuraEnabled", "LeaderLib");
//END_REGION

//REGION PULSE
PROC
LeaderLib_Auras_PulseAura((GUIDSTRING)_Source, (STRING)_AuraID)
AND
DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _TimerName)
THEN
TimerCancel(_TimerName);

PROC
LeaderLib_Auras_PulseAura((GUIDSTRING)_Source, (STRING)_AuraID)
AND
NOT DB_LeaderLib_Auras_Temp_Pulsing(_Source, _)
AND
DB_LeaderLib_Auras_Temp_ActiveTimerAuras(_Source, _AuraID, _PulseTimerRate, _Radius, _HitCharacters, _HitItems, _HitSelf, _TrackTargets)
THEN
DB_LeaderLib_Auras_Temp_Pulsing(_Source, _AuraID);
SetVarString(_Source, "LeaderLib_Auras_ID", _AuraID);
SetVarFloat(_Source, "LeaderLib_Auras_Radius", _Radius);
SetVarInteger(_Source, "LeaderLib_Auras_PulseCharacters", _HitCharacters);
SetVarInteger(_Source, "LeaderLib_Auras_PulseItems", _HitItems);
SetStoryEvent(_Source, "LeaderLib_Auras_PulseNow");
LeaderLib_Auras_OnPulse(_Source, _AuraID);

PROC
LeaderLib_Auras_Internal_OnPulseHit((GUIDSTRING)_Source, (GUIDSTRING)_Target, (STRING)_AuraID)
AND
_Source == _Target
AND
DB_LeaderLib_Auras_Temp_ActiveTimerAuras(_Source, _AuraID, _PulseTimerRate, _Radius, _HitCharacters, _HitItems, 1, _TrackTargets)
THEN
LeaderLib_Auras_OnTargetFound(_Source, _Target, _AuraID);
//END_REGION

//REGION TURN_COUNT
PROC
LeaderLib_Auras_Internal_OnTimerFinished((GUIDSTRING)_Source, (STRING)_AuraID, (STRING)_TimerName)
AND
DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _TimerName)
THEN
LeaderLib_Auras_PulseAura(_Source, _AuraID);

PROC
LeaderLib_Auras_OnPulseComplete((GUIDSTRING)_Source, (STRING)_AuraID)
AND
DB_LeaderLib_Auras_Temp_ActiveTimerAuras(_Source, _AuraID, _PulseTimerRate, _Radius, _HitCharacters, _HitItems, _HitSelf, _TrackTargets)
THEN
LeaderLib_Auras_Internal_OnTimerPulseComplete(_Source, _AuraID, _PulseTimerRate, _TrackTargets);

PROC
LeaderLib_Auras_Internal_OnTimerPulseComplete((GUIDSTRING)_Source, (STRING)_AuraID, (INTEGER)_PulseTimerRate, 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib_00_5_Helpers_Auras_TimerAuras:OnTimerPulseComplete] Checking targets for aura (",_AuraID,").");
LeaderLib_Auras_Internal_CheckPulseTargets(_Source, _AuraID);

PROC
LeaderLib_Auras_Internal_OnTimerPulseComplete((GUIDSTRING)_Source, (STRING)_AuraID, (INTEGER)_PulseTimerRate, (INTEGER)_TrackTargets)
AND
DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _TimerName)
THEN
TimerCancel(_TimerName);
TimerLaunch(_TimerName, _PulseTimerRate);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"