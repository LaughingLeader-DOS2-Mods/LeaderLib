Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
//REGION REGISTER
PROC
LeaderLib_Auras_Register_TimerAura((STRING)_AuraID, (REAL)_Radius, (INTEGER)_DefaultTimerDelay, (INTEGER)_HitCharacters, (INTEGER)_HitItems)
THEN
LeaderLib_Auras_Register_TimerAura(_AuraID, _Radius, _DefaultTimerDelay, _HitCharacters, _HitItems, 0);

PROC
LeaderLib_Auras_Register_TimerAura((STRING)_AuraID, (REAL)_Radius, (INTEGER)_DefaultTimerDelay, (INTEGER)_HitCharacters, (INTEGER)_HitItems, (INTEGER)_HitSelf)
AND
IntegerMax(_DefaultTimerDelay, 1, _CappedTimerDelay)
THEN
DB_LeaderLib_Auras_TimerAuras(_AuraID, _Radius, _CappedTimerDelay, _HitCharacters, _HitItems, _HitSelf);
//END_REGION

//REGION AURA_REMOVE
PROC
LeaderLib_Auras_RemoveTimerAura((GUIDSTRING)_Source, (STRING)_AuraID)
AND
DB_LeaderLib_Auras_Temp_ActiveTimerAuras(_Source, _AuraID, _PulseTimerDelay, _Radius, _HitCharacters, _HitItems, _HitSelf)
THEN
NOT DB_LeaderLib_Auras_Temp_ActiveTimerAuras(_Source, _AuraID, _PulseTimerDelay, _Radius, _HitCharacters, _HitItems, _HitSelf);

PROC
LeaderLib_Auras_RemoveTimerAura((GUIDSTRING)_Source, (STRING)_AuraID)
AND
DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _TimerName)
THEN
NOT DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _TimerName);
TimerCancel(_TimerName);

PROC
LeaderLib_Auras_RemoveTimerAura((GUIDSTRING)_Source, (STRING)_AuraID)
AND
NOT DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _, _)
THEN
LeaderLib_ToggleScripts_DisableScriptForObject(_Source, "LeaderLib_Auras_TimerAuraEnabled", "LeaderLib");
//END_REGION

//REGION AURA_APPLY
PROC
LeaderLib_Auras_ApplyTimerAura((GUIDSTRING)_Source, (STRING)_AuraID)
AND
DB_LeaderLib_Auras_TimerAuras(_AuraID, _DefaultRadius, _DefaultTimerDelay, _HitCharacters, _HitItems, _HitSelf)
THEN
LeaderLib_Auras_ApplyTimerAura(_Source, _AuraID, _DefaultTimerDelay, _DefaultRadius, _HitCharacters, _HitItems, _HitSelf);

PROC
LeaderLib_Auras_ApplyTimerAura((GUIDSTRING)_Source, (STRING)_AuraID, (INTEGER)_PulseTimerDelay)
AND
DB_LeaderLib_Auras_TimerAuras(_AuraID, _DefaultRadius, _DefaultTimerDelay, _HitCharacters, _HitItems, _HitSelf)
THEN
LeaderLib_Auras_ApplyTimerAura(_Source, _AuraID, _PulseTimerDelay, _DefaultRadius, _HitCharacters, _HitItems, _HitSelf);

PROC
LeaderLib_Auras_ApplyTimerAura((GUIDSTRING)_Source, (STRING)_AuraID, (INTEGER)_PulseTimerDelay, (REAL)_Radius)
AND
DB_LeaderLib_Auras_TimerAuras(_AuraID, _DefaultRadius, _DefaultTimerDelay, _HitCharacters, _HitItems, _HitSelf)
THEN
LeaderLib_Auras_ApplyTimerAura(_Source, _AuraID, _PulseTimerDelay, _Radius, _HitCharacters, _HitItems, _HitSelf);

PROC
LeaderLib_Auras_ApplyTimerAura((GUIDSTRING)_Source, (STRING)_AuraID, (INTEGER)_PulseTimerDelay, (REAL)_Radius, (INTEGER)_HitCharacters, (INTEGER)_HitItems, (INTEGER)_HitSelf)
AND
NOT DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _)
AND
GetUUID(_Source, _UUID)
AND
StringConcatenate("Timers_LeaderLib_Auras_", _AuraID, _Msg1)
AND
StringConcatenate(_Msg1, "_", _Msg2)
AND
StringConcatenate(_Msg2, _UUID, _TimerName)
THEN
DB_LeaderLib_Auras_Temp_ActiveTimerAuras(_Source, _AuraID, _PulseTimerDelay, _Radius, _HitCharacters, _HitItems, _HitSelf);
DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _TimerName);
LeaderLib_Auras_PulseAura(_Source, _AuraID);
//END_REGION

//REGION PULSE
PROC
LeaderLib_Auras_PulseAura((GUIDSTRING)_Source, (STRING)_AuraID)
AND
DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _TimerName)
THEN
TimerCancel(_TimerName);

PROC
LeaderLib_Auras_PulseAura((GUIDSTRING)_Source, (STRING)_AuraID)
AND
NOT DB_LeaderLib_Auras_Temp_Pulsing(_Source, _)
AND
DB_LeaderLib_Auras_Temp_ActiveTimerAuras(_Source, _AuraID, _PulseTimerDelay, _Radius, _HitCharacters, _HitItems, _HitSelf)
THEN
DB_LeaderLib_Auras_Temp_Pulsing(_Source, _AuraID);
SetVarString(_Source, "LeaderLib_Auras_ID", _AuraID);
SetVarFloat(_Source, "LeaderLib_Auras_Radius", _Radius);
SetVarInteger(_Source, "LeaderLib_Auras_PulseCharacters", _HitCharacters);
SetVarInteger(_Source, "LeaderLib_Auras_PulseItems", _HitItems);
SetStoryEvent(_Source, "LeaderLib_Auras_PulseNow");
LeaderLib_Auras_OnPulse(_Source, _AuraID);
//END_REGION

//REGION TURN_COUNT
PROC
LeaderLib_Auras_Internal_OnTimerFinished((GUIDSTRING)_Source, (STRING)_AuraID, (STRING)_TimerName)
AND
DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _TimerName)
THEN
LeaderLib_Auras_PulseAura(_Source, _AuraID);

IF
StoryEvent(_Source, "LeaderLib_Auras_OnPulseComplete")
AND
DB_LeaderLib_Auras_Temp_Pulsing(_Source, _AuraID)
THEN
NOT DB_LeaderLib_Auras_Temp_Pulsing(_Source, _AuraID);

IF
StoryEvent(_Source, "LeaderLib_Auras_OnPulseComplete")
AND
DB_LeaderLib_Auras_Temp_ActiveTimerAuras(_Source, _AuraID, _PulseTimerDelay, _Radius, _HitCharacters, _HitItems, _HitSelf)
AND
DB_LeaderLib_Auras_Temp_TimerAuraData(_Source, _AuraID, _TimerName)
THEN
TimerCancel(_TimerName);
TimerLaunch(_TimerName, _PulseTimerDelay);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"