Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
//REGION PULSE
PROC
LeaderLib_Auras_OnPulse((GUIDSTRING)_Source, (STRING)_AuraID)
THEN
LeaderLib_Timers_StartObjectTimer(_Source, 50, "Timers_LeaderLib_Auras_OnPulseComplete", "LeaderLib_Auras_OnPulseComplete");
//END_REGION

PROC
LeaderLib_Auras_OnAuraApplied((GUIDSTRING)_Source, (STRING)_AuraID)
THEN
DB_NOOP(1);

//REGION PULSE_HIT
IF
CharacterCharacterEvent(_Source, _Target, "LeaderLib_Auras_OnPulseHit")
AND
DB_LeaderLib_Auras_Temp_Pulsing((GUIDSTRING)_Source, _AuraID)
THEN
LeaderLib_Auras_Internal_OnPulseHit((GUIDSTRING)_Source, (GUIDSTRING)_Target, _AuraID);

IF
CharacterItemEvent(_Source, _Target, "LeaderLib_Auras_OnPulseHit")
AND
DB_LeaderLib_Auras_Temp_Pulsing((GUIDSTRING)_Source, _AuraID)
THEN
LeaderLib_Auras_Internal_OnPulseHit((GUIDSTRING)_Source, (GUIDSTRING)_Target, _AuraID);

PROC
LeaderLib_Auras_Internal_OnPulseHit((GUIDSTRING)_Source, (GUIDSTRING)_Target, (STRING)_AuraID)
AND
_Source != _Target
THEN
DB_LeaderLib_Auras_Temp_NewTarget(_Source, _Target, _AuraID);
LeaderLib_Auras_OnTargetFound(_Source, _Target, _AuraID);
//END_REGION

//REGION PULSE_TARGETS
PROC
LeaderLib_Auras_Internal_ClearPulseTargets((GUIDSTRING)_Source, (STRING)_AuraID)
AND
DB_LeaderLib_Auras_Temp_NewTarget(_Source, _Target, _AuraID)
THEN
NOT DB_LeaderLib_Auras_Temp_NewTarget(_Source, _Target, _AuraID);
DB_LeaderLib_Auras_Temp_LastTarget(_Source, _Target, _AuraID);

PROC
LeaderLib_Auras_Internal_ComparePulseTargets((GUIDSTRING)_Source, (STRING)_AuraID)
AND
DB_LeaderLib_Auras_Temp_LastTarget(_Source, _Target, _AuraID)
AND
NOT DB_LeaderLib_Auras_Temp_NewTarget(_Source, _Target, _AuraID)
THEN
NOT DB_LeaderLib_Auras_Temp_LastTarget(_Source, _Target, _AuraID);
LeaderLib_Auras_OnTargetLost(_Source, _Target, _AuraID);

PROC
LeaderLib_Auras_Internal_CheckPulseTargets((GUIDSTRING)_Source, (STRING)_AuraID)
THEN
LeaderLib_Auras_Internal_ComparePulseTargets(_Source, _AuraID);
LeaderLib_Auras_Internal_ClearPulseTargets(_Source, _AuraID);

PROC
LeaderLib_Auras_OnTargetLost((GUIDSTRING)_Source, (GUIDSTRING)_Target, (STRING)_AuraID)
THEN
DB_NOOP(1);
//END_REGION

//REGION PULSE_COMPLETE
IF
StoryEvent(_Source, "LeaderLib_Auras_OnPulseComplete")
AND
DB_LeaderLib_Auras_Temp_Pulsing(_Source, _AuraID)
THEN
NOT DB_LeaderLib_Auras_Temp_Pulsing(_Source, _AuraID);
LeaderLib_Auras_OnPulseComplete(_Source, _AuraID);
//END_REGION

//REGION TEMPDATA_CLEAR
PROC
LeaderLib_Auras_Internal_ClearData((GUIDSTRING)_Source, (STRING)_AuraID)
AND
DB_LeaderLib_Auras_Temp_LastTarget(_Source, _Target, _AuraID)
THEN
NOT DB_LeaderLib_Auras_Temp_LastTarget(_Source, _Target, _AuraID);
LeaderLib_Auras_OnTargetLost(_Source, _Target, _AuraID);
//END_REGION

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
