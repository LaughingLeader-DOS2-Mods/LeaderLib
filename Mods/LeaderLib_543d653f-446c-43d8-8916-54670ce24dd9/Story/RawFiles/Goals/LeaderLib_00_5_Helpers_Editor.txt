Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
//REGION RECON_PARAM_HELPERS
QRY
LeaderLib_Recon_QRY_IsValidUUID((GUIDSTRING)_UUID)
AND
ObjectExists(_UUID, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Recon_QRY_IsValidUUID(NULL_00000000-0000-0000-0000-000000000000)
THEN
DB_NOOP(1);

QRY
LeaderLib_Recon_QRY_GetUUID((STRING)_Command, (INTEGER)_ParamIndex, (GUIDSTRING)_FallbackValue)
AND
IntegertoString(_ParamIndex, _ParamIndexStr)
AND
StringConcatenate("Param", _ParamIndexStr, _ParamID)
THEN
LeaderLib_Recon_SetUUID(_Command, _ParamID, _ParamIndex, _FallbackValue);

QRY
LeaderLib_Recon_QRY_GetUUID((STRING)_Command, (STRING)_ParamID, (INTEGER)_ParamIndex, (GUIDSTRING)_FallbackValue)
THEN
LeaderLib_Recon_SetUUID(_Command, _ParamID, _ParamIndex, _FallbackValue);

PROC
LeaderLib_Recon_SetUUID((STRING)_Command, (STRING)_ParamID, (INTEGER)_ParamIndex, (GUIDSTRING)_FallbackValue)
AND
GetTextEventParamUUID(_ParamIndex, _Value)
AND
LeaderLib_Recon_QRY_IsValidUUID(_Value)
AND
IntegerSum(_ParamIndex, 1, _NextParamIndex)
THEN
DB_LeaderLib_Recon_Temp_CommandParameters_UUID(_Command, _ParamID, _Value, _NextParamIndex);
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:Recon_SetUUID] UUID param[",_ParamID,"] set for command [",_Command,"].");

PROC
LeaderLib_Recon_SetUUID((STRING)_Command, (STRING)_ParamID, (INTEGER)_ParamIndex, (GUIDSTRING)_FallbackValue)
AND
NOT DB_LeaderLib_Recon_Temp_CommandParameters_UUID(_Command, _ParamID, _, _)
THEN
DB_LeaderLib_Recon_Temp_CommandParameters_UUID(_Command, _ParamID, _FallbackValue, _ParamIndex);
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:Recon_SetUUID] Setting UUID param [",_ParamID,"] to fallback value for command [",_Command,"].");

QRY
LeaderLib_Recon_QRY_GetString((STRING)_Command, (INTEGER)_ParamIndex, (STRING)_FallbackValue)
AND
IntegertoString(_ParamIndex, _ParamIndexStr)
AND
StringConcatenate("Param", _ParamIndexStr, _ParamID)
THEN
LeaderLib_Recon_SetString(_Command, _ParamID, _ParamIndex, _FallbackValue);

QRY
LeaderLib_Recon_QRY_GetString((STRING)_Command, (STRING)_ParamID, (INTEGER)_ParamIndex, (STRING)_FallbackValue)
THEN
LeaderLib_Recon_SetString(_Command, _ParamID, _ParamIndex, _FallbackValue);

PROC
LeaderLib_Recon_SetString((STRING)_Command, (STRING)_ParamID, (INTEGER)_ParamIndex, (STRING)_FallbackValue)
AND
GetTextEventParamString(_ParamIndex, _Value)
AND
IntegerSum(_ParamIndex, 1, _NextParamIndex)
THEN
DB_LeaderLib_Recon_Temp_CommandParameters_String(_Command, _ParamID, _Value, _NextParamIndex);
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:Recon_SeString] String param [",_ParamID,"] set to [",_Value,"] for command [",_Command,"].");

PROC
LeaderLib_Recon_SetString((STRING)_Command, (STRING)_ParamID, (INTEGER)_ParamIndex, (STRING)_FallbackValue)
AND
NOT DB_LeaderLib_Recon_Temp_CommandParameters_String(_Command, _ParamID, _, _)
THEN
DB_LeaderLib_Recon_Temp_CommandParameters_String(_Command, _ParamID, _FallbackValue, _ParamIndex);
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:Recon_SeString] String param [",_ParamID,"] set to fallback value [",_FallbackValue,"] for command [",_Command,"].");

QRY
LeaderLib_Recon_QRY_GetInt((STRING)_Command, (INTEGER)_ParamIndex, (INTEGER)_FallbackValue)
AND
IntegertoString(_ParamIndex, _ParamIndexStr)
AND
StringConcatenate("Param", _ParamIndexStr, _ParamID)
THEN
LeaderLib_Recon_SetInt(_Command, _ParamID, _ParamIndex, _FallbackValue);

QRY
LeaderLib_Recon_QRY_GetInt((STRING)_Command, (STRING)_ParamID, (INTEGER)_ParamIndex, (INTEGER)_FallbackValue)
THEN
LeaderLib_Recon_SetInt(_Command, _ParamID, _ParamIndex, _FallbackValue);

PROC
LeaderLib_Recon_SetInt((STRING)_Command, (STRING)_ParamID, (INTEGER)_ParamIndex, (INTEGER)_FallbackValue)
AND
GetTextEventParamInteger(_ParamIndex, _Value)
AND
IntegerSum(_ParamIndex, 1, _NextParamIndex)
AND
IntegertoString(_Value, _ValueStr)
THEN
DB_LeaderLib_Recon_Temp_CommandParameters_Int(_Command, _ParamID, _Value, _NextParamIndex);
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:Recon_SetInt] Integer param [",_ParamID,"] set to value [",_ValueStr,"] for command [",_Command,"].");

PROC
LeaderLib_Recon_SetInt((STRING)_Command, (STRING)_ParamID, (INTEGER)_ParamIndex, (INTEGER)_FallbackValue)
AND
NOT DB_LeaderLib_Recon_Temp_CommandParameters_Int(_Command, _ParamID, _, _)
AND
IntegertoString(_FallbackValue, _ValueStr)
THEN
DB_LeaderLib_Recon_Temp_CommandParameters_Int(_Command, _ParamID, _FallbackValue, _ParamIndex);
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:Recon_SetInt] Integer param [",_ParamID,"] set to fallback value [",_ValueStr,"] for command [",_Command,"].");

QRY
LeaderLib_Recon_QRY_GetReal((STRING)_Command, (INTEGER)_ParamIndex, (REAL)_FallbackValue)
AND
IntegertoString(_ParamIndex, _ParamIndexStr)
AND
StringConcatenate("Param", _ParamIndexStr, _ParamID)
THEN
LeaderLib_Recon_SetReal(_Command, _ParamID, _ParamIndex, _FallbackValue);

QRY
LeaderLib_Recon_QRY_GetReal((STRING)_Command, (STRING)_ParamID, (INTEGER)_ParamIndex, (REAL)_FallbackValue)
THEN
LeaderLib_Recon_SetReal(_Command, _ParamID, _ParamIndex, _FallbackValue);

PROC
LeaderLib_Recon_SetReal((STRING)_Command, (STRING)_ParamID, (INTEGER)_ParamIndex, (REAL)_FallbackValue)
AND
GetTextEventParamReal(_ParamIndex, _Value)
AND
IntegerSum(_ParamIndex, 1, _NextParamIndex)
THEN
DB_LeaderLib_Recon_Temp_CommandParameters_Real(_Command, _ParamID, _Value, _NextParamIndex);
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:Recon_SetReal] Real param [",_ParamID,"] set for command [",_Command,"].");

PROC
LeaderLib_Recon_SetReal((STRING)_Command, (STRING)_ParamID, (INTEGER)_ParamIndex, (REAL)_FallbackValue)
AND
NOT DB_LeaderLib_Recon_Temp_CommandParameters_Real(_Command, _ParamID, _, _)
THEN
DB_LeaderLib_Recon_Temp_CommandParameters_Real(_Command, _ParamID, _FallbackValue, _ParamIndex);
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:Recon_SetReal] Real param [",_ParamID,"] set to fallback value for command [",_Command,"].");

QRY
LeaderLib_Recon_QRY_ClearParams((STRING)_Command)
THEN
LeaderLib_Recon_ClearParams(_Command);

PROC
LeaderLib_Recon_ClearParams((STRING)_Command)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID(_Command, _ParamID, _Value, _NextParamIndex)
THEN
NOT DB_LeaderLib_Recon_Temp_CommandParameters_UUID(_Command, _ParamID, _Value, _NextParamIndex);

PROC
LeaderLib_Recon_ClearParams((STRING)_Command)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_String(_Command, _ParamID, _Value, _ParamIndex)
THEN
NOT DB_LeaderLib_Recon_Temp_CommandParameters_String(_Command, _ParamID, _Value, _ParamIndex);

PROC
LeaderLib_Recon_ClearParams((STRING)_Command)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_Int(_Command, _ParamID, _Value, _ParamIndex)
THEN
NOT DB_LeaderLib_Recon_Temp_CommandParameters_Int(_Command, _ParamID, _Value, _ParamIndex);

PROC
LeaderLib_Recon_ClearParams((STRING)_Command)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_Real(_Command, _ParamID, _Value, _ParamIndex)
THEN
NOT DB_LeaderLib_Recon_Temp_CommandParameters_Real(_Command, _ParamID, _Value, _ParamIndex);
//END_REGION

//REGION ANIM_TEXT_EVENTS
//Workaround for the GetTextEvent bug
//http://larian.com/forums/ubbthreads.php?ubb=showflat&Number=643095
//Fixed in an unknown patch
/*
IF
TextEventSet(_Event)
AND
GetTextEventParamString(1, "leaderlib_anim") // What was formerly the text event name
AND
GetTextEventParamUUID(1, _Target)
AND
GetTextEventParamString(2, _Anim)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_anim] fired. Playing animation [",_Anim,"].");
PlayAnimation(_Target, _Anim);
*/

IF
TextEventSet("leaderlib_anim")
AND
GetTextEventParamUUID(1, _Target)
AND
GetTextEventParamString(2, _Anim)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_anim] fired. Playing animation [",_Anim,"].");
PlayAnimation(_Target, _Anim);

IF
TextEventSet("leaderlib_animloop")
AND
GetTextEventParamUUID(1, (CHARACTERGUID)_Target)
AND
GetTextEventParamString(2, _Anim)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_animloop] fired. Setting animation override to [",_Anim,"].");
CharacterSetAnimationOverride(_Target, _Anim);

IF
TextEventSet("leaderlib_animstop")
AND
GetTextEventParamUUID(1, (CHARACTERGUID)_Target)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_animstop] fired. Clearing animation override.");
CharacterSetAnimationOverride(_Target, "");

IF
TextEventSet("leaderlib_anim")
AND
GetTextEventParamString(1, _Anim)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_anim] fired. Playing animation [",_Anim,"] on controlled character.");
PlayAnimation(_Player, _Anim);

IF
TextEventSet("leaderlib_animloop")
AND
GetTextEventParamString(1, _Anim)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_animloop] fired. Setting animation override to [",_Anim,"] on controlled character.");
CharacterSetAnimationOverride(_Player, _Anim);

IF
TextEventSet("leaderlib_animstop")
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_animstop] fired. Clearing animation override on controlled character.");
CharacterSetAnimationOverride(_Player, "");
//END_REGION

//REGION FX_TEXT_EVENTS
IF
TextEventSet("leaderlib_fxloop")
AND
GetTextEventParamString(1, _EffectName)
AND
GetTextEventParamString(2, _BoneName)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
AND
DB_CurrentLevel(_Region)
AND
StringConcatenate("LeaderLib.Debug.TextEvent.LoopEffect.", _EffectName, _ID)
THEN
PROC_LoopEffect(_EffectName, _Player, _ID, _Region, _BoneName);
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_effectloop] fired. Playing looped effect [",_EffectName,"]:[",_BoneName,"] on controlled character.");

IF
TextEventSet("leaderlib_fxstop")
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
AND
DB_LoopEffect(_Player, _fxHandle, _ID, _Region, _effect, _BoneName)
THEN
PROC_StopLoopEffect(_Player, _ID);
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_fxstop] fired. Stopped all looped effects on controlled character.");

IF
TextEventSet("leaderlib_playfx")
AND
GetTextEventParamString(1, _EffectName)
AND
GetTextEventParamString(2, _Bone)
AND
CharacterGetHostCharacter(_Player)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_playfx", "target", 1, _Player)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_playfx", "target", _Target, _NextParamIndex)
THEN
NOT DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_playfx", "target", _Target, _NextParamIndex);
PlayEffect(_Target, _EffectName, _Bone);

IF
TextEventSet("leaderlib_playfxpos")
AND
GetTextEventParamString(1, _EffectName)
AND
GetTextEventParamReal(2, _x)
AND
GetTextEventParamReal(3, _y)
AND
GetTextEventParamReal(4, _z)
THEN
PlayEffectAtPosition(_EffectName, _x, _y, _z);
//END_REGION

//REGION SOUND
IF
TextEventSet("leaderlib_playsfx")
AND
GetTextEventParamUUID(1, _Sound)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
PlaySoundResource(_Player, _Sound);

IF
TextEventSet("leaderlib_playhudsfx")
AND
GetTextEventParamUUID(1, _Sound)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
CharacterPlayHUDSoundResource(_Player, _Sound);
//END_REGION

//REGION EXPERIENCE
QRY
LeaderLib_Helper_TextEvent_QRY_IntParamSetOrSkipped((INTEGER)_Index, (INTEGER)_TargetValue)
AND
NOT GetTextEventParamInteger(_Index, _)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_TextEvent_QRY_IntParamSetOrSkipped((INTEGER)_Index, (INTEGER)_TargetValue)
AND
GetTextEventParamInteger(_Index, _TargetValue)
THEN
DB_NOOP(1);

IF
TextEventSet("leaderlib_addxp")
AND
LeaderLib_Helper_TextEvent_QRY_IntParamSetOrSkipped(1, 1)
AND
GetTextEventParamInteger(2, _Amount)
AND
IntegertoString(_Amount, _AmountStr)
AND
CharacterGetHostCharacter(_Player)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_addxp] fired. Adding [",_AmountStr,"] actual experience to party.");
PartyAddActualExperience(_Player, _Amount);

IF
TextEventSet("leaderlib_addxp")
AND
GetTextEventParamInteger(1, 2)
AND
GetTextEventParamInteger(2, _Act)
AND
GetTextEventParamInteger(3, _ActPart)
AND
GetTextEventParamInteger(4, _Gain)
AND
IntegertoString(_Act, _ActStr)
AND
IntegertoString(_ActPart, _ActPartStr)
AND
IntegertoString(_Gain, _GainStr)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
AND
String(_Player, _PlayerID)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_addxp] fired. Act [",_ActStr,"] Act Part [",_ActPartStr,"] Gain [",_GainStr,"]. Adding exploration experience to [",_PlayerID,"]. ");
CharacterAddExplorationExperience(_Player, _Act, _ActPart, _Gain);
//END_REGION

//REGION STATS_TEXT_EVENTS
IF
TextEventSet("leaderlib_addpoints")
AND
GetTextEventParamString(1, "all")
AND
GetTextEventParamInteger(2, _Amount)
AND
IntegertoString(_Amount, _AmountStr)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_addpoints] fired. Adding [",_AmountStr,"] attribute/ability/civil/talent points to controller characters.");
CharacterAddAttributePoint(_Player, _Amount);
CharacterAddAbilityPoint(_Player, _Amount);
CharacterAddCivilAbilityPoint(_Player, _Amount);
CharacterAddTalentPoint(_Player, _Amount);

IF
TextEventSet("leaderlib_addpoints")
AND
GetTextEventParamString(1, "attribute")
AND
GetTextEventParamInteger(2, _Amount)
AND
IntegertoString(_Amount, _AmountStr)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_addpoints] fired. Adding [",_AmountStr,"] attribute points to controller characters.");
CharacterAddAttributePoint(_Player, _Amount);

IF
TextEventSet("leaderlib_addpoints")
AND
GetTextEventParamString(1, "ability")
AND
GetTextEventParamInteger(2, _Amount)
AND
IntegertoString(_Amount, _AmountStr)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_addpoints] fired. Adding [",_AmountStr,"] ability points to controller characters.");
CharacterAddAbilityPoint(_Player, _Amount);

IF
TextEventSet("leaderlib_addpoints")
AND
GetTextEventParamString(1, "civil")
AND
GetTextEventParamInteger(2, _Amount)
AND
IntegertoString(_Amount, _AmountStr)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_addpoints] fired. Adding [",_AmountStr,"] civil points to controller characters.");
CharacterAddCivilAbilityPoint(_Player, _Amount);

IF
TextEventSet("leaderlib_addpoints")
AND
GetTextEventParamString(1, "talent")
AND
GetTextEventParamInteger(2, _Amount)
AND
IntegertoString(_Amount, _AmountStr)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_addpoints] fired. Adding [",_AmountStr,"] talent points to controller characters.");
CharacterAddTalentPoint(_Player, _Amount);

IF
TextEventSet("leaderlib_addpoints")
AND
GetTextEventParamString(1, "source")
AND
GetTextEventParamInteger(2, _Amount)
AND
IntegertoString(_Amount, _AmountStr)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_addpoints] fired. Adding [",_AmountStr,"] source points to controller characters.");
CharacterAddSourcePoints(_Player, _Amount);

IF
TextEventSet("leaderlib_addpoints")
AND
GetTextEventParamString(1, "sourcemax")
AND
GetTextEventParamInteger(2, _Amount)
AND
IntegertoString(_Amount, _AmountStr)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
AND
CharacterGetMaxSourcePoints(_Player, _BaseMax)
AND
IntegerSum(_BaseMax, _Amount, _MaxAmount)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_addpoints] fired. Adding [",_AmountStr,"] max source points to controller characters.");
CharacterOverrideMaxSourcePoints(_Player, _MaxAmount);

IF
TextEventSet("leaderlib_sourcemax")
AND
GetTextEventParamInteger(1, _Amount)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
LeaderLog_LogInt("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_sourcemax] fired. Setting max source points to [",_Amount,"].");
CharacterOverrideMaxSourcePoints(_Player, _Amount);

IF
TextEventSet("leaderlib_sourcemaxreset")
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_sourcemaxreset] fired. Reseting max source points.");
CharacterRemoveMaxSourcePointsOverride(_Player);
//END_REGION

//REGION DEBUG_FLAGS
IF
ObjectFlagSet("LeaderLib_Debug_IsCompanion", (CHARACTERGUID)_Companion, _Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Recruiter)
AND
CharacterGetDisplayName(_Companion, _, _Name)
THEN
CharacterMakePlayer(_Companion, _Recruiter);
//CharacterMakePlayer(_Companion);
DB_IsPlayer(_Companion);
//CharacterStopFollow(_Companion);
//CharacterDetachFromGroup(_Companion);
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:LeaderLib_Debug_IsCompanion(Set)] Added character [",_Name,"] to the party.");

IF
ObjectFlagCleared("LeaderLib_Debug_IsCompanion", (CHARACTERGUID)_Companion, _Instance)
AND
CharacterGetDisplayName(_Companion, _, _Name)
THEN
//CharacterDetachFromGroup(_Companion);
CharacterMakeNPC(_Companion);
NOT DB_IsPlayer(_Companion);
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:LeaderLib_Debug_IsCompanion(Cleared)] Removed character [",_Name,"] from the party.");

PROC
PROC_GLOBAL_DialogStartRequested(_Companion, _Player)
AND
ObjectGetFlag(_Companion, "LeaderLib_Debug_IsCompanion", 1)
THEN
Proc_StartDialog(0, "LeaderLib_Debug_RecruitCharacter", _Companion, _Player);
//END_REGION

//REGION TREASURE_TESTING
IF
TextEventSet("leaderlib_tradegen")
AND
DB_TraderGeneratedTreasureForLevel(_Trader, _OldLevel)
THEN
DB_LeaderLib_Editor_Temp_GenerateTradeItems(_Trader);
ProcClearTradeFacts(_Trader);

IF
TextEventSet("leaderlib_tradegen")
AND
CharacterGetHostCharacter(_Player)
AND
DB_LeaderLib_Editor_Temp_GenerateTradeItems(_Trader)
THEN
GenTradeItems(_Player, _Trader);
NOT DB_LeaderLib_Editor_Temp_GenerateTradeItems(_Trader);

IF
TextEventSet("leaderlib_generatetreasure")
AND
GetTextEventParamString(1, _Treasure)
AND
CharacterGetHostCharacter(_Player)
AND
GetPosition(_Player, _x, _y, _z)
AND
CreateItemTemplateAtPosition("LOOT_LeaderLib_BackPack_Invisible_98fa7688-0810-4113-ba94-9a8c8463f830", _x, _y, _z, _Backpack)
AND
CharacterGetLevel(_Player, _Level)
THEN
GenerateTreasure(_Backpack, _Treasure, _Level, _Player);
MoveAllItemsTo(_Backpack, _Player, 1, 1, 1);
ProcObjectTimer(_Backpack, "LeaderLib_Timers_TextEvent_RemoveGenTreasureBackpack", 250);

PROC
ProcObjectTimerFinished((ITEMGUID)_Backpack, "LeaderLib_Timers_TextEvent_RemoveGenTreasureBackpack")
THEN
ItemRemove(_Backpack);

IF
TextEventSet("leaderlib_addtreasure")
AND
CharacterGetHostCharacter(_Player)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_addtreasure", "target", 1, _Player)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_addtreasure", "target", _Target, _NextParamIndex)
AND
ObjectIsCharacter((CHARACTERGUID)_Target, 1)
AND
LeaderLib_Recon_QRY_GetString("leaderlib_addtreasure", "treasure", _NextParamIndex, "Cheat2HMaces")
AND
DB_LeaderLib_Recon_Temp_CommandParameters_String("leaderlib_addtreasure", "treasure", _Treasure, _NextParamIndex2)
AND
LeaderLib_Recon_QRY_GetInt("leaderlib_addtreasure", "identified", _NextParamIndex2, 1)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_Int("leaderlib_addtreasure", "identified", _Identified, _NextParamIndex3)
THEN
CharacterGiveReward(_Target, _Treasure, _Identified);

IF
TextEventSet("leaderlib_addtreasure")
THEN
LeaderLib_Recon_ClearParams("leaderlib_addtreasure");
//END_REGION

//REGION PRESETS
IF
TextEventSet("leaderlib_applypreset")
AND
GetTextEventParamString(1, _Preset)
AND
DB_LeaderLib_PresetMenu_RegisteredPreset(_Preset, _EnabledGlobalFlag)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
CharacterApplyPreset(_Player, _Preset);

IF
TextEventSet("leaderlib_applyrace")
AND
GetTextEventParamString(1, _Preset)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
CharacterApplyRacePreset(_Player, _Preset);

IF
TextEventSet("leaderlib_applyhenchman")
AND
GetTextEventParamString(1, _Preset)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
CharacterApplyHenchmanPreset(_Player, _Preset);

IF
TextEventSet("leaderlib_applypartypreset")
AND
GetTextEventParamString(1, _Preset)
AND
CharacterGetHostCharacter(_Player)
THEN
LoadPartyPreset(_Preset, _Player);

IF
TextEventSet("leaderlib_applyequipment")
AND
GetTextEventParamString(1, _Equipment)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
CharacterTransformAppearanceToWithEquipmentSet(_Player, _Player, _Equipment, 0);
//END_REGION

//REGION MESSAGE_BOXES
IF
TextEventSet("leaderlib_notification")
AND
GetTextEventParamString(1, _Message)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
ShowNotification(_Player, _Message);
//END_REGION

//REGION STATUSES
IF
TextEventSet("leaderlib_statusapply")
AND
CharacterGetHostCharacter(_Player)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_statusapply", "target", 1, _Player)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_statusapply", "target", _Target, _NextParamIndex)
AND
LeaderLib_Recon_QRY_GetString("leaderlib_statusapply", "status", _NextParamIndex, "HASTED")
AND
DB_LeaderLib_Recon_Temp_CommandParameters_String("leaderlib_statusapply", "status", _Status, _NextParamIndex2)
AND
LeaderLib_Recon_QRY_GetInt("leaderlib_statusapply", "turns", _NextParamIndex2, 1)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_Int("leaderlib_statusapply", "turns", _Turns, _NextParamIndex3)
AND
LeaderLib_Recon_QRY_GetInt("leaderlib_statusapply", "force", _NextParamIndex3, 0)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_Int("leaderlib_statusapply", "force", _Force, _NextParamIndex4)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_statusapply", "cause", _NextParamIndex4, _Player)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_statusapply", "cause", _Source, _NextParamIndex5)
THEN
LeaderLib_Helper_ReCon_ApplyStatus(_Target, _Status, _Turns, _Force, _Source);
LeaderLib_Recon_ClearParams("leaderlib_statusapply");

PROC
LeaderLib_Helper_ReCon_ApplyStatus((GUIDSTRING)_Target, (STRING)_Status, (INTEGER)_Turns, (INTEGER)_Force, (GUIDSTRING)_Source)
AND
_Turns > 0
AND
IntegerProduct(_Turns, 6, _DurationInt)
AND
Real(_DurationInt, _Duration)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_applystatus] fired. Applying status [",_Status,"].");
ApplyStatus(_Target, _Status, _Duration, _Force, _Source);

PROC
LeaderLib_Helper_ReCon_ApplyStatus((GUIDSTRING)_Target, (STRING)_Status, (INTEGER)_Turns, (INTEGER)_Force, (GUIDSTRING)_Source)
AND
_Turns <= 0
AND
Real(_Turns, _Duration)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_applystatus] fired. Applying status [",_Status,"].");
ApplyStatus(_Target, _Status, _Duration, _Force, _Source);

IF
TextEventSet("leaderlib_statusremove")
AND
CharacterGetHostCharacter(_Player)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_statusremove", "target", 1, _Player)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_statusremove", "target", _Target, _NextParamIndex)
AND
LeaderLib_Recon_QRY_GetString("leaderlib_statusremove", "status", _NextParamIndex, "HASTED")
AND
DB_LeaderLib_Recon_Temp_CommandParameters_String("leaderlib_statusremove", "status", _Status, _NextParamIndex2)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_removestatus] fired. Removing status [",_Status,"].");
RemoveStatus(_Target, _Status);
LeaderLib_Recon_ClearParams("leaderlib_statusremove");

IF
TextEventSet("leaderlib_statusremoveharmful")
AND
CharacterGetHostCharacter(_Player)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_statusremoveharmful", "target", 1, _Player)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_statusremoveharmful", "target", _Target, _NextParamIndex)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_statusremoveharmful] fired. Calling [RemoveHarmfulStatuses] on target.");
RemoveHarmfulStatuses(_Target);

IF
TextEventSet("leaderlib_statusremoveharmful")
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_statusremoveharmful", "target", _Target, _NextParamIndex)
AND
ObjectIsCharacter((CHARACTERGUID)_Target, 1)
THEN
LeaderLib_TS_Internal_RemoveHarmfulStatusesCalled((CHARACTERGUID)_Target);

IF
TextEventSet("leaderlib_statusremoveharmful")
THEN
LeaderLib_Recon_ClearParams("leaderlib_statusremoveharmful");

IF
TextEventSet("leaderlib_statusremoveharmfulparty")
AND
DB_IsPlayer(_Player)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_statusremoveharmfulparty] fired. Calling [RemoveHarmfulStatuses] on party.");
CharacterLaunchOsirisOnlyIterator("LeaderLib_Debug_Iterator_RemoveHarmfulStatuses");

IF
TextEventSet("leaderlib_statusremoveharmfulall")
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_statusremoveharmfulall] fired. Calling [RemoveHarmfulStatuses] on all characters.");
CharacterLaunchOsirisOnlyIterator("LeaderLib_Debug_Iterator_RemoveHarmfulStatuses");
ItemLaunchIterator("LeaderLib_Debug_Iterator_RemoveHarmfulStatuses_Item");

IF
StoryEvent((CHARACTERGUID)_Object, "LeaderLib_Debug_Iterator_RemoveHarmfulStatuses")
THEN
RemoveHarmfulStatuses(_Object);
LeaderLib_TS_Internal_RemoveHarmfulStatusesCalled(_Object);

IF
StoryEvent((CHARACTERGUID)_Object, "LeaderLib_Debug_Iterator_RemoveHarmfulStatuses_Item")
THEN
RemoveHarmfulStatuses(_Object);
//END_REGION

//REGION SURFACES
IF
TextEventSet("leaderlib_surface")
AND
CharacterGetHostCharacter(_Player)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_surface", "target", 1, _Player)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_surface", "target", _Target, _NextParamIndex)
AND
LeaderLib_Recon_QRY_GetString("leaderlib_surface", "surface", _NextParamIndex, "SurfaceWater")
AND
DB_LeaderLib_Recon_Temp_CommandParameters_String("leaderlib_surface", "surface", _Surface, _NextParamIndex2)
AND
LeaderLib_Recon_QRY_GetReal("leaderlib_surface", "radius", _NextParamIndex2, 2.0)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_Real("leaderlib_surface", "radius", _Radius, _NextParamIndex3)
AND
LeaderLib_Recon_QRY_GetReal("leaderlib_surface", "lifetime", _NextParamIndex3, 12.0)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_Real("leaderlib_surface", "lifetime", _Lifetime, _NextParamIndex4)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_surface] fired. Creating surface [",_Surface,"].");
LeaderLib_Recon_ClearParams("leaderlib_surface");
CreateSurface(_Target, _Surface, _Radius, _Lifetime);

IF
TextEventSet("leaderlib_surfaceat")
AND
CharacterGetHostCharacter(_Player)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_surfaceat", "target", 1, _Player)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_surfaceat", "target", _Target, _NextParamIndex)
AND
LeaderLib_Recon_QRY_GetString("leaderlib_surfaceat", "surface", _NextParamIndex, "SurfaceWater")
AND
DB_LeaderLib_Recon_Temp_CommandParameters_String("leaderlib_surfaceat", "surface", _Surface, _NextParamIndex2)
AND
LeaderLib_Recon_QRY_GetReal("leaderlib_surfaceat", "radius", _NextParamIndex2, 2.0)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_Real("leaderlib_surfaceat", "radius", _Radius, _NextParamIndex3)
AND
LeaderLib_Recon_QRY_GetReal("leaderlib_surfaceat", "lifetime", _NextParamIndex3, 12.0)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_Real("leaderlib_surfaceat", "lifetime", _Lifetime, _NextParamIndex4)
AND
GetPosition(_Target, _x, _y, _z)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_surfaceat] fired. Creating surface [",_Surface,"] at position of target.");
LeaderLib_Recon_ClearParams("leaderlib_surfaceat");
CreateSurfaceAtPosition(_x, _y, _z, _Surface, _Radius, _Lifetime);
//END_REGION

//REGION TAG_CHECK

//REGION RECIPES
IF
TextEventSet("leaderlib_addrecipe")
AND
GetTextEventParamString(1, _Recipe)
AND
DB_IsPlayer(_Player)
THEN
CharacterUnlockRecipe(_Player, _Recipe, 1);
//END_REGION

IF
TextEventSet("leaderlib_checktag")
AND
GetTextEventParamString(1, _Tag)
AND
DB_IsPlayer(_Player)
AND
String(_Player, _PlayerStr)
AND
IsTagged(_Player, _Tag, _IsTagged)
AND
IntegertoString(_IsTagged, _IsTaggedStr)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_checktag] fired. Tag [",_Tag,"] is [",_IsTaggedStr,"] on [",_PlayerStr,"]");

//END_REGION

//REGION SPAWN_CHARACTER
IF
TextEventSet("leaderlib_addplayer")
AND
GetTextEventParamString(1, _Template)
AND
_Template != ""
AND
CharacterGetHostCharacter(_Host)
AND
GetPosition(_Host, _x, _y, _z)
AND
CharacterCreateAtPosition(_x, _y, _z, _Template, 1, _NewPlayer)
AND
GetFaction(_Host, _PlayerFaction)
THEN
CharacterRecruitCharacter(_NewPlayer,_Host);
ProcCharacterDisableAllCrimes(_NewPlayer);
ProcAssignCharacterToPlayer(_NewPlayer,_Host);
ProcRegisterPlayerTriggers(_NewPlayer);
SetFaction(_NewPlayer,_PlayerFaction);
DB_IsPlayer(_NewPlayer);
ProcRemoveAllDialogEntriesForSpeaker(_NewPlayer);
SetHasDialog(_NewPlayer,0);
CharacterAttachToGroup(_NewPlayer,_Host);
SetTag(_NewPlayer,"AVATAR");
Proc_CheckPartyFull();
//END_REGION

//REGION MISC
IF
TextEventSet("leaderlib_jumptoturn")
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
JumpToTurn(_Player);

IF
TextEventSet("leaderlib_setname")
AND
GetTextEventParamString(1, _Name)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
CharacterSetCustomName(_Player, _Name);

IF
TextEventSet("leaderlib_screenshotsetup")
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
CharacterSetCustomName(_Player, "Leader");
CharacterApplyRacePreset(_Player, "Elf");
CharacterApplyPreset(_Player, "Fighter_Act2");
//END_REGION

//REGION SKILL_CAST
IF
TextEventSet("leaderlib_useskill")
AND
CharacterGetHostCharacter(_Player)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_useskill", "caster", 1, _Player)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_useskill", "caster", _Caster, _NextParamIndex)
AND
ObjectIsCharacter((CHARACTERGUID)_Caster, 1)
AND
LeaderLib_Recon_QRY_GetString("leaderlib_useskill", "skill", _NextParamIndex, "Projectile_EnemyFireball")
AND
DB_LeaderLib_Recon_Temp_CommandParameters_String("leaderlib_useskill", "skill", _Skill, _NextParamIndex2)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_useskill", "target", _NextParamIndex2, _Player)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_useskill", "target", _Target, _NextParamIndex5)
THEN
CharacterUseSkill(_Caster, _Skill, _Target, 1, 1, 1);

IF
TextEventSet("leaderlib_useskill")
THEN
LeaderLib_Recon_ClearParams("leaderlib_useskill");
//END_REGION

//REGION DIALOG
IF
TextEventSet("leaderlib_dialog")
AND
CharacterGetHostCharacter(_Player)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_dialog", "speaker", 1, _Player)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_dialog", "speaker", _Speaker, _NextParamIndex)
AND
LeaderLib_Recon_QRY_GetString("leaderlib_dialog", "dialog", _NextParamIndex, "LeaderLib_Debug_RecruitCharacter")
AND
DB_LeaderLib_Recon_Temp_CommandParameters_String("leaderlib_dialog", "dialog", _Dialog, _NextParamIndex2)
AND
LeaderLib_Recon_QRY_GetInt("leaderlib_dialog", "automated", _NextParamIndex2, 0)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_Int("leaderlib_dialog", "automated", _Automated, _NextParamIndex3)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_dialog", "speaker2", _NextParamIndex3, NULL_00000000-0000-0000-0000-000000000000)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_dialog", "speaker2", _Speaker2, _NextParamIndex4)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_dialog", "speaker3", _NextParamIndex4, NULL_00000000-0000-0000-0000-000000000000)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_dialog", "speaker3", _Speaker3, _NextParamIndex5)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_dialog", "speaker4", _NextParamIndex5, NULL_00000000-0000-0000-0000-000000000000)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_dialog", "speaker4", _Speaker4, _NextParamIndex6)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_dialog", "speaker5", _NextParamIndex6, NULL_00000000-0000-0000-0000-000000000000)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_dialog", "speaker5", _Speaker5, _NextParamIndex7)
AND
LeaderLib_Recon_QRY_GetUUID("leaderlib_dialog", "speaker6", _NextParamIndex7, NULL_00000000-0000-0000-0000-000000000000)
AND
DB_LeaderLib_Recon_Temp_CommandParameters_UUID("leaderlib_dialog", "speaker6", _Speaker6, _NextParamIndex8)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet] Event [leaderlib_dialog] fired. Starting dialog [",_Dialog,"].");
LeaderLog_LogInt("DEBUG", "[LeaderLib:Helpers:Editor:TextEventSet(leaderlib_dialog)] -- Automated [",_Automated,"].");
LeaderLib_Helper_Editor_Internal_StartDialog(_Dialog, _Automated, _Speaker, _Speaker2, _Speaker3, _Speaker4, _Speaker5, _Speaker6);

PROC
LeaderLib_Helper_Editor_Internal_StartDialog((STRING)_Dialog, (INTEGER)_IsAutomated, (GUIDSTRING)_Speaker1, (GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5, (GUIDSTRING)_Speaker6)
AND
IntegerSubtract(1, _IsAutomated, _IsInteractive)
AND
LeaderLib_Helper_Editor_Internal_QRY_PrepareDialog(_Dialog, _IsInteractive,_Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,_Speaker6)
AND
StartDialog_Internal(_Dialog,_IsInteractive,_Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,_Speaker6,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5, (GUIDSTRING)_Speaker6);
LeaderLib_Helper_Editor_Internal_SetupDialogSpeakers(_Dialog, _IsInteractive, _Speaker1, _Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,_Speaker6);
LeaderLib_Helper_Editor_Internal_SetupDialogSpeakers(_Dialog, _IsInteractive, _Speaker2, _Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,_Speaker6);
LeaderLib_Helper_Editor_Internal_SetupDialogSpeakers(_Dialog, _IsInteractive, _Speaker3, _Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,_Speaker6);
LeaderLib_Helper_Editor_Internal_SetupDialogSpeakers(_Dialog, _IsInteractive, _Speaker4, _Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,_Speaker6);
LeaderLib_Helper_Editor_Internal_SetupDialogSpeakers(_Dialog, _IsInteractive, _Speaker5, _Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,_Speaker6);
LeaderLib_Helper_Editor_Internal_SetupDialogSpeakers(_Dialog, _IsInteractive, _Speaker6, _Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,_Speaker6);
LeaderLib_Helper_Editor_Internal_SetDialogFacing(_Dialog, _IsInteractive, _Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,_Speaker6);

QRY
LeaderLib_Helper_Editor_Internal_QRY_PrepareDialog((STRING)_Dialog, 1, (GUIDSTRING)_Speaker1, (GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5, (GUIDSTRING)_Speaker6)
AND
QRY_PrepForInteractiveDialog(_Speaker1)
AND
QRY_PrepForInteractiveDialog(_Speaker2)
AND
QRY_PrepForInteractiveDialog(_Speaker3)
AND
QRY_PrepForInteractiveDialog(_Speaker4)
AND
QRY_PrepForInteractiveDialog(_Speaker5)
AND
QRY_PrepForInteractiveDialog(_Speaker6)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_Editor_Internal_QRY_PrepareDialog((STRING)_Dialog, (INTEGER)_IsInteractive, (GUIDSTRING)_Speaker1, (GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5, (GUIDSTRING)_Speaker6)
THEN
DB_NOOP(1);

PROC
LeaderLib_Helper_Editor_Internal_SetupDialogSpeakers((STRING)_Dialog, 1, (GUIDSTRING)_TargetSpeaker, (GUIDSTRING)_Speaker1, (GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5, (GUIDSTRING)_Speaker6)
AND
_TargetSpeaker != NULL_00000000-0000-0000-0000-000000000000
THEN
ProcItemSetInvulnerableForDialog(_TargetSpeaker);

PROC
LeaderLib_Helper_Editor_Internal_SetupDialogSpeakers((STRING)_Dialog, 1, (GUIDSTRING)_TargetSpeaker, (GUIDSTRING)_Speaker1, (GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5, (GUIDSTRING)_Speaker6)
AND
ObjectIsCharacter((CHARACTERGUID)_Speaker1, 1)
AND
ObjectIsCharacter((CHARACTERGUID)_TargetSpeaker, 1)
THEN
DB_HasMetCharactersToCheck(_Speaker1,_TargetSpeaker);

PROC
LeaderLib_Helper_Editor_Internal_SetupDialogSpeakers((STRING)_Dialog, 1, (GUIDSTRING)_TargetSpeaker, (GUIDSTRING)_Speaker1, (GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5, (GUIDSTRING)_Speaker6)
AND
ObjectIsCharacter((CHARACTERGUID)_TargetSpeaker, 1)
THEN
CharacterMakeStoryNpc(_TargetSpeaker,1);

PROC
LeaderLib_Helper_Editor_Internal_SetDialogFacing((STRING)_Dialog, 1, (GUIDSTRING)_Speaker1, (GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5, (GUIDSTRING)_Speaker6)
AND
_Speaker6 != NULL_00000000-0000-0000-0000-000000000000
THEN
ProcFaceCharacter(_Speaker1,_Speaker6);
ProcFaceCharacter(_Speaker2,_Speaker6);
ProcFaceCharacter(_Speaker3,_Speaker6);
ProcFaceCharacter(_Speaker4,_Speaker6);
ProcFaceCharacter(_Speaker5,_Speaker6);
ProcFaceCharacter(_Speaker6,_Speaker1);

PROC
LeaderLib_Helper_Editor_Internal_SetDialogFacing((STRING)_Dialog, 1, (GUIDSTRING)_Speaker1, (GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5, NULL_00000000-0000-0000-0000-000000000000)
AND
_Speaker5 != NULL_00000000-0000-0000-0000-000000000000
THEN
ProcFaceCharacter(_Speaker1,_Speaker5);
ProcFaceCharacter(_Speaker2,_Speaker5);
ProcFaceCharacter(_Speaker3,_Speaker5);
ProcFaceCharacter(_Speaker4,_Speaker5);
ProcFaceCharacter(_Speaker5,_Speaker1);

PROC
LeaderLib_Helper_Editor_Internal_SetDialogFacing((STRING)_Dialog, 1, (GUIDSTRING)_Speaker1, (GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000)
AND
_Speaker4 != NULL_00000000-0000-0000-0000-000000000000
THEN
ProcFaceCharacter(_Speaker1,_Speaker4);
ProcFaceCharacter(_Speaker2,_Speaker4);
ProcFaceCharacter(_Speaker3,_Speaker4);
ProcFaceCharacter(_Speaker4,_Speaker1);

PROC
LeaderLib_Helper_Editor_Internal_SetDialogFacing((STRING)_Dialog, 1, (GUIDSTRING)_Speaker1, (GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000)
AND
_Speaker3 != NULL_00000000-0000-0000-0000-000000000000
THEN
ProcFaceCharacter(_Speaker1,_Speaker3);
ProcFaceCharacter(_Speaker2,_Speaker3);
ProcFaceCharacter(_Speaker3,_Speaker1);

PROC
LeaderLib_Helper_Editor_Internal_SetDialogFacing((STRING)_Dialog, 1, (GUIDSTRING)_Speaker1, (GUIDSTRING)_Speaker2, NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000)
AND
_Speaker2 != NULL_00000000-0000-0000-0000-000000000000
THEN
ProcFaceCharacter(_Speaker1,_Speaker2);
ProcFaceCharacter(_Speaker2,_Speaker1);

IF
TextEventSet("leaderlib_dialog")
THEN
LeaderLib_Recon_ClearParams("leaderlib_dialog");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
