Version 1
SubGoalCombiner SGC_AND
INITSECTION
/*Temp*/
//DB_LeaderLib_Random(_Ran)
//DB_LeaderLib_Helper_Temp_StopIteratingForFlags(1)
//DB_LeaderLib_Helper_Temp_StopIteratingForMinLevel(1)
//DB_LeaderLib_Helper_Temp_StopIteratingForMaxLevel(1)
//DB_LeaderLib_Helper_Temp_PartyMemberOutsideOfLevelRange(1)
//DB_LeaderLib_Helper_Temp_HighestLevelInParty(_Level)
//DB_LeaderLib_Helper_Temp_HighestPlayerLevel(_Level)
/*Timers*/
//DB_LeaderLib_Helper_Temp_ObjectTimer(_TimerName, _Target, _CompleteEvent)
//DB_LeaderLib_Helper_Temp_CharItemTimer(_TimerName, _Char, _Item, _CompleteEvent)
//DB_LeaderLib_Helper_Temp_CharCharTimer(_TimerName, _Char1, _Char2, _CompleteEvent)
KBSECTION
//REGION QUERY_BLOCKERS
PROC
LeaderLib_Helper_Register_IgnoreTag_Item((STRING)_Group, (STRING)_Tag)
THEN
DB_LeaderLib_IgnoreTag_Item(_Group, _Tag);

QRY
LeaderLib_Helper_QRY_IgnoreItem((ITEMGUID)_Item)
AND
ObjectGetFlag(_Item, "LEADERLIB_IGNORE", 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IgnoreItem((ITEMGUID)_Item)
AND
ObjectGetFlag(_Item, "LEADERLIB_IGNORE", 0)
AND
DB_LeaderLib_IgnoreTag_Item(_Group, _Tag)
AND
IsTagged(_Item, _Tag, 1)
THEN
DB_NOOP(1);

PROC
LeaderLib_Helper_Register_IgnoreTag_Character((STRING)_Group, (STRING)_Tag)
THEN
DB_LeaderLib_IgnoreTag_Character(_Group, _Tag);

QRY
LeaderLib_Helper_QRY_IgnoreCharacter((CHARACTERGUID)_Character)
AND
ObjectGetFlag(_Character, "LEADERLIB_IGNORE", 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IgnoreCharacter((CHARACTERGUID)_Character)
AND
ObjectGetFlag(_Character, "LEADERLIB_IGNORE", 0)
AND
DB_LeaderLib_IgnoreTag_Character(_Group, _Tag)
AND
IsTagged(_Character, _Tag, 1)
THEN
DB_NOOP(1);
//END_REGION

//REGION QUERY_FLAGS
QRY
LeaderLib_Helper_QRY_PartyFlag_ClearIterator()
AND
DB_LeaderLib_Helper_Temp_StopIteratingForFlags(_Val)
THEN
NOT DB_LeaderLib_Helper_Temp_StopIteratingForFlags(_Val);

QRY
LeaderLib_Helper_QRY_PartyFlag_ClearIterator()
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_GlobalFlagSet((STRING)_Flag, 0)
AND
NOT GlobalGetFlag(_Flag, 1) // GlobalGetFlag(_Flag, 0) may not return anything if the global flag was never defined (i.e. from other mods)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_GlobalFlagSet((STRING)_Flag, 1)
AND
GlobalGetFlag(_Flag, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_FlagSet((GUIDSTRING)_Object, (STRING)_Flag, "Object", (INTEGER)_FlagVal)
AND
ObjectGetFlag(_Object, _Flag, _FlagVal)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_FlagSet((GUIDSTRING)_Player, (STRING)_Flag, "Character", (INTEGER)_FlagVal)
AND
ObjectGetFlag((CHARACTERGUID)_Player, _Flag, _FlagVal)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_FlagSet((GUIDSTRING)_Player, (STRING)_Flag, "User", (INTEGER)_FlagVal)
AND
UserGetFlag((CHARACTERGUID)_Player, _Flag, _FlagVal)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_FlagSet((GUIDSTRING)_Object, (STRING)_Flag, "Global", (INTEGER)_FlagVal)
AND
LeaderLib_Helper_QRY_GlobalFlagSet(_Flag, _FlagVal)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_PartyFlagSet((STRING)_Flag, "Global", (INTEGER)_FlagVal)
AND
LeaderLib_Helper_QRY_GlobalFlagSet(_Flag, _FlagVal)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_PartyFlagSet((STRING)_Flag, (STRING)_FlagType, (INTEGER)_FlagVal)
AND
_FlagType != "Global"
AND
LeaderLib_Helper_QRY_PartyFlag_ClearIterator()
AND
DB_IsPlayer(_Player)
AND
_Player != NULL_00000000-0000-0000-0000-000000000000
AND
NOT DB_LeaderLib_Helper_Temp_StopIteratingForFlags(1)
AND
LeaderLib_Helper_QRY_FlagSet((GUIDSTRING)_Player, _Flag, _FlagType, _FlagVal)
THEN
DB_LeaderLib_Helper_Temp_StopIteratingForFlags(1);
//END_REGION

//REGION QUERY_LEVEL_RANGE
QRY
LeaderLib_Helper_QRY_LevelRangeMet((INTEGER)_Level, (INTEGER)_MinLevel, (INTEGER)_MaxLevel)
AND
LeaderLib_Helper_QRY_LevelIsGreaterThan(_Level, _MinLevel)
AND
LeaderLib_Helper_QRY_LevelIsLessThan(_Level, _MaxLevel)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_LevelIsLessThan((INTEGER)_Level, (INTEGER)_TargetLevel)
AND
_TargetLevel <= 0
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_LevelIsLessThan((INTEGER)_Level, (INTEGER)_TargetLevel)
AND
_TargetLevel > 0
AND
_Level < _TargetLevel
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_LevelIsGreaterThan((INTEGER)_Level, (INTEGER)_TargetLevel)
AND
_TargetLevel <= 0
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_LevelIsGreaterThan((INTEGER)_Level, (INTEGER)_TargetLevel)
AND
_TargetLevel > 0
AND
_Level > _TargetLevel
THEN
DB_NOOP(1);
//END_REGION

//REGION QUERY_LEVELS
QRY
LeaderLib_Helper_QRY_PartyMinLevelMet((INTEGER)_MinLevel)
AND
_MinLevel <= 0
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_PartyMinLevelMet((INTEGER)_MinLevel)
AND
_MinLevel > 0
AND
LeaderLib_Helper_Internal_QRY_ClearMinLevelVar()
AND
DB_IsPlayer(_Player)
AND
NOT DB_LeaderLib_Helper_Temp_StopIteratingForMinLevel(1)
AND
CharacterGetLevel(_Player, _Level)
AND
_Level >= _MinLevel
THEN
DB_LeaderLib_Helper_Temp_StopIteratingForMinLevel(1);

QRY
LeaderLib_Helper_Internal_QRY_ClearMinLevelVar()
THEN
LeaderLib_Helper_Internal_ClearMinLevelVar();

PROC
LeaderLib_Helper_Internal_ClearMinLevelVar()
AND
DB_LeaderLib_Helper_Temp_StopIteratingForMinLevel(1)
THEN
NOT DB_LeaderLib_Helper_Temp_StopIteratingForMinLevel(1);

QRY
LeaderLib_Helper_QRY_PartyMaxLevelMet((INTEGER)_MaxLevel)
AND
_MaxLevel <= 0
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_PartyMaxLevelMet((INTEGER)_MaxLevel)
AND
_MaxLevel > 0
AND
LeaderLib_Helper_Internal_QRY_ClearMaxLevelVar()
AND
DB_IsPlayer(_Player)
AND
NOT DB_LeaderLib_Helper_Temp_StopIteratingForMaxLevel(1)
AND
CharacterGetLevel(_Player, _Level)
AND
_Level <= _MaxLevel
THEN
DB_LeaderLib_Helper_Temp_StopIteratingForMaxLevel(1);

QRY
LeaderLib_Helper_Internal_QRY_ClearMaxLevelVar()
THEN
LeaderLib_Helper_Internal_ClearMaxLevelVar();

PROC
LeaderLib_Helper_Internal_ClearMaxLevelVar()
AND
DB_LeaderLib_Helper_Temp_StopIteratingForMaxLevel(_Val)
THEN
NOT DB_LeaderLib_Helper_Temp_StopIteratingForMaxLevel(_Val);

QRY
LeaderLib_Helper_QRY_PartyLevelRangeMet((INTEGER)_MinLevel, (INTEGER)_MaxLevel)
AND
LeaderLib_Helper_QRY_PartyMinLevelMet(_MinLevel)
AND
LeaderLib_Helper_QRY_PartyMaxLevelMet(_MaxLevel)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_GetHighestPlayerLevel()
THEN
LeaderLib_Helper_SetHighestPlayerLevel();

PROC
LeaderLib_Helper_SetHighestPlayerLevel()
THEN
LeaderLib_Helper_Internal_ClearHighestPlayerLevel();
LeaderLib_Helper_Internal_SetHighestLevel(1);

PROC
LeaderLib_Helper_SetHighestPlayerLevel()
AND
DB_IsPlayer(_Player)
AND
DB_LeaderLib_Helper_Temp_HighestPlayerLevel(_HighestLevel)
AND
CharacterGetLevel(_Player, _Level)
AND
_Level > _HighestLevel
THEN
LeaderLib_Helper_Internal_SetHighestLevel(_Level);
LeaderLib_Helper_Internal_SetHighestPlayerLevel(_Player, _Level);

PROC
LeaderLib_Helper_SetHighestPlayerLevel()
AND
NOT DB_LeaderLib_Helper_Temp_HighestLevelPlayer(_, _)
AND
CharacterGetHostCharacter(_Host)
AND
CharacterGetLevel(_Host, _Level)
THEN
LeaderLib_Helper_Internal_SetHighestPlayerLevel(_Host, _Level);

PROC
LeaderLib_Helper_Internal_SetHighestPlayerLevel((CHARACTERGUID)_Player, (INTEGER)_Level)
THEN
LeaderLib_Helper_Internal_ClearHighestPlayerLevel();
DB_LeaderLib_Helper_Temp_HighestLevelPlayer(_Player, _Level);

PROC
LeaderLib_Helper_Internal_ClearHighestPlayerLevel()
AND
DB_LeaderLib_Helper_Temp_HighestLevelPlayer(_Player, _Level)
THEN
NOT DB_LeaderLib_Helper_Temp_HighestLevelPlayer(_Player, _Level);

PROC
LeaderLib_Helper_Internal_SetHighestLevel((INTEGER)_Level)
AND
DB_LeaderLib_Helper_Temp_HighestPlayerLevel(_HighestLevel)
THEN
NOT DB_LeaderLib_Helper_Temp_HighestPlayerLevel(_HighestLevel);

PROC
LeaderLib_Helper_Internal_SetHighestLevel((INTEGER)_Level)
THEN
DB_LeaderLib_Helper_Temp_HighestPlayerLevel(_Level);

QRY
LeaderLib_Helper_QRY_GetHighestLevelInParty((CHARACTERGUID)_PartyMember)
AND
DB_LeaderLib_Helper_Temp_HighestLevelInParty(_PartyMember, _Level)
THEN
NOT DB_LeaderLib_Helper_Temp_HighestLevelInParty(_PartyMember, _Level);

QRY
LeaderLib_Helper_QRY_GetHighestLevelInParty((CHARACTERGUID)_PartyMember)
AND
NOT DB_LeaderLib_Helper_Temp_HighestLevelInParty(_PartyMember, _)
THEN
DB_LeaderLib_Helper_Temp_HighestLevelInParty(_PartyMember, 1);

QRY
LeaderLib_Helper_QRY_GetHighestLevelInParty((CHARACTERGUID)_PartyMember)
AND
DB_IsPlayer(_Player)
AND
DB_LeaderLib_Helper_Temp_HighestLevelInParty(_PartyMember, _HighestLevel)
AND
CharacterGetLevel(_Player, _Level)
AND
_Level > _HighestLevel
THEN
NOT DB_LeaderLib_Helper_Temp_HighestLevelInParty(_PartyMember, _HighestLevel);
DB_LeaderLib_Helper_Temp_HighestLevelInParty(_PartyMember, _Level);
//END_REGION

//REGION PARTY_LEVELRANGE_STRICT
QRY
LeaderLib_Helper_QRY_PartyMinLevelMet_Strict((INTEGER)_MinLevel)
AND
_MinLevel <= 0
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_PartyMinLevelMet_Strict((INTEGER)_MinLevel)
AND
DB_LeaderLib_Helper_Temp_PartyMemberOutsideOfLevelRange(_Val)
THEN
NOT DB_LeaderLib_Helper_Temp_PartyMemberOutsideOfLevelRange(_Val);

QRY
LeaderLib_Helper_QRY_PartyMinLevelMet_Strict((INTEGER)_MinLevel)
AND
_MinLevel > 0
AND
DB_IsPlayer(_Player)
AND
NOT DB_LeaderLib_Helper_Temp_PartyMemberOutsideOfLevelRange(1)
AND
CharacterGetLevel(_Player, _Level)
AND
_Level < _MinLevel
THEN
DB_LeaderLib_Helper_Temp_PartyMemberOutsideOfLevelRange(1);

QRY
LeaderLib_Helper_QRY_PartyMaxLevelMet_Strict((INTEGER)_MaxLevel)
AND
_MaxLevel <= 0
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_PartyMaxLevelMet_Strict((INTEGER)_MaxLevel)
AND
DB_LeaderLib_Helper_Temp_StopIteratingForMaxLevel(_Val)
THEN
NOT DB_LeaderLib_Helper_Temp_StopIteratingForMaxLevel(_Val);

QRY
LeaderLib_Helper_QRY_PartyMaxLevelMet_Strict((INTEGER)_MaxLevel)
AND
_MaxLevel > 0
AND
DB_IsPlayer(_Player)
AND
NOT DB_LeaderLib_Helper_Temp_PartyMemberOutsideOfLevelRange(1)
AND
CharacterGetLevel(_Player, _Level)
AND
_Level > _MaxLevel
THEN
DB_LeaderLib_Helper_Temp_PartyMemberOutsideOfLevelRange(1);

//Checks to make sure the whole party fits the range
QRY
LeaderLib_Helper_QRY_PartyLevelRangeMet_Strict((INTEGER)_MinLevel, (INTEGER)_MaxLevel)
AND
LeaderLib_Helper_QRY_PartyMinLevelMet_Strict(_MinLevel)
AND
LeaderLib_Helper_QRY_PartyMaxLevelMet_Strict(_MaxLevel)
AND
NOT DB_LeaderLib_Helper_Temp_PartyMemberOutsideOfLevelRange(1)
THEN
DB_NOOP(1);
//END_REGION

//REGION QUERY_USER
QRY
LeaderLib_Helper_QRY_UserMatch((CHARACTERGUID)_Char1, (CHARACTERGUID)_Char2)
AND
CharacterGetReservedUserID(_Char1, _ID)
AND
CharacterGetReservedUserID(_Char2, _ID)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_ObjectUserMatch((GUIDSTRING)_Obj1, (GUIDSTRING)_Obj2)
AND
ObjectIsCharacter((CHARACTERGUID)_Obj1, 1)
AND
ObjectIsCharacter((CHARACTERGUID)_Obj1, 1)
AND
CharacterGetReservedUserID(_Obj1, _ID)
AND
CharacterGetReservedUserID(_Obj1, _ID)
THEN
DB_NOOP(1);
//END_REGION

//REGION QUERY_STATS
QRY
LeaderLib_Helper_QRY_AttributeIsGreater((CHARACTERGUID)_Char1, (CHARACTERGUID)_Char2, (STRING)_Attribute)
AND
CharacterGetAttribute(_Char1, _Attribute, _Val1)
AND
CharacterGetAttribute(_Char2, _Attribute, _Val2)
AND
_Val1 > _Val2
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_AbilityIsGreater((CHARACTERGUID)_Char1, (CHARACTERGUID)_Char2, (STRING)_Ability)
AND
CharacterGetAbility(_Char1, _Ability, _Val1)
AND
CharacterGetAbility(_Char2, _Ability, _Val2)
AND
_Val1 > _Val2
THEN
DB_NOOP(1);
//END_REGION

//REGION FLAG_HELPERS
QRY
LeaderLib_Helper_QRY_ClearObjectFlag((GUIDSTRING)_Object, (STRING)_Flag)
THEN
ObjectClearFlag(_Object, _Flag);

QRY
LeaderLib_Helper_QRY_ClearUserFlag((CHARACTERGUID)_Object, (STRING)_Flag)
THEN
UserClearFlag(_Object, _Flag, 0);

QRY
LeaderLib_Helper_QRY_ClearGlobalFlag((STRING)_Flag)
THEN
GlobalClearFlag(_Flag);

QRY
LeaderLib_Helper_QRY_SetGlobalFlag((STRING)_Flag)
THEN
GlobalSetFlag(_Flag);

//Skip Check
QRY
LeaderLib_Helper_QRY_ObjectFlagEquals((GUIDSTRING)_Object, (STRING)_Flag, -1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_ObjectFlagEquals((GUIDSTRING)_Object, (STRING)_Flag, 0)
AND
ObjectGetFlag(_Object, _Flag, 0)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_ObjectFlagEquals((GUIDSTRING)_Object, (STRING)_Flag, 1)
AND
ObjectGetFlag(_Object, _Flag, 1)
THEN
DB_NOOP(1);

PROC
LeaderLib_Helper_FlipGlobalFlag((STRING)_Flag)
AND
GlobalGetFlag(_Flag, _State)
AND
IntegerSubtract(1, _State, _NextState)
THEN
LeaderLib_Helper_SetGlobalFlag(_Flag, _NextState);

PROC
LeaderLib_Helper_SetGlobalFlag((STRING)_Flag, 1)
THEN
GlobalSetFlag(_Flag);

PROC
LeaderLib_Helper_SetGlobalFlag((STRING)_Flag, 0)
THEN
GlobalClearFlag(_Flag);
//END_REGION

//REGION RANDOM
PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1, 1, 1, 0)
AND
DB_LeaderLib_Random_Seed(_Seed)
THEN
NOT DB_LeaderLib_Random_Seed(_Seed);
LeaderLib_Random_Internal_InitSeed();

QRY
LeaderLib_Random_QRY_Internal_InitSeed()
THEN
LeaderLib_Random_Internal_InitSeed();

/*
A msvcrt-rand-like implementation.
9999 is our max _Modulo for determining the seed at the moment,
since we're unable to clamp or compare integers above the INT32 Max (2,147,483,647).
9,999 x 214,013 + 2,531,011 = 2,142,446,998
(Thanks to Norbyte for the initial MSVCRT rand idea)
*/
PROC
LeaderLib_Random_Internal_InitSeed()
AND
NOT DB_LeaderLib_Random_Seed(_)
AND
Random(9999, _Seed)
AND
IntegerProduct(_Seed, 214013, _SeedLCG1)
AND
IntegerSum(_SeedLCG1, 2531011, _SeedLCG2)
THEN
DB_LeaderLib_Random_Seed(_SeedLCG2);

QRY
LeaderLib_Random_QRY((INTEGER)_Modulo)
THEN
LeaderLib_Random(_Modulo);

PROC
LeaderLib_Random((INTEGER)_Modulo)
AND
DB_LeaderLib_Random(_OldRand)
THEN
NOT DB_LeaderLib_Random(_OldRand);

PROC
LeaderLib_Random((INTEGER)_Modulo)
AND
LeaderLib_Random_QRY_Internal_InitSeed()
AND
DB_LeaderLib_Random_Seed(_Seed)
AND
Random(_Seed, _Ran)
AND
IntegerModulo(_Ran, _Modulo, _Rand)
THEN
DB_LeaderLib_Random(_Rand);

PROC
LeaderLib_Random_CreateSeed()
THEN
LeaderLib_Random_CreateSeed(9999);

PROC
LeaderLib_Random_CreateSeed((INTEGER)_RanMax)
AND
DB_LeaderLib_Random_Seed(_Seed)
THEN
NOT DB_LeaderLib_Random_Seed(_Seed);

PROC
LeaderLib_Random_CreateSeed((INTEGER)_RanMax)
AND
IntegerMin(_RanMax, 9999, _Min)
AND
Random(_Min, _Seed)
AND
IntegerProduct(_Seed, 214013, _SeedLCG1)
AND
IntegerSum(_SeedLCG1, 2531011, _SeedLCG2)
THEN
DB_LeaderLib_Random_Seed(_SeedLCG2);
//END_REGION

//REGION RANDOM_RANGE
QRY
LeaderLib_Random_QRY((INTEGER)_MinRan, (INTEGER)_MaxRan)
THEN
LeaderLib_Random(_MinRan, _MaxRan);

PROC
LeaderLib_Random((INTEGER)_MinRan, (INTEGER)_MaxRan)
AND
DB_LeaderLib_Random(_OldRand)
THEN
NOT DB_LeaderLib_Random(_OldRand);

//min + rand() / (RAND_MAX / (max - min + 1) + 1)
PROC
LeaderLib_Random((INTEGER)_MinRan, (INTEGER)_MaxRan)
AND
Random(99999, _RanSeed)
AND
IntegerSubtract(_MaxRan, _MinRan, _Ran1)
AND
IntegerSum(_Ran1, 1, _Ran2)
AND
IntegerDivide(99999, _Ran2, _Ran3)
AND
IntegerSum(_Ran3, 1, _Ran4)
AND
IntegerDivide(_RanSeed, _Ran4, _Ran5)
AND
IntegerSum(_Ran5, _MinRan, _Val)
THEN
DB_LeaderLib_Random(_Val);
//END_REGION

//REGION RANDOM_ROLL
QRY
LeaderLib_Helper_QRY_RollSucceeded((INTEGER)_Roll, (INTEGER)_Target, (INTEGER)_MaxRoll)
AND
_Roll > 0
AND
_Roll <= _Target
THEN
DB_NOOP(1);

QRY
LeaderLib_Roll_QRY((INTEGER)_Target)
AND
LeaderLib_Roll_QRY(_Target, 999)
THEN
DB_NOOP(1);

QRY
LeaderLib_Roll_QRY((INTEGER)_Target, (INTEGER)_MaxRoll)
AND
LeaderLib_Random_QRY(0, _MaxRoll)
AND
DB_LeaderLib_Random(_Ran)
AND
LeaderLib_Helper_QRY_RollSucceeded(_Ran, _Target, _MaxRoll)
THEN
DB_NOOP(1);
//END_REGION

//REGION DATABASE_HELPERS
PROC
LeaderLib_Helper_ClearExistingDatabase((STRING)_DatabaseName, (INTEGER)_Arity)
AND
SysCount(_DatabaseName, _Arity, _Count)
AND
_Count > 0
THEN
SysClear(_DatabaseName, _Arity);

PROC
LeaderLib_Helper_DatabaseCount((STRING)_DatabaseName, (INTEGER)_Arity)
AND
SysCount(_DatabaseName, _Arity, _Total)
AND
IntegertoString(_Total, _TotalStr)
AND
StringConcatenate("[LeaderLib:Helpers(DatabaseCount)] '", _DatabaseName, _Str1)
AND
StringConcatenate(_Str1, "' Total Entries: ", _Str2)
AND
StringConcatenate(_Str2, _TotalStr, _Str3)
THEN
LeaderLog_Log("DEBUG", _Str3);

QRY
LeaderLib_Helper_QRY_DatabaseIsEmpty((STRING)_DatabaseName, (INTEGER)_Arity)
AND
SysCount(_DatabaseName, _Arity, 0)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_DatabaseIsEmpty((STRING)_DatabaseName, (INTEGER)_Arity)
AND
NOT SysCount(_DatabaseName, _Arity, _)
THEN
DB_NOOP(1);
//END_REGION

//REGION HELPER_DUMMY_REMOVAL
PROC
ProcObjectTimerFinished((CHARACTERGUID)_Dummy, "LeaderLib_Timers_Helper_RemoveTemporaryDummy")
AND
_Dummy != NULL_00000000-0000-0000-0000-000000000000
AND
ObjectExists(_Dummy, 1)
THEN
SetStoryNpc(_Dummy, 0);
RemoveTemporaryCharacter(_Dummy);
//END_REGION

//REGION CHARACTER_COPY
PROC
LeaderLib_Helper_CopyFaction((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom)
AND
LeaderLib_Helper_QRY_CharacterIsPlayer(_CopyFrom)
THEN
CharacterSetRelationIndivFactionToFaction(_CopyTo, "Evil NPC", 0);
CharacterSetRelationIndivFactionToIndivFaction(_CopyTo, _CopyFrom, 100);
CharacterAddAttitudeTowardsPlayer(_CopyTo, _CopyFrom, 100);

PROC
LeaderLib_Helper_CopyFaction((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom)
AND
NOT LeaderLib_Helper_QRY_CharacterIsPlayer(_CopyFrom)
AND
GetFaction(_CopyTo, _Faction)
THEN
//CharacterSetRelationIndivFactionToIndivFaction(_CopyFrom, _CopyTo, 100);
SetFaction(_CopyFrom, _Faction);

PROC
LeaderLib_Helper_CopyStats((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom, (INTEGER)_CopyLevel, (INTEGER)_CopyAttributes, (INTEGER)_CopyAbilities, (INTEGER)_CopyTalents)
THEN
LeaderLib_Helper_Internal_CopyLevel(_CopyTo, _CopyFrom, _CopyLevel);
LeaderLib_Helper_Internal_CopyAttributes(_CopyTo, _CopyFrom, _CopyAbilities);
LeaderLib_Helper_Internal_CopyAbilities(_CopyTo, _CopyFrom, _CopyAttributes);
LeaderLib_Helper_Internal_CopyTalents(_CopyTo, _CopyFrom, _CopyTalents);

PROC
LeaderLib_Helper_Internal_CopyLevel((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom, 1)
THEN
LeaderLib_Helper_CopyLevel(_CopyTo, _CopyFrom);

PROC
LeaderLib_Helper_Internal_CopyAttributes((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom, 1)
THEN
LeaderLib_Helper_CopyAttributes(_CopyTo, _CopyFrom);

PROC
LeaderLib_Helper_Internal_CopyAbilities((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom, 1)
THEN
LeaderLib_Helper_CopyAbilities(_CopyTo, _CopyFrom);

PROC
LeaderLib_Helper_Internal_CopyTalents((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom, 1)
THEN
LeaderLib_Helper_CopyTalents(_CopyTo, _CopyFrom);

PROC
LeaderLib_Helper_CopyLevel((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom)
AND
CharacterGetLevel(_CopyFrom, _TargetLevel)
THEN
CharacterLevelUpTo(_CopyTo, _TargetLevel);

PROC
LeaderLib_Helper_CopyAbilities((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom)
AND
DB_LeaderLib_Abilities(_Ability)
AND
CharacterGetAbility(_CopyFrom, _Ability, _Val)
AND
CharacterGetAbility(_CopyTo, _Ability, _CurrentVal)
AND
IntegerSubtract(_Val, _CurrentVal, _AddVal)
AND
_AddVal > 0
THEN
CharacterAddAbility(_CopyTo, _Ability, _AddVal);

PROC
LeaderLib_Helper_CopyAttributes((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom)
AND
DB_LeaderLib_Attributes(_Attribute)
AND
CharacterGetAttribute(_CopyFrom, _Attribute, _Val)
AND
CharacterGetAttribute(_CopyTo, _Attribute, _CurrentVal)
AND
IntegerSubtract(_Val, _CurrentVal, _AddVal)
AND
_AddVal > 0
THEN
CharacterAddAttribute(_CopyTo, _Attribute, _AddVal);

PROC
LeaderLib_Helper_CopyTalents((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom)
AND
DB_LeaderLib_Talents(_Talent)
AND
CharacterHasTalent(_CopyFrom, _Talent, 1)
THEN
CharacterAddTalent(_CopyTo, _Talent);

IF
CharacterCharacterEvent((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom, "LeaderLib_Commands_CopyAllStats")
THEN
LeaderLib_Helper_CopyStats(_CopyTo, _CopyFrom, 1, 1, 1, 1);

IF
CharacterCharacterEvent((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom, "LeaderLib_Commands_CopyAbilities")
THEN
LeaderLib_Helper_CopyAbilities(_CopyTo, _CopyFrom);

IF
CharacterCharacterEvent((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom, "LeaderLib_Commands_CopyAttributes")
THEN
LeaderLib_Helper_CopyAttributes(_CopyTo, _CopyFrom);

PROC
LeaderLib_Helper_CopySkills((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom)
AND
GetPosition(_CopyFrom, _x, _y, _z)
AND
TemporaryCharacterCreateOutOfSightToObject("LeaderLib_SkillDummy_94668062-11ea-4ecf-807c-4cc225cbb236", _CopyFrom, _CopyTo, 0, "", _Dummy)
THEN
SetStoryNpc(_Dummy, 1);
SetCanJoinCombat(_Dummy, 0);
SetCanFight(_Dummy, 0);
SetFaction(_Dummy, "Good NPC");
DB_LeaderLib_Helper_Temp_SkillCopy(_CopyTo, _CopyFrom, _Dummy);
CharacterCloneSkillsTo(_CopyFrom, _Dummy, 0);
LeaderLib_Timers_StartCharacterCharacterTimer(_CopyTo, _CopyFrom, 50, "LeaderLib_Timers_Helper_AddCopiedSkills", "LeaderLib_Helper_Internal_AddCopiedSkills");

IF
SkillAdded(_Dummy, _Skill, _Learned)
AND
DB_LeaderLib_Helper_Temp_SkillCopy(_CopyTo, _CopyFrom, _Dummy)
AND
NOT DB_LeaderLib_BlockedSkill(_Skill)
THEN
LeaderLib_Helper_BlockSkillCopying(_CopyTo, _CopyFrom, _Skill, _Learned);
LeaderLib_Helper_Internal_ProcessCopiedSkill(_CopyTo, _CopyFrom, _Skill);


PROC
LeaderLib_Helper_BlockSkillCopying((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom, (STRING)_Skill, (INTEGER)_Learned)
THEN
//DB_LeaderLib_Helper_Temp_BlockedSkill(_CopyTo, _CopyFrom, _Skill)
DB_NOOP(1);

PROC
LeaderLib_Helper_Internal_ProcessCopiedSkill((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom, (STRING)_Skill)
AND
NOT DB_LeaderLib_Helper_Temp_BlockedSkill(_CopyTo, _CopyFrom, _Skill)
THEN
DB_LeaderLib_Helper_Temp_CopiedSkill(_CopyTo, _CopyFrom, _Skill);

PROC
LeaderLib_Helper_Internal_ProcessCopiedSkill((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom, (STRING)_Skill)
AND
DB_LeaderLib_Helper_Temp_BlockedSkill(_CopyTo, _CopyFrom, _Skill)
THEN
NOT DB_LeaderLib_Helper_Temp_BlockedSkill(_CopyTo, _CopyFrom, _Skill);

IF
CharacterCharacterEvent(_CopyTo, _CopyFrom, "LeaderLib_Helper_Internal_AddCopiedSkills")
AND
DB_LeaderLib_Helper_Temp_CopiedSkill(_CopyTo, _CopyFrom, _Skill)
THEN
NOT DB_LeaderLib_Helper_Temp_CopiedSkill(_CopyTo, _CopyFrom, _Skill);
CharacterAddSkill(_CopyTo, _Skill, 0);

IF
CharacterCharacterEvent(_CopyTo, _CopyFrom, "LeaderLib_Helper_Internal_AddCopiedSkills")
THEN
LeaderLib_Helper_OnSkillsCopied(_CopyTo, _CopyFrom);

PROC
LeaderLib_Helper_OnSkillsCopied((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom)
THEN
DB_NOOP(1);

IF
CharacterCharacterEvent(_CopyTo, _CopyFrom, "LeaderLib_Helper_Internal_AddCopiedSkills")
AND
DB_LeaderLib_Helper_Temp_SkillCopy(_CopyTo, _CopyFrom, _Dummy)
THEN
NOT DB_LeaderLib_Helper_Temp_SkillCopy(_CopyTo, _CopyFrom, _Dummy);
ProcObjectTimer(_Dummy, "LeaderLib_Timers_Helper_RemoveTemporaryDummy", 250);
//END_REGION

//REGION COPY_EQUIPMENT
PROC
LeaderLib_Helper_Blacklist_TemplateFromCopying((STRING)_Group, (STRING)_Template)
THEN
DB_LeaderLib_Helper_EquipmentCopyBlacklist_Templates(_Group, _Template);

PROC
LeaderLib_Helper_Blacklist_TagFromCopying((STRING)_Group, (STRING)_Tag)
THEN
DB_LeaderLib_Helper_EquipmentCopyBlacklist_Tags(_Group, _Tag);

PROC
LeaderLib_Helper_Blacklist_ClearGroup((STRING)_Group)
AND
DB_LeaderLib_Helper_EquipmentCopyBlacklist_Templates(_Group, _Template)
THEN
NOT DB_LeaderLib_Helper_EquipmentCopyBlacklist_Templates(_Group, _Template);

PROC
LeaderLib_Helper_Blacklist_ClearGroup((STRING)_Group)
AND
DB_LeaderLib_Helper_EquipmentCopyBlacklist_Tags(_Group, _Tag)
THEN
NOT DB_LeaderLib_Helper_EquipmentCopyBlacklist_Tags(_Group, _Tag);

PROC
LeaderLib_Helper_CopyEquipment((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom)
THEN
LeaderLib_Helper_CopyEquipment(_CopyTo, _CopyFrom, 0);

PROC
LeaderLib_Helper_CopyEquipment((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom, (INTEGER)_WeaponsOnly)
AND
GetPosition(_CopyFrom, _x, _y, _z)
AND
//TemporaryCharacterCreateOutOfSightToObject([in](STRING)_TemplateId, [in](CHARACTERGUID)_ToTarget, [in](GUIDSTRING)_FromObject, [in](INTEGER)_PlaySpawn, [in](STRING)_Event, [out](CHARACTERGUID)_Created)
//TemporaryCharacterCreateAtPosition(_x, _y, _z, "LeaderLib_SkillDummy_94668062-11ea-4ecf-807c-4cc225cbb236", 0, _Dummy)
//TemporaryCharacterCreateAtPositionOutOfSightTo(_x, _y, _z, "LeaderLib_SkillDummy_94668062-11ea-4ecf-807c-4cc225cbb236", 180, 0, "", _Dummy)
TemporaryCharacterCreateOutOfSightToObject("LeaderLib_SkillDummy_94668062-11ea-4ecf-807c-4cc225cbb236", _CopyFrom, _CopyTo, 0, "", _Dummy)
//TemporaryCharacterCreateAtPositionOutOfSightTo([in](REAL)_X, [in](REAL)_Y, [in](REAL)_Z, [in](STRING)_TemplateId, [in](INTEGER)_Angle, [in](INTEGER)_PlaySpawn, [in](STRING)_Event, [out](CHARACTERGUID)_Created)
THEN
//LeaderLib_Helper_SetupDummy(_Dummy);
//SetDetached and SetVisible seem to make the dummy appear for a moment as it fades away (in the editor at least)
SetStoryNpc(_Dummy, 1);
DB_LeaderLib_Helper_Temp_CopyEquipment(_CopyTo, _CopyFrom, _Dummy, _WeaponsOnly);
ObjectSetFlag(_Dummy, "LEADERLIB_IGNORE", 0);
CharacterTransformFromCharacter(_Dummy, _CopyFrom, 0, 0, 0, 1, 0, 0, 0);
SetCanJoinCombat(_Dummy, 0);
SetCanFight(_Dummy, 0);
SetFaction(_Dummy, "Good NPC");
SetTag(_Dummy, "LeaderLib_Dummy");
ProcObjectTimer(_Dummy, "LeaderLib_Timers_CopyEquipment", 10);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Dummy, "LeaderLib_Timers_CopyEquipment")
THEN
ProcObjectTimer(_Dummy, "LeaderLib_Timers_CopyEquipmentDone", 25);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Dummy, "LeaderLib_Timers_CopyEquipment")
AND
DB_LeaderLib_Helper_Temp_CopyEquipment(_CopyTo, _CopyFrom, _Dummy, 0)
AND
DB_LeaderLib_EquipmentSlots(_Slot)
AND
CharacterGetEquippedItem(_Dummy, _Slot, (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
GetTemplate(_Item, _Template)
THEN
LeaderLib_Helper_BlockEquipmentFromCopying(_Dummy, _Item, _Template);
LeaderLib_Helper_Internal_CheckItemForBlacklist(_Dummy, _Item, _Template);
LeaderLib_Helper_Internal_ProcessCopiedItem(_Dummy, _Item, _Slot);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Dummy, "LeaderLib_Timers_CopyEquipment")
AND
DB_LeaderLib_Helper_Temp_CopyEquipment(_CopyTo, _CopyFrom, _Dummy, 1)
AND
CharacterGetEquippedItem(_Dummy, "Weapon", (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
GetTemplate(_Item, _Template)
THEN
LeaderLib_Helper_BlockEquipmentFromCopying(_Dummy, _Item, _Template);
LeaderLib_Helper_Internal_CheckItemForBlacklist(_Dummy, _Item, _Template);
LeaderLib_Helper_Internal_ProcessCopiedItem(_Dummy, _Item, "Weapon");

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Dummy, "LeaderLib_Timers_CopyEquipment")
AND
DB_LeaderLib_Helper_Temp_CopyEquipment(_CopyTo, _CopyFrom, _Dummy, 1)
AND
CharacterGetEquippedItem(_Dummy, "Shield", (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
GetTemplate(_Item, _Template)
THEN
LeaderLib_Helper_BlockEquipmentFromCopying(_Dummy, _Item, _Template);
LeaderLib_Helper_Internal_CheckItemForBlacklist(_Dummy, _Item, _Template);
LeaderLib_Helper_Internal_ProcessCopiedItem(_Dummy, _Item, "Shield");

PROC
LeaderLib_Helper_BlockEquipmentFromCopying((CHARACTERGUID)_Dummy, (ITEMGUID)_Item, (STRING)_Template)
THEN
//DB_LeaderLib_Helper_Temp_ItemBlacklisted(_Item);
DB_NOOP(1);

PROC
LeaderLib_Helper_Internal_CheckItemForBlacklist((CHARACTERGUID)_Dummy, (ITEMGUID)_Item, (STRING)_Template)
AND
NOT DB_LeaderLib_Helper_Temp_EquipmentCopy(_Dummy, _Item, _)
AND
NOT DB_LeaderLib_Helper_Temp_ItemBlacklisted(_Item)
AND
DB_LeaderLib_Helper_EquipmentCopyBlacklist_Templates(_Group, _Template)
THEN
ItemRemove(_Item);
DB_LeaderLib_Helper_Temp_ItemBlacklisted(_Item);

PROC
LeaderLib_Helper_Internal_CheckItemForBlacklist((CHARACTERGUID)_Dummy, (ITEMGUID)_Item, (STRING)_Template)
AND
NOT DB_LeaderLib_Helper_Temp_EquipmentCopy(_Dummy, _Item, _)
AND
NOT DB_LeaderLib_Helper_Temp_ItemBlacklisted(_Item)
AND
DB_LeaderLib_Helper_EquipmentCopyBlacklist_Tags(_Group, _Tag)
AND
IsTagged(_Item, _Tag, 1)
THEN
ItemRemove(_Item);
DB_LeaderLib_Helper_Temp_ItemBlacklisted(_Item);

PROC
LeaderLib_Helper_Internal_ProcessCopiedItem((CHARACTERGUID)_Dummy, (ITEMGUID)_Item, (STRING)_SLot)
AND
NOT DB_LeaderLib_Helper_Temp_ItemBlacklisted(_Item)
AND
NOT DB_LeaderLib_Helper_Temp_EquipmentCopy(_Dummy, _Item, _SLot)
THEN
DB_LeaderLib_Helper_Temp_EquipmentCopy(_Dummy, _Item, _SLot);

PROC
LeaderLib_Helper_Internal_ProcessCopiedItem((CHARACTERGUID)_Dummy, (ITEMGUID)_Item, (STRING)_SLot)
AND
DB_LeaderLib_Helper_Temp_ItemBlacklisted(_Item)
THEN
NOT DB_LeaderLib_Helper_Temp_ItemBlacklisted(_Item);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Dummy, "LeaderLib_Timers_CopyEquipmentDone")
AND
DB_LeaderLib_Helper_Temp_CopyEquipment(_CopyTo, _CopyFrom, _Dummy, _WeaponsOnly)
THEN
NOT DB_LeaderLib_Helper_Temp_CopyEquipment(_CopyTo, _CopyFrom, _Dummy, _WeaponsOnly);
LeaderLib_Helper_Internal_EquipCopiedEquipment(_CopyTo, _Dummy);
LeaderLib_Timers_StartCharacterCharacterTimer(_CopyTo, _CopyFrom, 50, "LeaderLib_Timers_CopyEquipment_Finished", "LeaderLib_Helpers_CopyEquipment_Finished");
ProcObjectTimer(_Dummy, "LeaderLib_Timers_Helper_RemoveTemporaryDummy", 250);

IF
CharacterCharacterEvent(_CopyTo, _CopyFrom, "LeaderLib_Helpers_CopyEquipment_Finished")
THEN
LeaderLib_Helper_OnCopyEquipmentFinished(_CopyTo, _CopyFrom);

PROC
LeaderLib_Helper_Internal_EquipCopiedEquipment((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_Dummy)
AND
DB_LeaderLib_Helper_Temp_EquipmentCopy(_Dummy, _Item, _SLot)
AND
LeaderLib_Helper_QRY_UnequipInSlot(_CopyTo, _SLot) // Prevent moving unequipped items to the Dummy
THEN
CharacterEquipItem(_CopyTo, _Item);
NOT DB_LeaderLib_Helper_Temp_EquipmentCopy(_Dummy, _Item, _SLot);

PROC
LeaderLib_Helper_OnCopyEquipmentFinished((CHARACTERGUID)_CopyTo, (CHARACTERGUID)_CopyFrom)
THEN
DB_NOOP(1);
//END_REGION

//REGION BEHAVIOR_SCRIPT_HELPERS
IF
StoryEvent(_Object, "LeaderLib_Commands_StartObjectTimer")
AND
GetVarString(_Object, "LeaderLib_Timer_CompleteEvent", _CompleteEvent)
AND
GetVarInteger(_Object, "LeaderLib_Timer_Delay", _TimerDelay)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:Main:LeaderLib_Commands_StartObjectTimer] Starting object timer with complete event [",_CompleteEvent,"].");
LeaderLib_Timers_StartObjectTimer(_Object, _TimerDelay, "LeaderLib_Timers_BehaviorScriptTimer_", _CompleteEvent);

IF
StoryEvent(_Object, "LeaderLib_Commands_CancelObjectTimer")
AND
GetVarString(_Object, "LeaderLib_Timer_CancelByEventEvent", _CompleteEvent)
THEN
LeaderLib_Timers_CancelObjectTimerByEvent(_Object, _CompleteEvent);
SetVarString(_Object, "LeaderLib_Timer_CancelByEventEvent", "");

//Behavior can't cast an object to a string
IF
StoryEvent(_Object, "LeaderLib_Commands_GetUUID")
AND
GetUUID(_Object, _UUID)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helpers:LeaderLib_Commands_GetUUID] Set variable [LeaderLib_UUID] on object to [",_UUID,"].");
SetVarString(_Object, "LeaderLib_UUID", _UUID);
SetStoryEvent(_Object, "LeaderLib_Events_UUIDSet");
//END_REGION

//REGION QUERIES_MISC
QRY
LeaderLib_Helper_QRY_IsLobby((STRING)_Level)
AND
_Level == "Arena_Lobby"
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IsCharacterCreationOrLobby((STRING)_Level)
AND
LeaderLib_Helper_QRY_IsLobby(_Level)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IsCharacterCreationOrLobby((STRING)_Level)
AND
IsCharacterCreationLevel(_Level, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_ObjectIsAlive((GUIDSTRING)_Object)
AND
CharacterIsDead((CHARACTERGUID)_Object, 0)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_ObjectIsAlive((GUIDSTRING)_Object)
AND
ItemIsDestroyed((ITEMGUID)_Object, 0)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IsRace((CHARACTERGUID)_Char, (STRING)_BaseRaceTag)
AND
LeaderLib_Helper_QRY_IsRace(_Char, _BaseRaceTag, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IsRace((CHARACTERGUID)_Char, (STRING)_BaseRaceTag, (INTEGER)_AllowPolymorph)
AND
DB_LeaderLib_RaceTags(_Race, _Tag, _BaseRaceTag)
AND
IsTagged(_Char, _BaseRaceTag, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IsRace((CHARACTERGUID)_Char, (STRING)_BaseRaceTag, (INTEGER)_AllowPolymorph)
AND
DB_LeaderLib_RaceTags(_Race, _Tag, _BaseRaceTag)
AND
CharacterGetRace(_Char, _AllowPolymorph, _Race)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IsRace((CHARACTERGUID)_Char, (STRING)_BaseRaceTag, (INTEGER)_AllowPolymorph)
AND
DB_LeaderLib_RaceTags(_Race, _Tag, _BaseRaceTag)
AND
IsTagged(_Char, _Tag, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IsUndeadRace((CHARACTERGUID)_Char, (STRING)_BaseRaceTag)
AND
LeaderLib_Helper_QRY_IsUndeadRace(_Char, _BaseRaceTag, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IsUndeadRace((CHARACTERGUID)_Char, (STRING)_BaseRaceTag, (INTEGER)_AllowPolymorph)
AND
DB_LeaderLib_RaceTags(_Race, _Tag, _BaseRaceTag)
AND
StringContains(_Tag, "UNDEAD_", 1)
AND
IsTagged(_Char, _Tag, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IsUndeadRace((CHARACTERGUID)_Char, (STRING)_BaseRaceTag, (INTEGER)_AllowPolymorph)
AND
DB_LeaderLib_RaceTags(_Race, _Tag, _BaseRaceTag)
AND
StringContains(_Tag, "UNDEAD_", 1)
AND
CharacterGetRace(_Char, _AllowPolymorph, _Race)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IsRaceOrOriginSkill((STRING)_Skill)
AND
DB_LeaderLib_RacialSkills(_, _Skill)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_IsRaceOrOriginSkill((STRING)_Skill)
AND
DB_LeaderLib_OriginSkills(_, _Skill)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_EitherCharacterMatches((CHARACTERGUID)_Char1, (CHARACTERGUID)_Char1, (CHARACTERGUID)_Char2)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_EitherCharacterMatches((CHARACTERGUID)_Char2, (CHARACTERGUID)_Char1, (CHARACTERGUID)_Char2)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_CapPercentage((CHARACTERGUID)_Char, (REAL)_Percentage)
THEN
LeaderLib_Helper_CapPercentage(_Char, _Percentage, 100.0);

QRY
LeaderLib_Helper_QRY_CapPercentage((CHARACTERGUID)_Char, (REAL)_Percentage, (REAL)_Max)
THEN
LeaderLib_Helper_CapPercentage(_Char, _Percentage, _Max);

PROC
LeaderLib_Helper_CapPercentage((CHARACTERGUID)_Char, (REAL)_Percentage, (REAL)_Max)
AND
_Percentage < _Max
THEN
DB_LeaderLib_Helper_Temp_CappedPercentage(_Char, _Percentage);

PROC
LeaderLib_Helper_CapPercentage((CHARACTERGUID)_Char, (REAL)_Percentage, (REAL)_Max)
AND
_Percentage >= _Max
THEN
DB_LeaderLib_Helper_Temp_CappedPercentage(_Char, _Max);

QRY
LeaderLib_Helper_QRY_SpeakerIsInDialog((GUIDSTRING)_Speaker, (INTEGER)_Instance)
AND
DB_DialogPlayers(_Instance, _Speaker, _Index)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_SpeakerIsInDialog((GUIDSTRING)_Speaker, (INTEGER)_Instance)
AND
DB_DialogNPCs(_Instance, _Speaker, _Index)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_SpeakerIsInDialogName((GUIDSTRING)_Speaker, (STRING)_Dialog)
AND
DB_DialogName(_Dialog, _Instance)
AND
LeaderLib_Helper_QRY_SpeakerIsInDialog(_Speaker, _Instance)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_DialogIsRegistered((STRING)_Dialog)
AND
DB_Dialogs((GUIDSTRING)_Npc,(STRING)_Dialog)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_DialogIsRegistered((STRING)_Dialog)
AND
DB_Dialogs((GUIDSTRING)_Npc,(GUIDSTRING)_Npc2,(STRING)_Dialog)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_DialogIsRegistered((STRING)_Dialog)
AND
DB_Dialogs((GUIDSTRING)_Npc,(GUIDSTRING)_Npc2,(GUIDSTRING)_Npc3,(STRING)_Dialog)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_DialogIsRegistered((STRING)_Dialog)
AND
DB_Dialogs((GUIDSTRING)_Npc,(GUIDSTRING)_Npc2,(GUIDSTRING)_Npc3,(GUIDSTRING)_Npc4,(STRING)_Dialog)
THEN
DB_NOOP(1);
//END_REGION

//REGION QUERIES_CHARACTERS
QRY
LeaderLib_Helper_QRY_EitherCharacterIsDead((CHARACTERGUID)_Char1, (CHARACTERGUID)_Char2)
AND
CharacterIsDead(_Char1, _IsDead1)
AND
CharacterIsDead(_Char2, _IsDead2)
AND
IntegerMax(_IsDead1, _IsDead2, 1)
THEN
DB_NOOP(1);

//Feign Allowed
QRY
LeaderLib_Helper_QRY_EitherCharacterIsDeadOrFeign((CHARACTERGUID)_Char1, (CHARACTERGUID)_Char2)
AND
CharacterIsDeadOrFeign(_Char1, _IsDead1)
AND
CharacterIsDeadOrFeign(_Char2, _IsDead2)
AND
IntegerMax(_IsDead1, _IsDead2, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_CharacterIsHumanoid((CHARACTERGUID)_Char)
AND
DB_LeaderLib_RaceTags(_Race, _Tag, _BaseRace)
AND
IsTagged(_Char, _Tag, _a)
AND
IsTagged(_Char, _BaseRace, _b)
AND
IntegerMax(_a, _b, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_CharacterIsHumanoid((CHARACTERGUID)_Char)
AND
LeaderLib_Helper_QRY_CharacterIsPlayer(_Char) // CharacterGetRace doesn't work with NPCs
AND
DB_LeaderLib_RaceTags(_Race, _Tag, _BaseRace)
AND
CharacterGetRace(_Char, 1, _Race)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_CharacterIsDeadOrDying((CHARACTERGUID)_Char)
AND
CharacterIsDead(_Char, _a)
AND
HasActiveStatus(_Char, "DYING", _b)
AND
IntegerMax(_a, _b, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_CharacterIsPlayer((CHARACTERGUID)_Char)
AND
CharacterIsPlayer(_Char, _a)
AND
CharacterIsPartyMember(_Char, _b)
AND
IntegerMax(_a, _b, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_CharacterIsPlayer((CHARACTERGUID)_Char)
AND
DB_IsPlayer(_Char)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_FactionIsSet((CHARACTERGUID)_Char)
AND
GetFaction(_Char, _Faction)
AND
_Faction != ""
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_FactionIsSet((CHARACTERGUID)_Char, (STRING)_Faction)
AND
GetFaction(_Char, _Faction)
THEN
DB_NOOP(1);
//END_REGION

//REGION QUERIES_DISTANCE
QRY
LeaderLib_Helper_QRY_PartyOutsideOfRange((GUIDSTRING)_Object, (REAL)_Range)
AND
DB_IsPlayer(_Player)
AND
CharacterIsDead(_Player, 0)
AND
GetDistanceTo(_Object, _Player, _Dist)
AND
_Dist > _Range
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_PartyOutsideOfRange((GUIDSTRING)_Object, (REAL)_Range)
AND
DB_LeaderLib_PartyFollower((CHARACTERGUID)_Owner, (CHARACTERGUID)_Follower)
AND
CharacterIsDead(_Follower, 0)
AND
GetDistanceTo(_Object, _Follower, _Dist)
AND
_Dist > _Range
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_PartyOutsideOfRange((REAL)_x, (REAL)_y, (REAL)_z, (REAL)_Range)
AND
DB_IsPlayer(_Player)
AND
CharacterIsDead(_Player, 0)
AND
GetDistanceToPosition(_Player, _x, _y, _z, _Dist)
AND
_Dist > _Range
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_PartyOutsideOfRange((REAL)_x, (REAL)_y, (REAL)_z, (REAL)_Range)
AND
DB_LeaderLib_PartyFollower((CHARACTERGUID)_Owner, (CHARACTERGUID)_Follower)
AND
CharacterIsDead(_Follower, 0)
AND
GetDistanceToPosition(_Follower, _x, _y, _z, _Dist)
AND
_Dist > _Range
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_DistanceWithin((GUIDSTRING)_Obj1, (GUIDSTRING)_Obj2, (REAL)_MaxDist)
AND
_MaxDist <= 0
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_DistanceWithin((GUIDSTRING)_Obj1, (GUIDSTRING)_Obj2, (REAL)_MaxDist)
AND
_MaxDist > 0
AND
GetDistanceTo(_Obj1, _Obj2, _Dist)
AND
_Dist <= _MaxDist
THEN
DB_NOOP(1);
//END_REGION

//REGION QUERIES_STRINGS
QRY
LeaderLib_String_QRY_EqualsAny((STRING)_Str, (STRING)_Check1, (STRING)_Check2)
AND
_Str == _Check1
THEN
DB_NOOP(1);

QRY
LeaderLib_String_QRY_EqualsAny((STRING)_Str, (STRING)_Check1, (STRING)_Check2)
AND
_Str == _Check2
THEN
DB_NOOP(1);

QRY
LeaderLib_String_QRY_EqualsAny((STRING)_Str, (STRING)_Check1, (STRING)_Check2, (STRING)_Check3)
AND
_Str == _Check3
THEN
DB_NOOP(1);

QRY
LeaderLib_String_QRY_EqualsAny((STRING)_Str, (STRING)_Check1, (STRING)_Check2, (STRING)_Check3)
AND
LeaderLib_String_QRY_EqualsAny(_Str, _Check1, _Check2)
THEN
DB_NOOP(1);

QRY
LeaderLib_String_QRY_EqualsAny((STRING)_Str, (STRING)_Check1, (STRING)_Check2, (STRING)_Check3, (STRING)_Check4)
AND
_Str == _Check4
THEN
DB_NOOP(1);

QRY
LeaderLib_String_QRY_EqualsAny((STRING)_Str, (STRING)_Check1, (STRING)_Check2, (STRING)_Check3, (STRING)_Check4)
AND
LeaderLib_String_QRY_EqualsAny(_Str, _Check1, _Check2, _Check3)
THEN
DB_NOOP(1);
//END_REGION

//REGION DUMMY_HELPERS
PROC
LeaderLib_Helper_SetupDummy((CHARACTERGUID)_Dummy)
THEN
SetStoryNpc(_Dummy, 1);
CharacterSetDetached(_Dummy, 1);
SetCanJoinCombat(_Dummy, 0);
SetCanFight(_Dummy, 0);
SetVisible(_Dummy, 0); // Disable Physics

PROC
LeaderLib_Helper_ResetDummy((CHARACTERGUID)_Dummy)
THEN
SetStoryNpc(_Dummy, 0);
CharacterSetDetached(_Dummy, 0);
SetCanJoinCombat(_Dummy, 1);
SetCanFight(_Dummy, 1);
SetVisible(_Dummy, 1);
//END_REGION

//REGION SURFACE_LIST
QRY
LeaderLib_Helper_QRY_SurfaceDoesNotMatchGroup((STRING)_Surface, "")
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_SurfaceDoesNotMatchGroup((STRING)_Surface, (STRING)_Group)
AND
_Group != ""
AND
NOT DB_LeaderLib_SurfaceGroup(_Surface, _Group)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_SurfaceMatchesGroup((STRING)_Surface, "")
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_SurfaceMatchesGroup((STRING)_Surface, (STRING)_Group)
AND
_Group != ""
AND
DB_LeaderLib_SurfaceGroup(_Surface, _Group)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_SurfaceMatchesAnyGroup((STRING)_Surface, (STRING)_Group1, (STRING)_Group2, (STRING)_Group3)
AND
_Group1 != ""
AND
DB_LeaderLib_SurfaceGroup(_Surface, _Group1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_SurfaceMatchesAnyGroup((STRING)_Surface, (STRING)_Group1, (STRING)_Group2, (STRING)_Group3)
AND
_Group2 != ""
AND
DB_LeaderLib_SurfaceGroup(_Surface, _Group2)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_SurfaceMatchesAnyGroup((STRING)_Surface, (STRING)_Group1, (STRING)_Group2, (STRING)_Group3)
AND
_Group3 != ""
AND
DB_LeaderLib_SurfaceGroup(_Surface, _Group3)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_SurfaceMatchesAllGroups((STRING)_Surface, (STRING)_Group1, (STRING)_Group2, (STRING)_Group3)
AND
LeaderLib_Helper_QRY_SurfaceMatchesGroup(_Surface, _Group1)
AND
LeaderLib_Helper_QRY_SurfaceMatchesGroup(_Surface, _Group2)
AND
LeaderLib_Helper_QRY_SurfaceMatchesGroup(_Surface, _Group3)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_SurfaceMatchesAllGroupsWithIgnored((STRING)_Surface, (STRING)_Group1, (STRING)_Group2, (STRING)_Group3, (STRING)_IgnoreGroup1)
AND
LeaderLib_Helper_QRY_SurfaceDoesNotMatchGroup(_Surface, _IgnoreGroup1)
AND
LeaderLib_Helper_QRY_SurfaceMatchesGroup(_Surface, _Group1)
AND
LeaderLib_Helper_QRY_SurfaceMatchesGroup(_Surface, _Group2)
AND
LeaderLib_Helper_QRY_SurfaceMatchesGroup(_Surface, _Group3)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_SurfaceMatchesAllGroupsWithIgnored((STRING)_Surface, (STRING)_Group1, (STRING)_Group2, (STRING)_Group3, (STRING)_IgnoreGroup1, (STRING)_IgnoreGroup2)
AND
LeaderLib_Helper_QRY_SurfaceDoesNotMatchGroup(_Surface, _IgnoreGroup1)
AND
LeaderLib_Helper_QRY_SurfaceDoesNotMatchGroup(_Surface, _IgnoreGroup2)
AND
LeaderLib_Helper_QRY_SurfaceMatchesGroup(_Surface, _Group1)
AND
LeaderLib_Helper_QRY_SurfaceMatchesGroup(_Surface, _Group2)
AND
LeaderLib_Helper_QRY_SurfaceMatchesGroup(_Surface, _Group3)
THEN
DB_NOOP(1);

QRY
LeaderLib_Helper_QRY_SurfaceMatchesAllGroupsWithIgnored((STRING)_Surface, (STRING)_Group1, (STRING)_Group2, (STRING)_Group3, (STRING)_IgnoreGroup1, (STRING)_IgnoreGroup2, (STRING)_IgnoreGroup3)
AND
LeaderLib_Helper_QRY_SurfaceDoesNotMatchGroup(_Surface, _IgnoreGroup1)
AND
LeaderLib_Helper_QRY_SurfaceDoesNotMatchGroup(_Surface, _IgnoreGroup2)
AND
LeaderLib_Helper_QRY_SurfaceDoesNotMatchGroup(_Surface, _IgnoreGroup3)
AND
LeaderLib_Helper_QRY_SurfaceMatchesGroup(_Surface, _Group1)
AND
LeaderLib_Helper_QRY_SurfaceMatchesGroup(_Surface, _Group2)
AND
LeaderLib_Helper_QRY_SurfaceMatchesGroup(_Surface, _Group3)
THEN
DB_NOOP(1);

PROC
LeaderLib_Helper_ClearSurfaceList((STRING)_ID)
AND
LeaderLib_Array_QRY_DataExists(_ID)
THEN
LeaderLib_Array_ClearArray(_ID);

PROC
LeaderLib_Helper_BuildSurfaceList((STRING)_ID, (STRING)_Group1, (INTEGER)_StrictMatch)
THEN
LeaderLib_Helper_BuildSurfaceList(_ID, _Group1, "", "", _StrictMatch);

PROC
LeaderLib_Helper_BuildSurfaceList((STRING)_ID, (STRING)_Group1, (STRING)_Group2, (INTEGER)_StrictMatch)
THEN
LeaderLib_Helper_BuildSurfaceList(_ID, _Group1, _Group2, "", _StrictMatch);

PROC
LeaderLib_Helper_BuildSurfaceList((STRING)_ID, (STRING)_Group1, (STRING)_Group2, (STRING)_Group3, 1)
AND
DB_LeaderLib_Surfaces(_Index, _Surface)
AND
LeaderLib_Helper_QRY_SurfaceMatchesAllGroups(_Surface, _Group1, _Group2, _Group3)
THEN
LeaderLib_Array_AddToArray(_ID, _Surface);

PROC
LeaderLib_Helper_BuildSurfaceList((STRING)_ID, (STRING)_Group1, (STRING)_Group2, (STRING)_Group3, 0)
AND
DB_LeaderLib_Surfaces(_Index, _Surface)
AND
LeaderLib_Helper_QRY_SurfaceMatchesAnyGroup(_Surface, _Group1, _Group2, _Group3)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Helper:BuildSurfaceList] Added surface [",_Surface,"] to array [",_ID,"]");
LeaderLib_Array_AddToArray(_ID, _Surface);

PROC
LeaderLib_Helper_BuildSurfaceListAndIgnore((STRING)_ID, (STRING)_Group1, (STRING)_Group2, (STRING)_Group3, (STRING)_IgnoreGroup1, (STRING)_IgnoreGroup2, (STRING)_IgnoreGroup3)
THEN
LeaderLib_Helper_ClearSurfaceList(_ID);

PROC
LeaderLib_Helper_BuildSurfaceListAndIgnore((STRING)_ID, (STRING)_Group1, (STRING)_Group2, (STRING)_Group3, (STRING)_Group3, (STRING)_IgnoreGroup1, (STRING)_IgnoreGroup2, (STRING)_IgnoreGroup3)
AND
DB_LeaderLib_Surfaces(_Index, _Surface)
AND
LeaderLib_Helper_QRY_SurfaceMatchesAllGroupsWithIgnored(_Surface, _Group1, _Group2, _Group3, _IgnoreGroup1, _IgnoreGroup2, _IgnoreGroup3)
THEN
LeaderLib_Array_AddToArray(_ID, _Surface);
//END_REGION

//REGION TELEPORT_HELPERS
PROC
LeaderLib_Helper_SafeTeleport((GUIDSTRING)_Object, (GUIDSTRING)_Target)
AND
GetPosition(_Target, _x, _y, _z)
THEN
LeaderLib_Helper_SafeTeleportToPosition(_Object, _x, _y, _z, "", 8.0, 0, 0, 0);

PROC
LeaderLib_Helper_SafeTeleport((GUIDSTRING)_Object, (GUIDSTRING)_Target, (STRING)_TeleportEvent)
AND
GetPosition(_Target, _x, _y, _z)
THEN
LeaderLib_Helper_SafeTeleportToPosition(_Object, _x, _y, _z, _TeleportEvent, 8.0, 0, 0, 0);

PROC
LeaderLib_Helper_SafeTeleport((GUIDSTRING)_Object, (GUIDSTRING)_Target, (STRING)_TeleportEvent, (REAL)_Radius)
AND
GetPosition(_Target, _x, _y, _z)
THEN
LeaderLib_Helper_SafeTeleportToPosition(_Object, _x, _y, _z, _TeleportEvent, _Radius, 0, 0, 0);

PROC
LeaderLib_Helper_SafeTeleport((GUIDSTRING)_Object, (GUIDSTRING)_Target, (STRING)_TeleportEvent, (REAL)_Radius, (INTEGER)_TeleportLinkedCharacters)
AND
GetPosition(_Target, _x, _y, _z)
THEN
LeaderLib_Helper_SafeTeleportToPosition(_Object, _x, _y, _z, _TeleportEvent, _Radius, _TeleportLinkedCharacters, 0, 0);

PROC
LeaderLib_Helper_SafeTeleport((GUIDSTRING)_Object, (GUIDSTRING)_Target, (STRING)_TeleportEvent, (REAL)_Radius, (INTEGER)_TeleportLinkedCharacters, (INTEGER)_ExcludePartyFollowers)
AND
GetPosition(_Target, _x, _y, _z)
THEN
LeaderLib_Helper_SafeTeleportToPosition(_Object, _x, _y, _z, _TeleportEvent, _Radius, _TeleportLinkedCharacters, _ExcludePartyFollowers, 0);

PROC
LeaderLib_Helper_SafeTeleport((GUIDSTRING)_Object, (GUIDSTRING)_Target, (STRING)_TeleportEvent, (REAL)_Radius, (INTEGER)_TeleportLinkedCharacters, (INTEGER)_ExcludePartyFollowers, (INTEGER)_LeaveCombat)
AND
GetPosition(_Target, _x, _y, _z)
THEN
LeaderLib_Helper_SafeTeleportToPosition(_Object, _x, _y, _z, _TeleportEvent, _Radius, _TeleportLinkedCharacters, _ExcludePartyFollowers, _LeaveCombat);

PROC
LeaderLib_Helper_SafeTeleportToPosition((GUIDSTRING)_Object, (REAL)_x, (REAL)_y, (REAL)_z)
THEN
LeaderLib_Helper_SafeTeleportToPosition(_Object, _x, _y, _z, "", 8.0, 0, 0, 0);

PROC
LeaderLib_Helper_SafeTeleportToPosition((GUIDSTRING)_Object, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_TeleportEvent)
THEN
LeaderLib_Helper_SafeTeleportToPosition(_Object, _x, _y, _z, _TeleportEvent, 8.0, 0, 0, 0);

PROC
LeaderLib_Helper_SafeTeleportToPosition((GUIDSTRING)_Object, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_TeleportEvent, (REAL)_Radius, (INTEGER)_TeleportLinkedCharacters, (INTEGER)_ExcludePartyFollowers, (INTEGER)_LeaveCombat)
AND
NOT DB_LeaderLib_Helper_Temp_TeleportResolved(_Object)
AND
FindValidPosition(_x, _y, _z, _Radius, _Object, _tx, _ty, _tz)
THEN
DB_LeaderLib_Helper_Temp_TeleportResolved(_Object);
TeleportToPosition(_Object, _tx, _ty, _tz, _TeleportEvent, _TeleportLinkedCharacters, _ExcludePartyFollowers);

PROC
LeaderLib_Helper_SafeTeleportToPosition((GUIDSTRING)_Object, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_TeleportEvent, (REAL)_Radius, (INTEGER)_TeleportLinkedCharacters, (INTEGER)_ExcludePartyFollowers, (INTEGER)_LeaveCombat)
AND
NOT DB_LeaderLib_Helper_Temp_TeleportResolved(_Object)
THEN
DB_LeaderLib_Helper_Temp_TeleportResolved(_Object);
TeleportToPosition(_Object, _x, _y, _z, _TeleportEvent, _TeleportLinkedCharacters, _ExcludePartyFollowers);

PROC
LeaderLib_Helper_SafeTeleportToPosition((GUIDSTRING)_Object, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_TeleportEvent, (REAL)_Radius, (INTEGER)_TeleportLinkedCharacters, (INTEGER)_ExcludePartyFollowers, (INTEGER)_LeaveCombat)
AND
_LeaveCombat > 0
THEN
LeaveCombat(_Object);

PROC
LeaderLib_Helper_SafeTeleportToPosition((GUIDSTRING)_Object, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_TeleportEvent, (REAL)_Radius, (INTEGER)_TeleportLinkedCharacters, (INTEGER)_ExcludePartyFollowers, (INTEGER)_LeaveCombat)
AND
DB_LeaderLib_Helper_Temp_TeleportResolved(_Object)
THEN
NOT DB_LeaderLib_Helper_Temp_TeleportResolved(_Object);
//END_REGION

//REGION CLEAR_ACTION_QUEUE
//Use to clear a player-casted skill so Osiris skill uses happen immediately.
PROC
LeaderLib_Helper_ClearActionQueue((CHARACTERGUID)_Char)
THEN
LeaderLib_Helper_ClearActionQueue(_Char, 0);

PROC
LeaderLib_Helper_ClearActionQueue((CHARACTERGUID)_Char, 0)
THEN
CharacterFlushQueue(_Char);

PROC
LeaderLib_Helper_ClearActionQueue((CHARACTERGUID)_Char, 1)
THEN
CharacterPurgeQueue(_Char);

PROC
LeaderLib_Helper_ClearActionQueue((CHARACTERGUID)_Char, (INTEGER)_Purge)
THEN
CharacterMoveTo(_Char, _Char, 1, "", 1);
CharacterSetStill(_Char);
//END_REGION

//REGION CLEAR_ANIMATION_OVERRIDE_HACK
PROC
LeaderLib_Hacks_ClearAnimationOverride((CHARACTERGUID)_Char, (STRING)_CompletionEvent)
AND
_CompletionEvent != ""
THEN
SetVarString(_Char, "LeaderLib_ClearAnimationOverride_CompletionEvent", _CompletionEvent);

PROC
LeaderLib_Hacks_ClearAnimationOverride((CHARACTERGUID)_Char, (STRING)_CompletionEvent)
THEN
CharacterSetAnimationOverride(_Char, "");
CharacterSetStill(_Char);
SetStoryEvent(_Char, "LeaderLib_ClearAnimationOverride_ByMovement");

IF
StoryEvent((CHARACTERGUID)_Char, "LeaderLib_ClearAnimationOverride_ByMovement_Run")
AND
GetVarFloat3(_Char, "LeaderLib_ClearAnimationOverride_TargetPosition", _tx, _ty, _tz)
AND
GetPosition(_Char, _x, _y, _z)
THEN
ClearVarObject(_Char, "LeaderLib_ClearAnimationOverride_TargetPosition");
CharacterMoveToPosition(_Char, _tx, _ty, _tz, 1, "LeaderLib_ClearAnimationOverride_ByMovement_Done");
TeleportToPosition(_Char, _x, _y, _z, "", 0, 1);

IF
StoryEvent((CHARACTERGUID)_Char, "LeaderLib_ClearAnimationOverride_ByMovement_Run")
AND
GetVarString(_Char, "LeaderLib_ClearAnimationOverride_CompletionEvent", _Event)
AND
_Event != ""
THEN
ClearVarObject(_Char, "LeaderLib_ClearAnimationOverride_CompletionEvent");
SetStoryEvent(_Char, _Event);
//END_REGION

//REGION REFRESH_SKILL_UI
//Applies a MUTED status to refresh skill icons.
PROC
LeaderLib_Helper_RefreshUI((CHARACTERGUID)_Char)
THEN
LeaderLib_Helper_RefreshUI(_Char, 0);

PROC
LeaderLib_Helper_RefreshUI((CHARACTERGUID)_Char, (INTEGER)_ForceRefreshAllActiveSkills)
THEN
ApplyStatus(_Char, "LEADERLIB_REFRESH_UI", 0.0, 1, _Char);

PROC
LeaderLib_Helper_RefreshUI((CHARACTERGUID)_Char, 1)
AND
LeaderLib_QRY_ExtenderIsActive()
AND
CharacterIsPlayer(_Char, 1)
THEN
LeaderLib_Timers_StartObjectTimer(_Char, 50, "Timers_LeaderLib_RefreshUI_RefreshSkills_Start", "LeaderLib_RefreshUI_RefreshSkills_Start");

PROC
LeaderLib_RefreshUI_Internal_StoreSkillData((CHARACTERGUID)_Char, (STRING)_Skill, (INTEGER)_Slot, (REAL)_Cooldown)
THEN
DB_LeaderLib_Helper_Temp_RefreshUISkill(_Char, _Skill, _Slot, _Cooldown);

/* [OSITOOLS_ONLY]
PROC
LeaderLib_RefreshUI_Internal_StoreSkillData((CHARACTERGUID)_Char, (STRING)_Skill, (INTEGER)_Slot, (REAL)_Cooldown)
THEN
NRD_SkillBarClear(_Char, _Slot);

IF
StoryEvent((CHARACTERGUID)_Char, "LeaderLib_RefreshUI_RefreshSkills_Start")
AND
String(_Char, _CharStr)
THEN
NRD_LuaCall("LeaderLib_RefreshSkills", _CharStr);

IF
StoryEvent((CHARACTERGUID)_Char, "LeaderLib_RefreshUI_RevertSkillCooldown")
AND
DB_LeaderLib_Helper_Temp_RefreshUISkill((CHARACTERGUID)_Char, (STRING)_Skill, (INTEGER)_Slot, (REAL)_Cooldown)
THEN
NOT DB_LeaderLib_Helper_Temp_RefreshUISkill(_Char, _Skill, _Slot, _Cooldown);
NRD_SkillBarSetSkill(_Char, _Slot, _Skill);
NRD_SkillSetCooldown(_Char, _Skill, _Cooldown);
*/
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
