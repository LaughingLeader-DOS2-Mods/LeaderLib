Version 1
SubGoalCombiner SGC_AND
INITSECTION
//Settings
//DB_LeaderLib_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
//DB_LeaderLib_Requirements_Flag(_RequirementID, _Flag, _FlagType, _FlagVal)
//DB_LeaderLib_Requirements_FlagTarget(_RequirementID, _Flag, _Object)
//DB_LeaderLib_Requirements_Region(_RequirementID, _Region)
//DB_LeaderLib_Treasure_ItemMaxAmount(_TreasureID, _ItemEntry, _MaxAmount)
//Dynamic
//DB_LeaderLib_Requirements_IsUnlocked(_RequirementID)
KBSECTION
//REGION REGISTERING
PROC
LeaderLib_Requirements_Add_FlagRequirement((STRING)_RequirementID, (STRING)_Flag, (STRING)_FlagType)
THEN
LeaderLib_Requirements_Add_FlagRequirement(_RequirementID, _Flag, _FlagType, 1);

PROC
LeaderLib_Requirements_Add_FlagRequirement((STRING)_RequirementID, (STRING)_Flag, (STRING)_FlagType, (INTEGER)_FlagVal)
AND
_FlagType != "Character"
THEN
DB_LeaderLib_Requirements_Flag(_RequirementID, _Flag, _FlagType, _FlagVal);

PROC
LeaderLib_Requirements_Add_FlagRequirement((STRING)_RequirementID, (STRING)_Flag, "Character", (INTEGER)_FlagVal)
THEN
DB_LeaderLib_Requirements_Flag(_RequirementID, _Flag, "Object", _FlagVal);

PROC
LeaderLib_Requirements_Add_FlagTarget((GUIDSTRING)_Object, (STRING)_RequirementID, (STRING)_Flag)
AND
NOT DB_LeaderLib_Requirements_FlagTarget(_RequirementID, _Flag, _Object)
THEN
DB_LeaderLib_Requirements_FlagTarget(_RequirementID, _Flag, _Object);

PROC
LeaderLib_Requirements_Clear_FlagTarget((GUIDSTRING)_Object, (STRING)_RequirementID, (STRING)_Flag)
AND
DB_LeaderLib_Requirements_FlagTarget(_RequirementID, _Flag, _Object)
THEN
NOT DB_LeaderLib_Requirements_FlagTarget(_RequirementID, _Flag, _Object);

PROC
LeaderLib_Requirements_Clear_FromAllTarget((GUIDSTRING)_Object)
AND
DB_LeaderLib_Requirements_FlagTarget(_RequirementID, _Flag, _Object)
THEN
NOT DB_LeaderLib_Requirements_FlagTarget(_RequirementID, _Flag, _Object);

//Max Level defaults to -1, which means it's skipped
PROC
LeaderLib_Requirements_Add_PartyLevelRequirement((STRING)_RequirementID, (INTEGER)_Level)
THEN
LeaderLib_Requirements_Add_PartyLevelRequirement(_RequirementID, _Level, -1, 0);

PROC
LeaderLib_Requirements_Add_PartyLevelRequirement((STRING)_RequirementID, (INTEGER)_MinLevel, (INTEGER)_MaxLevel)
THEN
LeaderLib_Requirements_Add_PartyLevelRequirement(_RequirementID, _MinLevel, _MaxLevel, 0);

PROC
LeaderLib_Requirements_Add_PartyLevelRequirement((STRING)_RequirementID, (INTEGER)_MinLevel, (INTEGER)_MaxLevel, (INTEGER)_StrictMode)
THEN
DB_LeaderLib_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode);

PROC
LeaderLib_Requirements_Add_RegionRequirement((STRING)_RequirementID, (STRING)_Region)
THEN
DB_LeaderLib_Requirements_Region(_RequirementID, _Region);

PROC
LeaderLib_Requirements_Add_ModRequirement((STRING)_RequirementID, (STRING)_ModID, (STRING)_Author)
THEN
DB_LeaderLib_Requirements_Mod(_RequirementID, _ModID, _Author);
//END_REGION

//REGION REQUIREMENT_CHECK
QRY
LeaderLib_Requirements_QRY_LevelMet((CHARACTERGUID)_Character, (INTEGER)_MinLevel, (INTEGER)_MaxLevel)
AND
CharacterGetLevel(_Character, _Level)
AND
_Level >= _MinLevel
AND
LeaderLib_Requirements_QRY_Internal_MaxLevelCheck(_Level, _MaxLevel)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_Internal_MaxLevelCheck((INTEGER)_Level, (INTEGER)_MaxLevel)
AND
_Level <= _MaxLevel
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_Internal_MaxLevelCheck((INTEGER)_Level, (INTEGER)_MaxLevel)
AND
_MaxLevel <= 0
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_PartyLevelMet((STRING)_RequirementID)
AND
DB_LeaderLib_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
AND
_StrictMode <= 0
AND
LeaderLib_Helper_QRY_PartyLevelRangeMet(_MinLevel, _MaxLevel)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_PartyLevelMet((STRING)_RequirementID)
AND
DB_LeaderLib_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
AND
_StrictMode >= 1
AND
LeaderLib_Helper_QRY_PartyLevelRangeMet_Strict(_MinLevel, _MaxLevel)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_PartyLevelMet((STRING)_RequirementID)
AND
NOT DB_LeaderLib_Requirements_PartyLevel(_RequirementID, _, _, _)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_PartyLevelMet((STRING)_RequirementID)
AND
_RequirementID == ""
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_FlagMet((STRING)_RequirementID)
AND
DB_LeaderLib_Requirements_Flag(_RequirementID, _Flag, _FlagType, _FlagVal)
AND
LeaderLib_Requirements_QRY_Internal_FlagSet(_RequirementID, _Flag, _FlagType, _FlagVal)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_Internal_FlagSet((STRING)_RequirementID, (STRING)_Flag, "Global", (INTEGER)_FlagVal)
AND
LeaderLib_Helper_QRY_GlobalFlagSet(_Flag, _FlagVal)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_Internal_FlagSet((STRING)_RequirementID, (STRING)_Flag, (STRING)_FlagType, (INTEGER)_FlagVal)
AND
_FlagType != "Global"
AND
NOT DB_LeaderLib_Requirements_FlagTarget(_RequirementID, _Flag, _)
AND
LeaderLib_Helper_QRY_PartyFlagSet(_Flag, _FlagType, _FlagVal)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_Internal_FlagSet((STRING)_RequirementID, (STRING)_Flag, (STRING)_FlagType, (INTEGER)_FlagVal)
AND
_FlagType != "Global"
AND
DB_LeaderLib_Requirements_FlagTarget(_RequirementID, _Flag, _Object)
AND
LeaderLib_Helper_QRY_FlagSet(_Object, _Flag, _FlagType, _FlagVal)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_FlagMet((STRING)_RequirementID)
AND
NOT DB_LeaderLib_Requirements_Flag(_RequirementID,_,_,_)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_FlagMet((STRING)_RequirementID)
AND
_RequirementID == ""
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_RegionMet((STRING)_RequirementID)
AND
_RequirementID == ""
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_RegionMet((STRING)_RequirementID)
AND
NOT DB_LeaderLib_Requirements_Region(_RequirementID, _)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_RegionMet((STRING)_RequirementID)
AND
_RequirementID != ""
AND
DB_LeaderLib_Requirements_Region(_RequirementID, _Region)
AND
DB_CurrentLevel(_Region)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_ModIsActive((STRING)_RequirementID)
AND
_RequirementID == ""
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_ModIsActive((STRING)_RequirementID)
AND
_RequirementID != ""
AND
DB_LeaderLib_Requirements_Mod(_RequirementID, _ModID, _Author)
AND
LeaderUpdater_QRY_ModIsActive(_ModID, _Author)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_ModIsActive((STRING)_RequirementID)
AND
NOT DB_LeaderLib_Requirements_Mod(_RequirementID, _, _)
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_AllMet((STRING)_RequirementID)
AND
_RequirementID == ""
THEN
DB_NOOP(1);

QRY
LeaderLib_Requirements_QRY_AllMet((STRING)_RequirementID)
AND
_RequirementID != ""
AND
LeaderLib_Requirements_QRY_FlagMet(_RequirementID)
AND
LeaderLib_Requirements_QRY_PartyLevelMet(_RequirementID)
AND
LeaderLib_Requirements_QRY_RegionMet(_RequirementID)
AND
LeaderLib_Requirements_QRY_ModIsActive(_RequirementID)
THEN
DB_NOOP(1);
//END_REGION

//REGION LOCK_UNLOCK_PROC_EVENTS
PROC
LeaderLib_Requirements_RequirementUnlocked((STRING)_RequirementID)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Requirements] Requirement [",_RequirementID,"] unlocked.");
DB_LeaderLib_Requirements_IsUnlocked(_RequirementID);

PROC
LeaderLib_Requirements_RequirementUnlocked((STRING)_RequirementID)
AND
_RequirementID != ""
AND
NOT DB_LeaderLib_Requirements_JustUnlocked(_RequirementID)
AND
LeaderLib_StringExt_QRY_SafeCombine("LeaderLib_Requirements_RequirementUnlocked", "LeaderLib_Timers_Req_RemoveJustUnlocked_", _RequirementID)
AND
DB_LeaderLib_StringExt_CombineResult("LeaderLib_Requirements_RequirementUnlocked", _TimerName)
THEN
NOT DB_LeaderLib_StringExt_CombineResult("LeaderLib_Requirements_RequirementUnlocked", _TimerName);
DB_LeaderLib_Requirements_JustUnlocked(_RequirementID);
DB_LeaderLib_Requirements_Temp_RemoveJustUnlocked(_TimerName, _RequirementID);
TimerLaunch(_TimerName, 1000);

IF
TimerFinished(_TimerName)
AND
DB_LeaderLib_Requirements_Temp_RemoveJustUnlocked(_TimerName, _RequirementID)
THEN
NOT DB_LeaderLib_Requirements_JustUnlocked(_RequirementID);
NOT DB_LeaderLib_Requirements_Temp_RemoveJustUnlocked(_TimerName, _RequirementID);

PROC
LeaderLib_Requirements_RequirementLocked((STRING)_RequirementID)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Requirements] Requirement [",_RequirementID,"] locked.");
NOT DB_LeaderLib_Requirements_IsUnlocked(_RequirementID);
//END_REGION

//REGION INITIAL_UNLOCK
PROC
LeaderLib_Requirements_CheckForRequirementUnlocks()
AND
DB_LeaderLib_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
AND
NOT DB_LeaderLib_Requirements_IsUnlocked(_RequirementID)
AND
LeaderLib_Requirements_QRY_AllMet(_RequirementID)
THEN
LeaderLib_Requirements_RequirementUnlocked(_RequirementID);

PROC
LeaderLib_Requirements_CheckForRequirementUnlocks()
AND
DB_LeaderLib_Requirements_Flag(_RequirementID, _Flag, _FlagType, _FlagVal)
AND
NOT DB_LeaderLib_Requirements_IsUnlocked(_RequirementID)
AND
LeaderLib_Requirements_QRY_AllMet(_RequirementID)
THEN
LeaderLib_Requirements_RequirementUnlocked(_RequirementID);

PROC
LeaderLib_Requirements_CheckForRequirementUnlocks()
AND
DB_LeaderLib_Requirements_Mod(_RequirementID, _ModID, _Author)
THEN
LeaderLib_Requirements_CheckModRequirement(_RequirementID, _ModID, _Author);
//END_REGION

//REGION FLAG_UNLOCKING
PROC
LeaderLib_Requirements_Internal_OnFlagSet((STRING)_RequirementID, (INTEGER)_TargetVal, (INTEGER)_CurrentVal)
AND
_TargetVal != _CurrentVal
THEN
LeaderLib_Requirements_RequirementLocked(_RequirementID);

PROC
LeaderLib_Requirements_Internal_OnFlagSet((STRING)_RequirementID, (INTEGER)_TargetVal, (INTEGER)_CurrentVal)
AND
_TargetVal == _CurrentVal
AND
LeaderLib_Requirements_QRY_AllMet(_RequirementID)
THEN
LeaderLib_Requirements_RequirementUnlocked(_RequirementID);

IF
ObjectFlagSet(_Flag, _Object, _)
AND
DB_LeaderLib_Requirements_Flag(_RequirementID, _Flag, "Object", _TargetVal)
THEN
LeaderLib_Requirements_Internal_OnFlagSet(_RequirementID, _TargetVal, 1);

IF
ObjectFlagCleared(_Flag, _Object, _)
AND
DB_LeaderLib_Requirements_Flag(_RequirementID, _Flag, "Object", _TargetVal)
THEN
LeaderLib_Requirements_Internal_OnFlagSet(_RequirementID, _TargetVal, 0);

IF
ObjectFlagSet(_Flag, (CHARACTERGUID)_Object, _)
AND
DB_LeaderLib_Requirements_Flag(_RequirementID, _Flag, "User", _TargetVal)
THEN
LeaderLib_Requirements_Internal_OnFlagSet(_RequirementID, _TargetVal, 1);

IF
ObjectFlagCleared(_Flag, (CHARACTERGUID)_Object, _)
AND
DB_LeaderLib_Requirements_Flag(_RequirementID, _Flag, "User", _TargetVal)
THEN
LeaderLib_Requirements_Internal_OnFlagSet(_RequirementID, _TargetVal, 0);

IF
GlobalFlagSet(_Flag)
AND
DB_LeaderLib_Requirements_Flag(_RequirementID, _Flag, "Global", _TargetVal)
THEN
LeaderLib_Requirements_Internal_OnFlagSet(_RequirementID, _TargetVal, 1);

IF
GlobalFlagCleared(_Flag)
AND
DB_LeaderLib_Requirements_Flag(_RequirementID, _Flag, "Global", _TargetVal)
THEN
LeaderLib_Requirements_Internal_OnFlagSet(_RequirementID, _TargetVal, 0);
//END_REGION

//REGION MOD_REQUIREMENT
PROC
LeaderLib_Requirements_CheckModRequirement((STRING)_RequirementID, (STRING)_ModID, (STRING)_Author)
AND
NOT DB_LeaderLib_Requirements_IsUnlocked(_RequirementID)
AND
LeaderUpdater_QRY_ModIsActive(_ModID, _Author)
AND
LeaderLib_Requirements_QRY_AllMet(_RequirementID)
THEN
LeaderLib_Requirements_RequirementUnlocked(_RequirementID);

PROC
LeaderLib_Requirements_CheckModRequirement((STRING)_RequirementID, (STRING)_ModID, (STRING)_Author)
AND
NOT DB_LeaderLib_Requirements_IsUnlocked(_RequirementID)
AND
NOT LeaderUpdater_QRY_ModIsActive(_ModID, _Author)
THEN
LeaderLib_Requirements_RequirementLocked(_RequirementID);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
