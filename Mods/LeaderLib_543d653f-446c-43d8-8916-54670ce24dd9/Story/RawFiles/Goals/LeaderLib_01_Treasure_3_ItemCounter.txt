Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LeaderLib_Treasure_Temp_ItemTemplateAmount(_Object, _TreasureID, _ItemTemplate, _Amount)
//DB_LeaderLib_Treasure_Temp_ItemStatAmount(_Object, _TreasureID, _ItemTemplate, _GeneratedStat, _Amount)
KBSECTION
//REGION COUNTING
QRY
LeaderLib_Treasure_QRY_CountTemplate((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate)
AND
DB_LeaderLib_Treasure_Temp_ItemTemplateAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, _PastAmount)
THEN
NOT DB_LeaderLib_Treasure_Temp_ItemTemplateAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, _PastAmount);

QRY
LeaderLib_Treasure_QRY_CountTemplate((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate)
THEN
DB_LeaderLib_Treasure_Temp_ItemTemplateAmount(_Object, _TreasureID, _ItemTemplate, 0);

QRY
LeaderLib_Treasure_QRY_CountTemplate((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate)
AND
ObjectIsCharacter(_Object, 1)
AND
ItemTemplateIsInCharacterInventory((CHARACTERGUID)_Object, _ItemTemplate, _Amount)
AND
_Amount != 0
THEN
NOT DB_LeaderLib_Treasure_Temp_ItemTemplateAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, 0);
DB_LeaderLib_Treasure_Temp_ItemTemplateAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, _Amount);

QRY
LeaderLib_Treasure_QRY_CountTemplate((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate)
AND
ObjectIsItem(_Object, 1)
AND
ItemIsContainer((ITEMGUID)_Object, 1)
AND
ItemTemplateIsInContainer(_Object, _ItemTemplate, _Amount)
AND
_Amount != 0
THEN
NOT DB_LeaderLib_Treasure_Temp_ItemTemplateAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, 0);
DB_LeaderLib_Treasure_Temp_ItemTemplateAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, _Amount);

QRY
LeaderLib_Treasure_QRY_CountTemplateWithStat((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate, (STRING)_GeneratedStat)
THEN
LeaderLib_Treasure_CountTemplateWithStat(_ID, _Object, _TreasureID, _ItemTemplate, _GeneratedStat);

PROC
LeaderLib_Treasure_CountTemplateWithStat((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate, (STRING)_GeneratedStat)
THEN
DB_LeaderLib_Treasure_Temp_ItemStatAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, _GeneratedStat, 0);
LeaderLib_Timers_StartObjectTimer(_Object, 500, _ID, "LeaderLib_Events_Treasure_Internal_StatCountingComplete");

QRY
LeaderLib_Treasure_Internal_QRY_StatMatch((ITEMGUID)_Item, (STRING)_GeneratedStat)
AND
GetVarFixedString(_Item, "LeaderLib_GeneratedItemStat", _Stat)
AND
_GeneratedStat == _Stat
THEN
DB_NOOP(1);

QRY
LeaderLib_Treasure_Internal_QRY_StatMatch((ITEMGUID)_Item, (STRING)_GeneratedStat)
AND
IsTagged(_Item, _GeneratedStat, 1)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:DebugNow] Item was tagged with GeneratedStat [", _GeneratedStat, "].");

QRY
LeaderLib_Treasure_Internal_QRY_StatMatch((ITEMGUID)_Item, (STRING)_GeneratedStat)
AND
GetStatString(_Item, _Stat)
AND
_GeneratedStat == _Stat
THEN
DB_NOOP(1);

PROC
LeaderLib_Treasure_CountTemplateWithStat((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate, (STRING)_GeneratedStat)
AND
NOT DB_LeaderLib_Treasure_Temp_TemplateIterator(_ID, _Object, _TreasureID, _ItemTemplate, _GeneratedStat, _, _)
AND
LeaderLib_StringExt_QRY_SafeCombine("LeaderLib_Treasure_CountTemplateWithStat_Iterate", "LeaderLib_IterateTemplate_", _ItemTemplate, _ID)
AND
DB_LeaderLib_StringExt_CombineResult("LeaderLib_Treasure_CountTemplateWithStat_Iterate", _IterateEvent)
AND
LeaderLib_StringExt_QRY_SafeCombine("LeaderLib_Treasure_CountTemplateWithStat_Complete", "LeaderLib_IterateTemplateComplete_", _ItemTemplate, _ID)
AND
DB_LeaderLib_StringExt_CombineResult("LeaderLib_Treasure_CountTemplateWithStat_Complete", _CompletionEvent)
THEN
NOT DB_LeaderLib_StringExt_CombineResult("LeaderLib_Treasure_CountTemplateWithStat_Complete", _CompletionEvent);
NOT DB_LeaderLib_StringExt_CombineResult("LeaderLib_Treasure_CountTemplateWithStat_Iterate", _IterateEvent);
DB_LeaderLib_Treasure_Temp_TemplateIterator(_ID, _Object, _TreasureID, _ItemTemplate, _GeneratedStat, _IterateEvent, _CompletionEvent);
InventoryLaunchTemplateIterator(_Object, _ItemTemplate, _IterateEvent, _CompletionEvent);

IF
StoryEvent(_, _CompletionEvent)
AND
DB_LeaderLib_Treasure_Temp_TemplateIterator(_ID, _Object, _TreasureID, _ItemTemplate, _GeneratedStat, _IterateEvent, _CompletionEvent)
AND
DB_LeaderLib_Treasure_Temp_ItemStatAmount(_Object, _TreasureID, _ItemTemplate, _GeneratedStat, _Total)
AND
_Total > 0
AND
IntegertoString(_Total, _TotalStr)
AND
String(_Object, _ID)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Treasure:CountTemplateWithStat] Found [",_TotalStr,"] item template(s) with stat [",_GeneratedStat,"] on object [",_ID,"]. Treasure [",_TreasureID,"] | ItemTemplate [",_ItemTemplate,"].");

IF
StoryEvent(_, _CompletionEvent)
AND
DB_LeaderLib_Treasure_Temp_TemplateIterator(_ID, _Object, _TreasureID, _ItemTemplate, _GeneratedStat, _IterateEvent, _CompletionEvent)
THEN
NOT DB_LeaderLib_Treasure_Temp_TemplateIterator(_ID, _Object, _TreasureID, _ItemTemplate, _GeneratedStat, _IterateEvent, _CompletionEvent);
LeaderLib_Timers_CancelObjectTimer(_Object, _ID);
SetStoryEvent(_Object, "LeaderLib_Events_Treasure_Internal_StatCountingComplete");

IF
StoryEvent((ITEMGUID)_Item, _IterateEvent)
AND
DB_LeaderLib_Treasure_Temp_TemplateIterator(_ID, _Object, _TreasureID, _ItemTemplate, _GeneratedStat, _IterateEvent, _CompletionEvent)
AND
String(_Object, _UUID)
AND
LeaderLib_Treasure_Internal_QRY_StatMatch(_Item, _GeneratedStat)
AND
ItemGetAmount(_Item, _Amount)
AND
DB_LeaderLib_Treasure_Temp_ItemStatAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, _GeneratedStat, _CurrentAmount)
AND
IntegerSum(_CurrentAmount, _Amount, _NextAmount)
THEN
NOT DB_LeaderLib_Treasure_Temp_ItemStatAmount(_Object, _TreasureID, _ItemTemplate, _GeneratedStat, _CurrentAmount);
DB_LeaderLib_Treasure_Temp_ItemStatAmount(_Object, _TreasureID, _ItemTemplate, _GeneratedStat, _NextAmount);
//END_REGION

//REGION QUERIES
QRY
LeaderLib_Treasure_QRY_SkipAmountCheck((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry)
AND
IsTagged(_Object, "LeaderLib_Treasure_IgnoreAmountLimit", 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Treasure_QRY_SkipAmountCheck((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry)
AND
IsTagged(_Object, "LeaderLib_Treasure_IgnoreAmountLimit", 0)
AND
ObjectIsItem(_Object, 1)
AND
NOT DB_LeaderLib_Treasure_ItemDoneGenerating(_Object, _TreasureID, _ItemEntry)
THEN
DB_NOOP(1);

QRY
LeaderLib_Treasure_QRY_SkipItemLimitCheck((INTEGER)_CurrentAmount, (INTEGER)_RequestedAmount, (INTEGER)_MaxAmount)
AND
_RequestedAmount == _MaxAmount
AND
_CurrentAmount <= 0
THEN
DB_NOOP(1);

QRY
LeaderLib_Treasure_QRY_ItemLimitNotMet((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_RequestedAmount, (INTEGER)_CurrentAmount)
AND
DB_LeaderLib_Treasure_ItemMaxAmount(_TreasureID, _ItemEntry, _MaxAmount)
AND
LeaderLib_Treasure_QRY_SkipItemLimitCheck(_CurrentAmount, _RequestedAmount, _MaxAmount)
THEN
DB_LeaderLib_Treasure_Temp_AmountToCreate(_Object, _ItemEntry, _RequestedAmount);

QRY
LeaderLib_Treasure_QRY_ItemLimitNotMet((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_RequestedAmount, (INTEGER)_CurrentAmount)
AND
DB_LeaderLib_Treasure_ItemMaxAmount(_TreasureID, _ItemEntry, _MaxAmount)
AND
NOT LeaderLib_Treasure_QRY_SkipItemLimitCheck(_CurrentAmount, _RequestedAmount, _MaxAmount)
AND
_CurrentAmount < _MaxAmount
AND
IntegerSum(_CurrentAmount, _RequestedAmount, _NextAmount)
AND
NOT LeaderLib_Treasure_QRY_Internal_ClampAmount(_Object, _ItemEntry, _CurrentAmount, _NextAmount, _MaxAmount)
THEN
DB_LeaderLib_Treasure_Temp_AmountToCreate(_Object, _ItemEntry, _RequestedAmount);

QRY
LeaderLib_Treasure_QRY_Internal_ClampAmount((GUIDSTRING)_Object, (STRING)_ItemEntry, (INTEGER)_CurrentAmount, (INTEGER)_NextAmount, (INTEGER)_MaxAmount)
AND
_NextAmount > _MaxAmount
AND
IntegerSubtract(_MaxAmount, _CurrentAmount, _AmountToGenerate)
AND
_AmountToGenerate > 0
THEN
DB_LeaderLib_Treasure_Temp_AmountToCreate(_Object, _ItemEntry, _AmountToGenerate);

QRY
LeaderLib_Treasure_QRY_ItemLimitNotMet((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_RequestedAmount, (INTEGER)_CurrentAmount)
AND
NOT DB_LeaderLib_Treasure_ItemMaxAmount(_TreasureID, _ItemEntry, _)
AND
_CurrentAmount < _RequestedAmount
AND
IntegerSubtract(_RequestedAmount, _CurrentAmount, _AmountToCreate)
AND
_AmountToCreate > 0
THEN
DB_LeaderLib_Treasure_Temp_AmountToCreate(_Object, _ItemEntry, _AmountToCreate);

QRY
LeaderLib_Treasure_QRY_ItemLimitNotMet((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_RequestedAmount, (INTEGER)_CurrentAmount)
AND
DB_LeaderLib_Treasure_ItemMaxAmount(_TreasureID, _ItemEntry, _AmountToGenerate)
THEN
DB_NOOP(1);

QRY
LeaderLib_Treasure_QRY_CountedItems((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry)
AND
DB_LeaderLib_Treasure_Temp_ItemTemplateAmount(_Object, _TreasureID, _ItemEntry, _Amount)
THEN
DB_NOOP(1);

QRY
LeaderLib_Treasure_QRY_CountedItems((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry)
AND
DB_LeaderLib_Treasure_Temp_ItemStatAmount(_Object, _TreasureID, _ItemTemplate, _ItemEntry, _Amount)
THEN
DB_NOOP(1);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
