Version 1
SubGoalCombiner SGC_AND
INITSECTION
LeaderLib_ModMenu_InitSettings();

//Settings
//DB_LeaderLib_Settings_DialogVariables(_VariableName, _VariableValue)
//DB_LeaderLib_ModMenu_MenuVars(_MenuIndex, _DialogVar, _SelectFlag, _DisabledFlag)
//DB_LeaderLib_ModMenu_MenusPerPage(_MaxPerPage)
//DB_LeaderLib_ModMenu_SortTickRate(_Rate)
//DB_LeaderLib_ModMenu_Temp_SortStarted(_Val)

//Dynamic
//DB_LeaderLib_Dictionary_Data("LeaderLib_RegisteredMenus", _Index, _ID, _DisplayName)
//DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author)
//DB_LeaderLib_ModMenu_RegisteredMenu_OpenEvent(_ID, _OpenMenuEvent)
//DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _Page)
//DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
//DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _ID, _Dialog)
//DB_LeaderLib_ModMenu_Temp_IsChangingMenuPage(_Player, _Instance)
/*SORT_CHECKING*/

KBSECTION

//REGION MENU_REGISTERING
PROC
LeaderLib_ModMenu_Internal_ClearLastForID((STRING)_ID)
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author)
THEN
NOT DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author);
LeaderLib_Array_ClearDictionary("LeaderLib_RegisteredMenus");

PROC
LeaderLib_ModMenu_Internal_ClearLastForDialog((STRING)_Dialog)
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author)
THEN
NOT DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author);
LeaderLib_Array_ClearDictionary("LeaderLib_RegisteredMenus");

//Old
PROC
LeaderLib_Register_ModMenu((STRING)_ID, (STRING)_DisplayName, (STRING)_Dialog, (STRING)_ModID, (STRING)_Author)
THEN
LeaderLib_ModMenu_Internal_ClearLastForID(_ID);
LeaderLib_ModMenu_Internal_ClearLastForDialog(_ID);
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author);
LeaderLib_StringExt_DetermineStringLength(_DisplayName);
LeaderLib_ModMenu_Internal_StartSortIfNeeded();
LeaderLog_Log("DEBUG", "[LeaderLib_02_ModMenuSystem:LeaderLib_Register_ModMenu] Register mod menu ID(",_ID,") Dialog(",_Dialog,") DisplayName(",_DisplayName,") ModID(",_ModID,") Author(",_Author,")");

PROC
LeaderLib_Register_ModMenu((STRING)_UUID, (STRING)_Dialog, (STRING)_DisplayName)
THEN
LeaderLib_ModMenu_Internal_ClearLastForID(_UUID);
LeaderLib_ModMenu_Internal_ClearLastForDialog(_Dialog);
DB_LeaderLib_ModMenu_RegisteredMenuData(_UUID, _DisplayName, _Dialog, "", "");
LeaderLib_ModMenu_Internal_GetInfoForUUID(_UUID, _Dialog, _DisplayName);
LeaderLib_StringExt_DetermineStringLength(_DisplayName);
LeaderLib_ModMenu_Internal_StartSortIfNeeded();
LeaderLog_Log("DEBUG", "[LeaderLib_02_ModMenuSystem:LeaderLib_Register_ModMenu] Register mod menu UUID(",_UUID,") Dialog(",_Dialog,") DisplayName(",_DisplayName,")");

PROC
LeaderLib_Register_ModMenuByUUID((STRING)_UUID, (STRING)_Dialog, (STRING)_DisplayName, (STRING)_ModID, (STRING)_Author)
THEN
LeaderLib_ModMenu_Internal_ClearLastForID(_UUID);
LeaderLib_ModMenu_Internal_ClearLastForDialog(_Dialog);
DB_LeaderLib_ModMenu_RegisteredMenuData(_UUID, _DisplayName, _Dialog, _ModID, _Author);
LeaderLib_StringExt_DetermineStringLength(_DisplayName);
LeaderLib_ModMenu_Internal_StartSortIfNeeded();
LeaderLog_Log("DEBUG", "[LeaderLib_02_ModMenuSystem:LeaderLib_Register_ModMenu] Register mod menu UUID(",_UUID,") Dialog(",_Dialog,") DisplayName(",_DisplayName,") ModID(",_ModID,") Author(",_Author,")");

/* [OSITOOLS_ONLY]
PROC
LeaderLib_ModMenu_Internal_GetInfoForUUID((STRING)_ID, (STRING)_Dialog, (STRING)_DisplayName)
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, "", "")
AND
NRD_GuidString(_ID, _UUID)
AND
DB_LeaderLib_Mods_Registered(_UUID, _ModID, _ModDisplayName, _Author, _Version, _Major, _Minor, _Revision, _Build)
THEN
LeaderLib_ModMenu_Internal_ClearLastForID(_ID);
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author);

PROC
LeaderLib_ModMenu_Internal_GetInfoForUUID((STRING)_ID, (STRING)_Dialog, (STRING)_DisplayName)
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, "", "")
AND
NRD_GuidString(_ID, _UUID)
AND
NOT DB_LeaderLib_Mods_Registered(_UUID, _, _, _, _, _, _, _, _)
AND
DB_LeaderUpdater_RegisteredUUID(_ModID, _Author, _UUID)
THEN
LeaderLib_ModMenu_Internal_ClearLastForID(_ID);
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author);
*/

// [BEGIN_NO_OSITOOLS]
PROC
LeaderLib_ModMenu_Internal_GetInfoForUUID((STRING)_ID, (STRING)_Dialog, (STRING)_DisplayName)
AND
DB_LeaderUpdater_RegisteredUUID(_ModID, _Author, _UUID)
AND
String(_UUID, _ID)
THEN
LeaderLib_ModMenu_Internal_ClearLastForID(_ID);
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author);
// [END_NO_OSITOOLS]

/*
PROC
LeaderLib_Register_ModMenuOpenEvent((STRING)_ID, (STRING)_OpenMenuEvent)
AND
DB_LeaderLib_ModMenu_RegisteredMenu_OpenEvent(_ID, _LastOpenMenuEvent)
THEN
NOT DB_LeaderLib_ModMenu_RegisteredMenu_OpenEvent(_ID, _LastOpenMenuEvent);
*/

PROC
LeaderLib_Register_ModMenuOpenEvent((STRING)_ID, (STRING)_OpenMenuEvent)
THEN
DB_LeaderLib_ModMenu_RegisteredMenu_OpenEvent(_ID, _OpenMenuEvent);
//END_REGION

//REGION UPDATE_OLD
//Swap old DB entries that stored the ID in the dict to the dialog instead
IF
SavegameLoading(_,_,_,_)
AND
DB_LeaderLib_Dictionary_Data("LeaderLib_RegisteredMenus", _Index, _ID, _DisplayName)
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author)
THEN
NOT DB_LeaderLib_Dictionary_Data("LeaderLib_RegisteredMenus", _Index, _ID, _DisplayName);
DB_LeaderLib_Dictionary_Data("LeaderLib_RegisteredMenus", _Index, _Dialog, _DisplayName);
//END_REGION

//REGION AUTO_UPDATING
//Updating empty author/modid
PROC
LeaderLib_Mods_OnVersionChanged((GUIDSTRING)_UUID, (INTEGER)_LastVersion, (INTEGER)_NextVersion)
AND
String(_UUID, _ID)
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, "", "")
AND
DB_LeaderLib_Mods_Registered(_UUID, _ModID, _ModDisplayName, _Author, _Version, _Major, _Minor, _Revision, _Build)
THEN
NOT DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, "", "");
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author);

// [BEGIN_NO_OSITOOLS]
PROC
LeaderUpdater_ModUpdated((STRING)_ModID, (STRING)_Author, (STRING)_LastVersion, (STRING)_NextVersion)
AND
DB_LeaderUpdater_RegisteredUUID(_ModID, _Author, _UUID)
AND
String(_UUID, _ID)
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, "", "")
AND
DB_LeaderLib_Mods_Registered(_UUID, _ModID, _ModDisplayName, _Author, _Version, _Major, _Minor, _Revision, _Build)
THEN
NOT DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, "", "");
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author);
// [END_NO_OSITOOLS]
//END_REGION

//REGION QUERIES
QRY
LeaderLib_ModMenu_QRY_IsRegistered((STRING)_Dialog)
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author)
THEN
DB_NOOP(1);
//END_REGION

//REGION PAGE_MAX_CALCULATION
PROC
LeaderLib_ModMenu_Internal_CalculateUniqueDialogs()
THEN
SysClear("DB_LeaderLib_ModMenu_Temp_UniqueDialogs", 1);
DB_LeaderLib_ModMenu_Temp_UniqueDialogs(0);

PROC
LeaderLib_ModMenu_Internal_CalculateUniqueDialogs()
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author)
AND
NOT DB_LeaderLib_ModMenu_Temp_Counted(_Dialog)
AND
DB_LeaderLib_ModMenu_Temp_UniqueDialogs(_Last)
AND
IntegerSum(_Last, 1, _Next)
THEN
NOT DB_LeaderLib_ModMenu_Temp_UniqueDialogs(_Last);
DB_LeaderLib_ModMenu_Temp_UniqueDialogs(_Next);
DB_LeaderLib_ModMenu_Temp_Counted(_Dialog);

IF
TimerFinished("LeaderLib_Timers_ModMenu_CalculateMaxPage")
THEN
LeaderLib_ModMenu_CalculateMaxPage();

PROC
LeaderLib_ModMenu_CalculateMaxPage()
THEN
SysClear("DB_LeaderLib_ModMenu_PageMax", 3);
SysClear("DB_LeaderLib_ModMenu_Temp_Counted", 1);
LeaderLib_ModMenu_Internal_CalculateUniqueDialogs();

PROC
LeaderLib_ModMenu_CalculateMaxPage()
AND
DB_LeaderLib_ModMenu_Temp_UniqueDialogs(_TotalMenus)
AND
DB_LeaderLib_ModMenu_MenusPerPage(_MaxPerPage)
AND
IntegerSubtract(_MaxPerPage, 1, _Variance)
AND
IntegerSum(_TotalMenus, _Variance, _PageNumToDivide)
AND
IntegerDivide(_PageNumToDivide, _MaxPerPage, _MaxPage)
AND
IntegerSubtract(_TotalMenus, 1, _LastIndex)
AND
IntegerSubtract(_MaxPage, 1, _LastPageIndex)
THEN
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage);

/*
IF
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
AND
IntegertoString(_LastIndex, _Str1)
AND
IntegertoString(_LastPageIndex, _Str2)
AND
IntegertoString(_MaxPage, _Str3)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu] Max page set: LastIndex[",_Str1,"] LastPageIndex[",_Str2,"] MaxPage[",_Str3,"]");
*/
//END_REGION

//REGION SETTINGS
PROC
LeaderLib_ModMenu_InitSettings()
AND
NOT DB_LeaderLib_ModMenu_MenusPerPage(_)
THEN
DB_LeaderLib_ModMenu_MenusPerPage(8);

PROC
LeaderLib_ModMenu_InitSettings()
AND
NOT DB_LeaderLib_ModMenu_MenuVars(_,_,_,_)
THEN
DB_LeaderLib_ModMenu_MenuVars(0, "LeaderLib_ModMenu_Menu1_783ec14d-2861-4345-8dbc-45974fa34e15", "LeaderLib_ModMenu_SelectedMenu1", "LeaderLib_ModMenu_MenuEmpty1");
DB_LeaderLib_ModMenu_MenuVars(1, "LeaderLib_ModMenu_Menu2_9a2d2990-5cff-420e-ba8a-37f9510ab9e1", "LeaderLib_ModMenu_SelectedMenu2", "LeaderLib_ModMenu_MenuEmpty2");
DB_LeaderLib_ModMenu_MenuVars(2, "LeaderLib_ModMenu_Menu3_cf00a8c6-02d2-4fda-a766-4f533ac93b2d", "LeaderLib_ModMenu_SelectedMenu3", "LeaderLib_ModMenu_MenuEmpty3");
DB_LeaderLib_ModMenu_MenuVars(3, "LeaderLib_ModMenu_Menu4_337a1066-9a85-4005-a2dc-f0156bf13d16", "LeaderLib_ModMenu_SelectedMenu4", "LeaderLib_ModMenu_MenuEmpty4");
DB_LeaderLib_ModMenu_MenuVars(4, "LeaderLib_ModMenu_Menu5_45148ce6-e8f3-4af4-81ed-a3b2e1ff8a17", "LeaderLib_ModMenu_SelectedMenu5", "LeaderLib_ModMenu_MenuEmpty5");
DB_LeaderLib_ModMenu_MenuVars(5, "LeaderLib_ModMenu_Menu6_863af621-ff0c-454a-b6a3-7c9d3166a8a0", "LeaderLib_ModMenu_SelectedMenu6", "LeaderLib_ModMenu_MenuEmpty6");
DB_LeaderLib_ModMenu_MenuVars(6, "LeaderLib_ModMenu_Menu7_888ce02f-83ff-4173-be8d-f41fd348358f", "LeaderLib_ModMenu_SelectedMenu7", "LeaderLib_ModMenu_MenuEmpty7");
DB_LeaderLib_ModMenu_MenuVars(7, "LeaderLib_ModMenu_Menu8_a6aa98e6-cde4-491b-a2cb-2cd7d5d71f96", "LeaderLib_ModMenu_SelectedMenu8", "LeaderLib_ModMenu_MenuEmpty8");
//END_REGION

//REGION SORTING
PROC
LeaderLib_ModMenu_Internal_StartSortIfNeeded()
THEN
LeaderLib_ModMenu_Internal_CalculateUniqueDialogs();

// [BEGIN_NO_OSITOOLS]
PROC
LeaderLib_ModMenu_Internal_StartSortIfNeeded()
AND
NOT DB_LeaderLib_ModMenu_Temp_SortStarted(_)
AND
DB_LeaderLib_Initialized(1)
AND
GlobalGetFlag("LeaderLib_DefaultEventFlowRunning", 0)
AND
GlobalGetFlag("LeaderLib_InitialEventFlowComplete", 1)
AND
LeaderLib_ModMenu_QRY_SortNeeded()
THEN
TimerCancel("LeaderLib_ModMenu_StartManualSortTimer");
TimerLaunch("LeaderLib_ModMenu_StartManualSortTimer", 500);

PROC
LeaderLib_ModMenu_Internal_StartSortIfNeeded()
AND
NOT DB_LeaderLib_ModMenu_Temp_SortStarted(_)
AND
NOT DB_LeaderLib_Initialized(1)
AND
LeaderLib_ModMenu_QRY_SortNeeded()
THEN
LeaderLib_ModMenu_StartSorting();
// [END_NO_OSITOOLS]

/* [OSITOOLS_ONLY]
PROC
LeaderLib_ModMenu_Internal_StartSortIfNeeded()
AND
LeaderLib_ModMenu_QRY_SortNeeded()
THEN
LeaderLib_ModMenu_StartSorting();
*/

IF
GlobalFlagSet("LeaderLib_DefaultEventFlowRunning")
THEN
TimerCancel("LeaderLib_ModMenu_StartManualSortTimer");

IF
StoryEvent(_, "LeaderLib_Commands_SortMenus")
THEN
TimerCancel("LeaderLib_ModMenu_StartManualSortTimer");

IF
TimerFinished("LeaderLib_ModMenu_StartManualSortTimer")
THEN
LeaderLib_ModMenu_StartSorting();

QRY
LeaderLib_ModMenu_QRY_SortNeeded()
AND
LeaderLib_Array_QRY_EmptyLength("LeaderLib_RegisteredMenus")
THEN
DB_NOOP(1);

QRY
LeaderLib_ModMenu_QRY_SortNeeded()
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author)
AND
NOT DB_LeaderLib_Dictionary_Data("LeaderLib_RegisteredMenus", _, _Dialog, _)
THEN
DB_NOOP(1);

QRY
LeaderLib_ModMenu_QRY_SortNeeded()
AND
NOT DB_LeaderLib_ModMenu_PageMax(_, _, _)
THEN
DB_NOOP(1);

//Sorting Start
IF
StoryEvent(_, "LeaderLib_Commands_SortMenus")
AND
LeaderLib_ModMenu_QRY_SortNeeded()
THEN
LeaderLog_Log("DEBUG", "[LeaderLib_02_ModMenuSystem:LeaderLib_Commands_SortMenus] Starting sorting.");
LeaderLib_ModMenu_StartSorting();

IF
StoryEvent(_, "LeaderLib_Commands_SortMenus")
AND
NOT LeaderLib_ModMenu_QRY_SortNeeded()
THEN
LeaderLog_Log("DEBUG", "[LeaderLib_02_ModMenuSystem:LeaderLib_Commands_SortMenus] No sorting needed. Skipping.");
LeaderLib_SendEvent("LeaderLib_Events_OnMenuSortComplete");

IF
DB_LeaderLib_EventFlow_StopEvent("LeaderLib_Commands_SortMenus")
THEN
LeaderLib_DictionarySort_StopSorting("LeaderLib_RegisteredMenus");
NOT DB_LeaderLib_EventFlow_StopEvent("LeaderLib_Commands_SortMenus");

PROC
LeaderLib_ModMenu_SetSortTickRate((INTEGER)_TickRate)
AND
DB_LeaderLib_ModMenu_SortTickRate(_OtherTickRate)
THEN
NOT DB_LeaderLib_ModMenu_SortTickRate(_OtherTickRate);

PROC
LeaderLib_ModMenu_SetSortTickRate((INTEGER)_TickRate)
THEN
DB_LeaderLib_ModMenu_SortTickRate(_TickRate);

QRY
LeaderLib_ModMenu_Internal_QRY_CanSort((STRING)_Dialog)
AND
NOT DB_LeaderLib_Dictionary_Data("LeaderLib_RegisteredMenus", _, _Dialog, _)
THEN
DB_NOOP(1);

// [BEGIN_NO_OSITOOLS]
QRY
LeaderLib_ModMenu_Internal_QRY_CanSort((STRING)_Dialog)
AND
NOT DB_LeaderLib_DictionarySort_Temp_StringQueue("LeaderLib_RegisteredMenus", _Dialog, _)
THEN
DB_NOOP(1);

PROC
LeaderLib_ModMenu_StartSorting()
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author)
AND
LeaderLib_ModMenu_Internal_QRY_CanSort(_Dialog)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu:LeaderLib_ModMenu_StartSorting] Added (",_Dialog,") to sort dictionary.");
LeaderLib_DictionarySort_AddString("LeaderLib_RegisteredMenus", _Dialog, _DisplayName);

PROC
LeaderLib_ModMenu_StartSorting()
AND
NOT DB_LeaderLib_ModMenu_Temp_UniqueDialogs(_)
AND
SysCount("DB_LeaderLib_ModMenu_RegisteredMenuData", 5, _TotalMenus)
THEN
DB_LeaderLib_ModMenu_Temp_UniqueDialogs(_TotalMenus);

PROC
LeaderLib_ModMenu_StartSorting()
AND
DB_LeaderLib_ModMenu_Temp_UniqueDialogs(_TotalMenus)
AND
_TotalMenus < 100
AND
IntegertoString(_TotalMenus, _TotalStr)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu:Sorting] Total menus = [",_TotalStr,"]. Setting sort tick rate to 1.");
LeaderLib_ModMenu_SetSortTickRate(1);

PROC
LeaderLib_ModMenu_StartSorting()
AND
DB_LeaderLib_ModMenu_Temp_UniqueDialogs(_Length)
AND
_Length >= 100
AND
IntegertoString(_Length, _TotalStr)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu:Sorting] Total menus = [",_TotalStr,"]. Setting sort tick rate to 2.");
LeaderLib_ModMenu_SetSortTickRate(2);

PROC
LeaderLib_ModMenu_StartSorting()
AND
DB_LeaderLib_ModMenu_SortTickRate(_TickRate)
THEN
DB_LeaderLib_ModMenu_Temp_SortStarted(1);
LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu:Sorting] Starting menu sorting.");
LeaderLib_DictionarySort_StartSorting("LeaderLib_RegisteredMenus", _TickRate, "LeaderLib_Events_OnMenuSortComplete", 0);
// [END_NO_OSITOOLS]

/* [OSITOOLS_ONLY]
PROC
LeaderLib_ModMenu_StartSorting()
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author)
AND
LeaderLib_ModMenu_Internal_QRY_CanSort(_Dialog)
THEN
LeaderLib_Array_AddToDictionary("LeaderLib_RegisteredMenus", _Dialog, _DisplayName);

PROC
LeaderLib_ModMenu_StartSorting()
THEN
DB_LeaderLib_ModMenu_Temp_SortStarted(1);
LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu:Sorting] Starting menu sorting.");
LeaderLib_DictionarySort_StartSorting("LeaderLib_RegisteredMenus", 0, "LeaderLib_Events_OnMenuSortComplete", 0);
*/

IF
StoryEvent(_, "LeaderLib_Events_OnMenuSortComplete")
AND
DB_LeaderLib_ModMenu_Temp_SortStarted(_Val)
THEN
NOT DB_LeaderLib_ModMenu_Temp_SortStarted(_Val);
LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu:SortingComplete] Menu sorting done.");

IF
StoryEvent(_, "LeaderLib_Events_OnMenuSortComplete")
AND
DB_LeaderLib_Initialized(1)
THEN
TimerCancel("LeaderLib_Timers_ModMenu_CalculateMaxPage");
TimerLaunch("LeaderLib_Timers_ModMenu_CalculateMaxPage", 200);

IF
StoryEvent(_, "LeaderLib_Events_OnMenuSortComplete")
AND
NOT DB_LeaderLib_Initialized(1)
THEN
LeaderLib_ModMenu_CalculateMaxPage();
//END_REGION

//REGION CLEAR
PROC
LeaderLib_ModMenu_ResetPlayerPage((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _Page)
THEN
NOT DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _Page);

PROC
LeaderLib_ModMenu_ResetPlayerPage((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
NOT DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _)
THEN
LeaderLib_ModMenu_SetPage(_Player, 0, _Instance);
//END_REGION

//REGION PAGE_TURNING
PROC
LeaderLib_ModMenu_Internal_ClearPreviousSelectedPage((CHARACTERGUID)_Player)
AND
DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _CurrentPage)
THEN
NOT DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _CurrentPage);

PROC
LeaderLib_ModMenu_Internal_UpdatePageFlags((CHARACTERGUID)_Player, (INTEGER)_Page, (INTEGER)_Instance)
AND
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
AND
_Page >= _LastPageIndex
AND
_MaxPage == 2
THEN
DB_LeaderLib_ModMenu_Temp_NextPageHidden(_Player, _Instance);
LeaderLib_ModMenu_Internal_SetHideFlag(_Player, _Instance, "LeaderLib_ModMenu_HideNextPageButton");
LeaderLog_LogInt("DEBUG", "[LeaderLib_02_ModMenuSystem:UpdatePageFlags] Hiding next page button [",_Page,"]/[",_MaxPage,"].");

PROC
LeaderLib_ModMenu_Internal_UpdatePageFlags((CHARACTERGUID)_Player, (INTEGER)_Page, (INTEGER)_Instance)
AND
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
AND
_Page <= 0
AND
_MaxPage == 2
THEN
DB_LeaderLib_ModMenu_Temp_PreviousPageHidden(_Player, _Instance);
LeaderLib_ModMenu_Internal_SetHideFlag(_Player, _Instance, "LeaderLib_ModMenu_HidePreviousPageButton");
LeaderLog_LogInt("DEBUG", "[LeaderLib_02_ModMenuSystem:UpdatePageFlags] Hiding previous page button [",_Page,"]/[",_MaxPage,"].");

PROC
LeaderLib_ModMenu_Internal_SetHideFlag((CHARACTERGUID)_Player, (INTEGER)_Instance, (STRING)_Flag)
AND
ObjectGetFlag(_Player, _Flag, 0)
THEN
ObjectSetFlag(_Player, _Flag, _Instance);

PROC
LeaderLib_ModMenu_Internal_UpdatePageFlags((CHARACTERGUID)_Player, (INTEGER)_Page, (INTEGER)_Instance)
AND
NOT DB_LeaderLib_ModMenu_Temp_NextPageHidden(_Player, _Instance)
AND
ObjectGetFlag(_Player, "LeaderLib_ModMenu_HideNextPageButton", 1)
THEN
ObjectClearFlag(_Player, "LeaderLib_ModMenu_HideNextPageButton", _Instance);
LeaderLog_Log("DEBUG", "[LeaderLib_02_ModMenuSystem:UpdatePageFlags] Showing next page button.");

PROC
LeaderLib_ModMenu_Internal_UpdatePageFlags((CHARACTERGUID)_Player, (INTEGER)_Page, (INTEGER)_Instance)
AND
NOT DB_LeaderLib_ModMenu_Temp_PreviousPageHidden(_Player, _Instance)
AND
ObjectGetFlag(_Player, "LeaderLib_ModMenu_HidePreviousPageButton", 1)
THEN
ObjectClearFlag(_Player, "LeaderLib_ModMenu_HidePreviousPageButton", _Instance);
LeaderLog_Log("DEBUG", "[LeaderLib_02_ModMenuSystem:UpdatePageFlags] Showing previous page button.");

PROC
LeaderLib_ModMenu_Internal_UpdatePageFlags((CHARACTERGUID)_Player, (INTEGER)_Page, (INTEGER)_Instance)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib_02_ModMenuSystem:UpdatePageFlags] Updated page flags.");
NOT DB_LeaderLib_ModMenu_Temp_NextPageHidden(_Player, _Instance);
NOT DB_LeaderLib_ModMenu_Temp_PreviousPageHidden(_Player, _Instance);

PROC
LeaderLib_ModMenu_SetPage((CHARACTERGUID)_Player, (INTEGER)_Page, (INTEGER)_Instance)
THEN
LeaderLib_ModMenu_Internal_ClearPreviousSelectedPage(_Player);
DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _Page);
LeaderLib_ModMenu_Internal_UpdatePageFlags(_Player, _Page, _Instance);

PROC
LeaderLib_ModMenu_NextPage((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
DB_LeaderLib_ModMenu_Temp_IsChangingMenuPage(_Player, _Instance)
AND
DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _Page)
AND
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
AND
_Page < _LastPageIndex
AND
IntegerSum(_Page, 1, _NextPage)
THEN
LeaderLib_ModMenu_SetPage(_Player, _NextPage, _Instance);
NOT DB_LeaderLib_ModMenu_Temp_IsChangingMenuPage(_Player, _Instance);

PROC
LeaderLib_ModMenu_NextPage((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
DB_LeaderLib_ModMenu_Temp_IsChangingMenuPage(_Player, _Instance)
AND
DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _Page)
AND
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
AND
_Page >= _LastPageIndex
THEN
LeaderLib_ModMenu_SetPage(_Player, 0, _Instance);
NOT DB_LeaderLib_ModMenu_Temp_IsChangingMenuPage(_Player, _Instance);

PROC
LeaderLib_ModMenu_PreviousPage((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
DB_LeaderLib_ModMenu_Temp_IsChangingMenuPage(_Player, _Instance)
AND
DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _Page)
AND
_Page <= 0
AND
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
THEN
LeaderLib_ModMenu_SetPage(_Player, _LastPageIndex, _Instance);
NOT DB_LeaderLib_ModMenu_Temp_IsChangingMenuPage(_Player, _Instance);

PROC
LeaderLib_ModMenu_PreviousPage((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
DB_LeaderLib_ModMenu_Temp_IsChangingMenuPage(_Player, _Instance)
AND
DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _Page)
AND
_Page > 0
AND
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
AND
IntegerSubtract(_Page, 1, _NextPage)
THEN
LeaderLib_ModMenu_SetPage(_Player, _NextPage, _Instance);
NOT DB_LeaderLib_ModMenu_Temp_IsChangingMenuPage(_Player, _Instance);
//END_REGION

//REGION DISABLE_FLAG

QRY
LeaderLib_ModMenu_QRY_DisableMenuIfNotAvailable((CHARACTERGUID)_Player, (INTEGER)_Index, (STRING)_DisabledFlag)
THEN
LeaderLib_ModMenu_Internal_DisableMenu_Start(_Player, _Index, _DisabledFlag);
LeaderLib_ModMenu_Internal_DisableMenu_ClearResolution(_Player, _Index, _DisabledFlag);

PROC
LeaderLib_ModMenu_Internal_DisableMenu_ClearResolution((CHARACTERGUID)_Player, (INTEGER)_Index, (STRING)_DisabledFlag)
AND
DB_LeaderLib_ModMenu_Temp_DisableMenuResolved(_Player, _Index, _DisabledFlag)
THEN
NOT DB_LeaderLib_ModMenu_Temp_DisableMenuResolved(_Player, _Index, _DisabledFlag);

PROC
LeaderLib_ModMenu_Internal_DisableMenu_Start((CHARACTERGUID)_Player, (INTEGER)_Index, (STRING)_DisabledFlag)
AND
ObjectGetFlag(_Player, _DisabledFlag, 0)
AND
NOT DB_LeaderLib_Dictionary_Data("LeaderLib_RegisteredMenus", _Index, _, _)
THEN
ObjectSetFlag(_Player, _DisabledFlag, 0);
DB_LeaderLib_ModMenu_Temp_DisableMenuResolved(_Player, _Index, _DisabledFlag);

PROC
LeaderLib_ModMenu_Internal_DisableMenu_Start((CHARACTERGUID)_Player, (INTEGER)_Index, (STRING)_DisabledFlag)
AND
NOT DB_LeaderLib_ModMenu_Temp_DisableMenuResolved(_Player, _Index, _DisabledFlag)
AND
ObjectGetFlag(_Player, _DisabledFlag, _FlagIsEnabled)
AND
DB_LeaderLib_Dictionary_Data("LeaderLib_RegisteredMenus", _Index, _Dialog, _DisplayName)
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author)
THEN
LeaderLib_ModMenu_Internal_DisableMenuIfNotAvailable(_Player, _Index, _ID, _ModID, _Author, _DisabledFlag, _FlagIsEnabled);

PROC
LeaderLib_ModMenu_Internal_DisableMenuIfNotAvailable((CHARACTERGUID)_Player, (INTEGER)_Index, (STRING)_ID, (STRING)_ModID, (STRING)_Author, (STRING)_DisabledFlag, 0)
AND
_ModID != ""
AND
NOT DB_LeaderLib_ModMenu_Temp_DisableMenuResolved(_Player, _Index, _DisabledFlag)
AND
NOT LeaderUpdater_QRY_ModIsActive(_ModID)
THEN
DB_LeaderLib_ModMenu_Temp_DisableMenuResolved(_Player, _Index, _DisabledFlag);
ObjectSetFlag(_Player, _DisabledFlag, 0);

PROC
LeaderLib_ModMenu_Internal_DisableMenuIfNotAvailable((CHARACTERGUID)_Player, (INTEGER)_Index, (STRING)_ID, (STRING)_ModID, (STRING)_Author, (STRING)_DisabledFlag, 1)
AND
_ModID != ""
AND
NOT DB_LeaderLib_ModMenu_Temp_DisableMenuResolved(_Player, _Index, _DisabledFlag)
AND
LeaderUpdater_QRY_ModIsActive(_ModID)
THEN
DB_LeaderLib_ModMenu_Temp_DisableMenuResolved(_Player, _Index, _DisabledFlag);
ObjectClearFlag(_Player, _DisabledFlag, 0);

PROC
LeaderLib_ModMenu_Internal_DisableMenuIfNotAvailable((CHARACTERGUID)_Player, (INTEGER)_Index, (STRING)_ID, "", "", (STRING)_DisabledFlag, 0)
AND
NOT DB_LeaderLib_ModMenu_Temp_DisableMenuResolved(_Player, _Index, _DisabledFlag)
AND
DB_LeaderUpdater_RegisteredUUID(_ModID, _Author, _UUID)
AND
String(_UUID, _ID)
AND
NOT LeaderUpdater_QRY_ModIsActive(_ModID)
THEN
DB_LeaderLib_ModMenu_Temp_DisableMenuResolved(_Player, _Index, _DisabledFlag);
ObjectSetFlag(_Player, _DisabledFlag, 0);

PROC
LeaderLib_ModMenu_Internal_DisableMenuIfNotAvailable((CHARACTERGUID)_Player, (INTEGER)_Index, (STRING)_ID, "", "", (STRING)_DisabledFlag, 1)
AND
NOT DB_LeaderLib_ModMenu_Temp_DisableMenuResolved(_Player, _Index, _DisabledFlag)
AND
DB_LeaderUpdater_RegisteredUUID(_ModID, _Author, _UUID)
AND
String(_UUID, _ID)
AND
LeaderUpdater_QRY_ModIsActive(_ModID)
THEN
DB_LeaderLib_ModMenu_Temp_DisableMenuResolved(_Player, _Index, _DisabledFlag);
ObjectClearFlag(_Player, _DisabledFlag, 0);
//END_REGION

//REGION PAGE_VARIABLES
PROC
LeaderLib_ModMenu_LoadPageVariables((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
NOT DB_LeaderLib_ModMenu_PageMax(_,_,_)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu][ERROR] ", "Max page settings not set. Reconfiguring.");
LeaderLib_ModMenu_CalculateMaxPage();

PROC
LeaderLib_ModMenu_LoadPageVariables((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
NOT DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _)
THEN
LeaderLib_ModMenu_SetPage(_Player, 0, _Instance);
LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu][ERROR] ", "Page not set for some reason. Setting to page 0.");

PROC
LeaderLib_ModMenu_LoadPageVariables((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
DB_LeaderLib_MenuSettings_Temp_MenuVariableValue(_MenuIndex, _Dialog)
THEN
NOT DB_LeaderLib_MenuSettings_Temp_MenuVariableValue(_MenuIndex, _Dialog);

PROC
LeaderLib_ModMenu_LoadPageVariables((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _Page)
AND
DB_LeaderLib_ModMenu_MenusPerPage(_MenusPerPage)
AND
IntegerProduct(_Page, _MenusPerPage, _StartIndex)
AND
DB_LeaderLib_ModMenu_MenuVars(_MenuIndex, _DialogVar, _SelectFlag, _DisabledFlag)
AND
IntegerSum(_MenuIndex, _StartIndex, _Index)
AND
LeaderLib_ModMenu_QRY_DisableMenuIfNotAvailable(_Player, _Index, _DisabledFlag)
AND
DB_LeaderLib_Dictionary_Data("LeaderLib_RegisteredMenus", _Index, _Dialog, _DisplayName)
AND
NOT DB_LeaderLib_MenuSettings_Temp_MenuVariableValue(_MenuIndex, _)
THEN
DialogSetVariableStringForInstance(_Instance, _DialogVar, _DisplayName);
DB_LeaderLib_MenuSettings_Temp_MenuVariableValue(_MenuIndex, _Dialog);

PROC
LeaderLib_ModMenu_LoadPageVariables((CHARACTERGUID)_Player, (INTEGER)_Instance)
THEN
LeaderLib_ModMenu_UpdatePageDisplay(_Player, _Instance);

PROC
LeaderLib_ModMenu_UpdatePageDisplay((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _Page)
AND
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
AND
_MaxPage > 1
AND
IntegerSum(_Page, 1, _DisplayedPage)
AND
IntegertoString(_DisplayedPage, _PageStr1)
AND
IntegertoString(_MaxPage, _PageStr2)
AND
StringConcatenate("Page: ", _PageStr1, _Str1)
AND
StringConcatenate(_Str1, "/", _Str2)
AND
StringConcatenate(_Str2, _PageStr2, _FinalStr)
AND
DB_LeaderLib_Settings_DialogVariables("ModMenu_PageInfo", _VariableValue)
THEN
DialogSetVariableStringForInstance(_Instance, _VariableValue, _FinalStr);

PROC
LeaderLib_ModMenu_UpdatePageDisplay((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
DB_LeaderLib_ModMenu_CurrentPageIndex(_Player, _Page)
AND
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
AND
_MaxPage <= 1
AND
DB_LeaderLib_Settings_DialogVariables("ModMenu_PageInfo", _VariableValue)
THEN
DialogSetVariableStringForInstance(_Instance, _VariableValue, "");

PROC
LeaderLib_ModMenu_CheckPageCount((CHARACTERGUID)_Player)
AND
NOT DB_LeaderLib_ModMenu_PageMax(_, _, _)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu] Page max not set?");

PROC
LeaderLib_ModMenu_CheckPageCount((CHARACTERGUID)_Player)
AND
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
AND
_LastPageIndex > 0
THEN
ObjectSetFlag(_Player, "LeaderLib_ModMenu_HasMultiplePages", 0);
//LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu] Multiple pages available.");

PROC
LeaderLib_ModMenu_CheckPageCount((CHARACTERGUID)_Player)
AND
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
AND
_LastPageIndex <= 0
THEN
ObjectClearFlag(_Player, "LeaderLib_ModMenu_HasMultiplePages", 0);
//LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu] Only one page available.");
//END_REGION

//REGION FLAG_ACTIONS
PROC
LeaderLib_ModMenu_SetNextMenu((CHARACTERGUID)_Player, (STRING)_ID, (STRING)_Dialog)
AND
DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _LastID, _LastDialog)
THEN
NOT DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _LastID, _LastDialog);

PROC
LeaderLib_ModMenu_SetNextMenu((CHARACTERGUID)_Player, (STRING)_ID, (STRING)_Dialog)
THEN
DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _ID, _Dialog);

IF
ObjectFlagSet(_SelectFlag, (CHARACTERGUID)_Player, _Instance)
AND
DB_LeaderLib_ModMenu_MenuVars(_MenuIndex, _DialogVar, _SelectFlag, _DisabledFlag)
AND
LeaderLib_Helper_QRY_ClearObjectFlag(_Player, _SelectFlag)
AND
DB_LeaderLib_MenuSettings_Temp_MenuVariableValue(_MenuIndex, _Dialog)
AND
DB_LeaderLib_ModMenu_RegisteredMenuData(_ID, _DisplayName, _Dialog, _ModID, _Author)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:ModMenu:ObjectFlagSet] Loading menu [",_ID,"][",_DisplayName,"][",_Dialog,"][",_ModID,"][",_Author,"]");
LeaderLib_ModMenu_SetNextMenu(_Player, _ID, _Dialog);

IF
ObjectFlagSet("LeaderLib_ModMenu_NextPage", (CHARACTERGUID)_Player, _Instance)
AND
LeaderLib_Helper_QRY_ClearObjectFlag(_Player, "LeaderLib_ModMenu_NextPage")
THEN
DB_LeaderLib_ModMenu_Temp_IsChangingMenuPage(_Player, _Instance);
LeaderLib_ModMenu_NextPage(_Player, _Instance);
LeaderLib_ModMenu_LoadPageVariables(_Player, _Instance);

IF
ObjectFlagSet("LeaderLib_ModMenu_PreviousPage", (CHARACTERGUID)_Player, _Instance)
AND
LeaderLib_Helper_QRY_ClearObjectFlag(_Player, "LeaderLib_ModMenu_PreviousPage")
THEN
DB_LeaderLib_ModMenu_Temp_IsChangingMenuPage(_Player, _Instance);
LeaderLib_ModMenu_PreviousPage(_Player, _Instance);
LeaderLib_ModMenu_LoadPageVariables(_Player, _Instance);

IF
ObjectFlagSet("LeaderLib_ModMenu_FirstPage", (CHARACTERGUID)_Player, _Instance)
AND
LeaderLib_Helper_QRY_ClearObjectFlag(_Player, "LeaderLib_ModMenu_FirstPage")
THEN
LeaderLib_ModMenu_SetPage(_Player, 0, _Instance);
LeaderLib_ModMenu_LoadPageVariables(_Player, _Instance);

IF
ObjectFlagSet("LeaderLib_ModMenu_LastPage", (CHARACTERGUID)_Player, _Instance)
AND
LeaderLib_Helper_QRY_ClearObjectFlag(_Player, "LeaderLib_ModMenu_LastPage")
AND
DB_LeaderLib_ModMenu_PageMax(_LastIndex, _LastPageIndex, _MaxPage)
THEN
LeaderLib_ModMenu_SetPage(_Player, _LastPageIndex, _Instance);
LeaderLib_ModMenu_LoadPageVariables(_Player, _Instance);
//END_REGION

//REGION DIALOG_EVENTS
IF
DialogStarted("LeaderLib_ModMenu", _Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
THEN
LeaderLib_ModMenu_ResetPlayerPage(_Player, _Instance);
LeaderLib_ModMenu_LoadPageVariables(_Player, _Instance);
LeaderLib_ModMenu_CheckPageCount(_Player);

IF
DialogStarted("LeaderLib_ModMenu", _Instance)
AND
LeaderLib_Array_QRY_EmptyLength("LeaderLib_RegisteredMenus")
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
THEN
ObjectSetFlag(_Player, "LeaderLib_ModMenu_IsEmpty", _Instance);

IF
DialogEnded("LeaderLib_ModMenu", _Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
THEN
ObjectClearFlag(_Player, "LeaderLib_ModMenu_IsEmpty", _Instance);
ObjectClearFlag(_Player, "LeaderLib_ModMenu_HideNextPageButton", _Instance);
ObjectClearFlag(_Player, "LeaderLib_ModMenu_HidePreviousPageButton", _Instance);

IF
DialogEnded("LeaderLib_ModMenu", _Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
AND
ObjectGetFlag(_Player, "LeaderLib_OpenSettingsMenu", 1)
THEN
ObjectClearFlag(_Player, "LeaderLib_OpenSettingsMenu", 0);
Proc_StartDialog(0, "LeaderLib_SettingsMenu", _Player);

IF
DialogEnded("LeaderLib_ModMenu", _Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
AND
DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _ID, _Dialog)
AND
DB_LeaderLib_ModMenu_RegisteredMenu_OpenEvent(_ID, _OpenMenuEvent)
THEN
SetStoryEvent(_Player, _OpenMenuEvent);

IF
DialogEnded("LeaderLib_ModMenu", _Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
AND
DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _ID, _Dialog)
AND
NOT DB_LeaderLib_ModMenu_RegisteredMenu_OpenEvent(_ID, _)
THEN
Proc_StartDialog(0, _Dialog, _Player, _Player);

IF
DialogEnded(_Dialog, _Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
AND
DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _ID, _Dialog)
THEN
NOT DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _ID, _Dialog);
LeaderLib_ModMenu_Internal_AttemptToReopen(_Player, _Dialog);

IF
DialogEnded(_Dialog, _Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
AND
ObjectGetFlag(_Player, "LeaderLib_OpenModMenu", 1)
AND
DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _ID, _Dialog)
THEN
ObjectClearFlag(_Player, "LeaderLib_OpenModMenu", 0);
LeaderLib_ModMenu_Reopen(_Player);

IF
StoryEvent((CHARACTERGUID)_Player, "LeaderLib_Commands_OpenModMenu")
AND
DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _ID, _Dialog)
THEN
LeaderLib_ModMenu_Internal_AttemptToReopen(_Player, _Dialog);

PROC
LeaderLib_ModMenu_Internal_AttemptToReopen((CHARACTERGUID)_Player, (STRING)_Dialog)
AND
UserGetFlag(_Player, "LeaderLib_AutoOpenModMenu", 1)
AND
NOT ObjectGetFlag(_Player, "LeaderLib_BlockModMenuReopen", 1)
THEN
//Delay in case another mod is already opening another menu.
ProcObjectTimer(_Player, "LeaderLib_Timers_AttemptToOpenModMenu", 500);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LeaderLib_Timers_AttemptToOpenModMenu")
AND
NOT DB_DialogPlayers(_, _Player, _)
THEN
LeaderLib_ModMenu_Reopen(_Player);

PROC
LeaderLib_ModMenu_Reopen((CHARACTERGUID)_Player)
AND
QRY_SpeakerIsAvailable((GUIDSTRING)_Player, 0)
THEN
Proc_StartDialog(0, "LeaderLib_ModMenu", _Player);

//Book not found?
/*
PROC
LeaderLib_ModMenu_Reopen((CHARACTERGUID)_Player)
AND
LeaderLib_ModMenu_QRY_HasMenuSelected(_Player)
THEN
Proc_StartDialog(0, "LeaderLib_ModMenu", _Player);
*/

PROC
LeaderLib_ModMenu_Reopen((CHARACTERGUID)_Player)
THEN
ObjectSetFlag(_Player, "LeaderLib_ModMenu_ClearMemory", 0);

IF
ObjectFlagSet("LeaderLib_ModMenu_ClearMemory", (CHARACTERGUID)_Player, _)
AND
LeaderLib_Helper_QRY_ClearObjectFlag(_Player, "LeaderLib_ModMenu_ClearMemory")
AND
DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _ID, _Dialog)
THEN
NOT DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _ID, _Dialog);

QRY
LeaderLib_ModMenu_QRY_HasMenuSelected((CHARACTERGUID)_Player)
AND
DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _ID, _Dialog)
THEN
DB_NOOP(1);
//END_REGION

//REGION OPEN_MOD_MENU
IF
CharacterUsedItemTemplate(_Player, "BOOK_LeaderLib_ModMenu_646a1194-3383-47fa-a379-ebefa3d2b108", _)
AND
NOT QRY_SpeakerIsAvailable(_Player)
AND
CharacterIsInCombat(_Player, 1)
THEN
CharacterStatusText(_Player, "<font color='#FF0000'>Unable to open Mod Settings menu in combat.</font>");

IF
CharacterUsedItemTemplate(_Player, "BOOK_LeaderLib_ModMenu_646a1194-3383-47fa-a379-ebefa3d2b108", _Book)
AND
QRY_SpeakerIsAvailable(_Player)
THEN
Proc_StartDialog(0, "LeaderLib_ModMenu", _Player);

IF
CharacterUsedSkill(_Player, "Shout_LeaderLib_OpenModMenu", _, _)
THEN
ProcObjectTimerCancel(_Player, "LeaderLib_Timers_OpenModMenu_Skill");
ProcObjectTimer(_Player, "LeaderLib_Timers_OpenModMenu_Skill", 50);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LeaderLib_Timers_OpenModMenu_Skill")
AND
QRY_SpeakerIsAvailable(_Player)
THEN
Proc_StartDialog(0, "LeaderLib_ModMenu", _Player);

//END_REGION

//REGION SHARED_FLAG_WORKAROUND_FIX
/*
When Origin companions open the mod menu within their recruitment area, clearing flags in the mod menu suddenly created endless feedback loops thanks to __AAA_Shared_FirstGoal
Not really sure why this is happening now.
*/
IF
DB_GLO_AllDialogObjectFlagsShared(_Instance)
AND
DB_DialogName("LeaderLib_ModMenu", _Instance)
THEN
LeaderLib_ModMenu_Internal_PreventSharedDialog(_Instance);

IF
DB_GLO_AllDialogObjectFlagsShared(_Instance)
AND
DB_DialogName("LeaderLib_PresetMenu", _Instance)
THEN
LeaderLib_ModMenu_Internal_PreventSharedDialog(_Instance);

IF
DB_GLO_AllDialogObjectFlagsShared(_Instance)
AND
DB_DialogName("LeaderLib_CommandsMenu", _Instance)
THEN
LeaderLib_ModMenu_Internal_PreventSharedDialog(_Instance);

/*
IF
DB_GLO_AllDialogObjectFlagsShared(_Instance)
AND
DB_DialogName(_Dialog, _Instance)
AND
DB_LeaderLib_ModMenu_Temp_ActiveMenu(_Player, _ID, _Dialog)
THEN
LeaderLib_ModMenu_Internal_PreventSharedDialog(_Instance);
*/

PROC
LeaderLib_ModMenu_Internal_PreventSharedDialog((INTEGER)_Instance)
THEN
NOT DB_GLO_AllDialogObjectFlagsShared(_Instance);
//END_REGION

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
