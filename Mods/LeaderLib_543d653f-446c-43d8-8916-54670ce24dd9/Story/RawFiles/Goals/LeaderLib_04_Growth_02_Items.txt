Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LeaderLib_Growth_Items_DeltaMods(_ID, _MinLevel, _DeltaMod, _MatchType, _MatchValue)

KBSECTION
//REGION UPDATES
PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1,1,22,0)
AND
DB_LeaderLib_Growth_Items_TemplateID((STRING)_ID, (STRING)_Template)
THEN
NOT DB_LeaderLib_Growth_Items_TemplateID(_ID, _Template);
DB_LeaderLib_Growth_Items_TemplateID("None", _ID, _Template);
//END_REGION

//REGION REGISTERING

/*Register a deltamod to the growth system.
_MatchType: "ID", "Template", "Tag"
*/
PROC
LeaderLib_Growth_Items_Register_DeltaMod((STRING)_ID, (INTEGER)_MinLevel, (STRING)_DeltaMod, (STRING)_MatchType, (STRING)_MatchValue)
THEN
DB_LeaderLib_Growth_Items_DeltaMods(_ID, _MinLevel, _DeltaMod, _MatchType, _MatchValue);
LeaderLib_Growth_Items_Internal_OnRegistered();

/* Set a limit to allow more than 1 of the same deltamod on an item.*/
PROC
LeaderLib_Growth_Items_Register_DeltaModLimit((STRING)_DeltaMod, (INTEGER)_Limit)
THEN
DB_LeaderLib_Growth_Items_DeltaMod_Limit(_DeltaMod, _Limit);

//Register a deltamod using the ID as the match value.
PROC
LeaderLib_Growth_Items_Register_DeltaModByID((STRING)_ID, (INTEGER)_MinLevel, (STRING)_DeltaMod)
THEN
DB_LeaderLib_Growth_Items_DeltaMods(_ID, _MinLevel, _DeltaMod, "ID", _ID);
LeaderLib_Growth_Items_Internal_OnRegistered();

//Register a template to an ID.
PROC
LeaderLib_Growth_Items_Register_Template((STRING)_ID, (STRING)_Template)
THEN
LeaderLib_Growth_Items_Register_Template("None", _ID, _Template);

PROC
LeaderLib_Growth_Items_Register_Template((STRING)_ModID, (STRING)_ID, (STRING)_Template)
THEN
DB_LeaderLib_Growth_Items_TemplateID(_ModID, _ID, _Template);
LeaderLib_Growth_Items_Internal_OnRegistered();

PROC
LeaderLib_Growth_Items_Register_Transformation((STRING)_ID, (INTEGER)_MinLevel, (STRING)_TransformTemplate, (STRING)_TransformedFlag)
THEN
DB_LeaderLib_Growth_Items_Transformations(_ID, _MinLevel, _TransformTemplate, _TransformedFlag);
LeaderLib_Growth_Items_Internal_OnRegistered();

PROC
LeaderLib_Growth_Items_Internal_OnRegistered()
AND
NOT DB_LeaderLib_ToggleScripts_Temp_ActiveScripts("LeaderLib_TS_GrowthEvents_Character_Enabled", "LeaderLib")
THEN
LeaderLib_ToggleScripts_EnableScript("LeaderLib_TS_GrowthEvents_Item_Enabled", "LeaderLib");
//END_REGION

//REGION CLEARING
PROC
LeaderLib_Growth_Items_Clear_ByEntriesID((STRING)_ID)
AND
DB_LeaderLib_Growth_Items_DeltaMods(_ID, _MinLevel, _DeltaMod, _MatchType, _MatchValue)
THEN
NOT DB_LeaderLib_Growth_Items_DeltaMods(_ID, _MinLevel, _DeltaMod, _MatchType, _MatchValue);

PROC
LeaderLib_Growth_Items_Clear_Template((STRING)_ID)
AND
DB_LeaderLib_Growth_Items_TemplateID(_ModID, _ID, _Template)
THEN
NOT DB_LeaderLib_Growth_Items_TemplateID(_ModID, _ID, _Template);

PROC
LeaderLib_Growth_Items_Clear_TemplatesForMod((STRING)_ModID)
AND
DB_LeaderLib_Growth_Items_TemplateID(_ModID, _ID, _Template)
THEN
NOT DB_LeaderLib_Growth_Items_TemplateID(_ModID, _ID, _Template);

PROC
LeaderLib_Growth_Items_Clear_Transformation((STRING)_ID, (STRING)_TransformTemplate)
AND
DB_LeaderLib_Growth_Items_Transformations(_ID, _MinLevel, _TransformTemplate, _TransformedFlag)
THEN
NOT DB_LeaderLib_Growth_Items_Transformations(_ID, _MinLevel, _TransformTemplate, _TransformedFlag);

PROC
LeaderLib_Growth_Items_Clear_AllTransformations((STRING)_ID)
AND
DB_LeaderLib_Growth_Items_Transformations(_ID, _MinLevel, _TransformTemplate, _TransformedFlag)
THEN
NOT DB_LeaderLib_Growth_Items_Transformations(_ID, _MinLevel, _TransformTemplate, _TransformedFlag);

PROC
LeaderLib_Growth_Items_Clear_ByEntriesID((STRING)_ID)
AND
DB_LeaderLib_ToggleScripts_Temp_ActiveScripts("LeaderLib_TS_GrowthEvents_Character_Enabled", "LeaderLib")
AND
SysCount("DB_LeaderLib_Growth_Items_TemplateID", 3, 0)
AND
SysCount("DB_LeaderLib_Growth_Items_Transformations", 4, 0)
AND
SysCount("DB_LeaderLib_Growth_Items_DeltaMods", 4, 0)
THEN
LeaderLib_ToggleScripts_DisableScript("LeaderLib_TS_GrowthEvents_Item_Enabled", "LeaderLib");
//END_REGION

//REGION ITEM_AUTO_LEVEL
QRY
LeaderLib_Growth_Items_QRY_HasAutoLevelItem((CHARACTERGUID)_Character)
AND
NOT DB_LeaderLib_Growth_Items_Temp_FoundItem(_Character)
AND
CharacterFindTaggedItem(_Character, "LeaderLib_AutoLevel", _Item)
AND
NOT LeaderLib_Helper_QRY_IgnoreItem(_Item)
THEN
LeaderLog_Log("TRACE", "[LeaderLib:Growth:Items:HasAutoLevelItem(CharacterFindTaggedItem)] Found tagged item.");
DB_LeaderLib_Growth_Items_Temp_FoundItem(_Character);

//Equipment doesn't return with `CharacterFindTaggedItem`
QRY
LeaderLib_Growth_Items_QRY_HasAutoLevelItem((CHARACTERGUID)_Character)
AND
NOT DB_LeaderLib_Growth_Items_Temp_FoundItem(_Character)
AND
DB_LeaderLib_EquipmentSlots(_Slot)
AND
NOT DB_LeaderLib_Growth_Items_Temp_FoundItem(_Character)
AND
CharacterGetEquippedItem(_Character, _Slot, (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
IsTagged(_Item, "LeaderLib_AutoLevel", 1)
AND
NOT LeaderLib_Helper_QRY_IgnoreItem(_Item)
THEN
LeaderLog_Log("TRACE", "[LeaderLib:Growth:Items:HasAutoLevelItem] Found tagged equipment in slot [",_Slot,"].");
DB_LeaderLib_Growth_Items_Temp_FoundItem(_Character);

QRY
LeaderLib_Growth_Items_QRY_HasAutoLevelItem((CHARACTERGUID)_Character)
AND
DB_LeaderLib_Growth_Items_Temp_FoundItem(_Character)
THEN
NOT DB_LeaderLib_Growth_Items_Temp_FoundItem(_Character);

//Equipment doesn't work with `IterateItemsInInventory`
PROC
LeaderLib_Growth_Items_LevelUpItems((CHARACTERGUID)_Character)
AND
DB_LeaderLib_EquipmentSlots(_Slot)
AND
CharacterGetEquippedItem(_Character, _Slot, (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
IsTagged(_Item, "LeaderLib_AutoLevel", 1)
THEN
LeaderLib_Growth_Items_LevelUpItem(_Character, _Item);

PROC
LeaderLib_Growth_Items_LevelUpItems((CHARACTERGUID)_Character)
THEN
//InventoryLaunchTagIterator(_Character, "LeaderLib_AutoLevel", "", "LeaderLib_Commands_AutoLevelItem", "");
//Handled in LeaderLib_Main.gameScript, iterates an inventory and gets the item's level stat
SetStoryEvent(_Character, "LeaderLib_Events_AutoLevelItems_Start");

QRY
LeaderLib_Growtn_Items_QRY_ItemShouldLevelUp((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetVarInteger(_Item, "LeaderLib_Level", _ItemLevel)
AND
CharacterGetLevel(_Character, _Level)
AND
_ItemLevel < _Level
THEN
DB_NOOP(1);

QRY
LeaderLib_Growtn_Items_QRY_ItemShouldLevelUp((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
NOT GetVarInteger(_Item, "LeaderLib_Level", _)
THEN
DB_NOOP(1);

PROC
LeaderLib_Growth_Items_LevelUpItem((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
NOT DB_LeaderLib_Growth_Items_Temp_EquipAfterTransform(_Character, _Item)
AND
LeaderLib_Growtn_Items_QRY_ItemShouldLevelUp(_Character, _Item)
THEN
LeaderLib_Growth_Items_TransformItem(_Character, _Item);
LeaderLib_Growth_Items_Internal_CheckItemLevel(_Character, _Item);

PROC
LeaderLib_Growth_Items_Internal_CheckItemLevel((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
NOT DB_LeaderLib_Growth_Items_Temp_EquipAfterTransform(_Character, _Item)
THEN
LeaderLib_Timers_StartCharacterItemTimer(_Character, _Item, 125, "LeaderLib_Timers_AutoLevelItemFallback", "LeaderLib_Commands_AutoLevelItem");
CharacterItemSetEvent(_Character, _Item, "LeaderLib_Commands_CheckItemLevel");

IF
StoryEvent((ITEMGUID)_Item, "LeaderLib_Commands_AutoLevelItem")
AND
GetInventoryOwner(_Item, _Character)
AND
ObjectIsCharacter((CHARACTERGUID)_Character, 1)
THEN
LeaderLib_Growth_Items_Internal_LevelUpNow(_Character, _Item);

IF
CharacterItemEvent(_Character, _Item, "LeaderLib_Commands_AutoLevelItem")
THEN
LeaderLib_Growth_Items_Internal_LevelUpNow(_Character, _Item);

PROC
LeaderLib_Growth_Items_Internal_LevelUpNow((CHARACTERGUID)_Character, (ITEMGUID)_Item)
THEN
LeaderLib_Timers_CancelCharacterItemTimer(_Character, _Item, "LeaderLib_Timers_AutoLevelItemFallback");

PROC
LeaderLib_Growth_Items_Internal_LevelUpNow((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
NOT DB_LeaderLib_Growth_Items_Temp_AutoLeveledItem(_Item, _Character)
AND
NOT GetVarInteger(_Item, "LeaderLib_Level", _)
AND
CharacterGetLevel(_Character, _Level)
THEN
DB_LeaderLib_Growth_Items_Temp_AutoLeveledItem(_Item, _Character);
LeaderLog_LogInt("DEBUG", "[LeaderLib:Growth:Items:LevelUpNow] Item variable not set. Using Character's level (",_Level,").");
ItemLevelUpTo(_Item, _Level);
SetVarInteger(_Item, "LeaderLib_Level", _Level);
CharacterItemSetEvent(_Character, _Item, "LeaderLib_Events_ItemLeveledUp");

PROC
LeaderLib_Growth_Items_Internal_LevelUpNow((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
NOT DB_LeaderLib_Growth_Items_Temp_AutoLeveledItem(_Item, _Character)
AND
GetVarInteger(_Item, "LeaderLib_Level", _ItemLevel)
AND
CharacterGetLevel(_Character, _Level)
AND
_ItemLevel < _Level
THEN
DB_LeaderLib_Growth_Items_Temp_AutoLeveledItem(_Item, _Character);
LeaderLog_LogInt("DEBUG", "[LeaderLib:Growth:Items:LevelUpNow] Leveling up item from level [",_ItemLevel,"] to [",_Level,"].");
ItemLevelUpTo(_Item, _Level);
SetVarInteger(_Item, "LeaderLib_Level", _Level);
CharacterItemSetEvent(_Character, _Item, "LeaderLib_Events_ItemLeveledUp");

PROC
LeaderLib_Growth_Items_Internal_LevelUpNow((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
DB_LeaderLib_Growth_Items_Temp_AutoLeveledItem(_Item, _Character)
THEN
NOT DB_LeaderLib_Growth_Items_Temp_AutoLeveledItem(_Item, _Character);
//END_REGION

//REGION DELTA_MODS
QRY
LeaderLib_Growth_Items_QRY_Internal_TemplateMatch((ITEMGUID)_Item, (STRING)_Template)
AND
DB_LeaderLib_Growth_Items_TemplateID(_ModID, _ID, _Template)
AND
DB_LeaderLib_Growth_Items_DeltaMods(_GroupID, _MinLevel, _DeltaMod, "ID", _ID)
AND
NOT DB_LeaderLib_Growth_Items_Temp_TemplateMatch(_Item, _Template)
THEN
DB_LeaderLib_Growth_Items_Temp_TemplateMatch(_Item, _Template);

QRY
LeaderLib_Growth_Items_QRY_Internal_TemplateMatch((ITEMGUID)_Item, (STRING)_Template)
AND
NOT DB_LeaderLib_Growth_Items_Temp_TemplateMatch(_Item, _Template)
AND
DB_LeaderLib_Growth_Items_DeltaMods(_ID, _MinLevel, _DeltaMod, "Template", _Template)
AND
NOT DB_LeaderLib_Growth_Items_Temp_TemplateMatch(_Item, _Template)
THEN
DB_LeaderLib_Growth_Items_Temp_TemplateMatch(_Item, _Template);

QRY
LeaderLib_Growth_Items_QRY_ItemHasDeltaMods((ITEMGUID)_Item)
AND
IsTagged(_Item, "LeaderLib_DisableDeltamods", 0)
AND
GetTemplate(_Item, _Template)
AND
LeaderLib_Growth_Items_QRY_Internal_TemplateMatch(_Item, _Template)
THEN
NOT DB_LeaderLib_Growth_Items_Temp_TemplateMatch(_Item, _Template);

QRY
LeaderLib_Growth_Items_QRY_ItemHasDeltaMods((ITEMGUID)_Item)
AND
IsTagged(_Item, "LeaderLib_DisableDeltamods", 0)
AND
DB_LeaderLib_Growth_Items_DeltaMods(_ID, _MinLevel, _DeltaMod, "Tag", _Tag)
AND
IsTagged(_Item, _Tag, 1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Growth_Items_QRY_DeltaModsAddedThisLevel((ITEMGUID)_Item)
AND
GetVarInteger(_Item, "LeaderLib_Level", _Level)
AND
GetVarInteger(_Item, "LeaderLib_LastDeltamodLevel", _Last)
//AND
//LeaderLog_QRY_LogInt("DEBUG", "[LeaderLib:Growth:Items:QRY_DeltaModsAddedThisLevel] LeaderLib_Level [",_Level,"] LeaderLib_LastDeltamodLevel [",_Last,"].")
AND
_Last >= _Level
THEN
DB_NOOP(1);

IF
CharacterItemEvent(_Character, _Item, "LeaderLib_Events_ItemLeveledUp")
AND
NOT LeaderLib_Growth_Items_QRY_DeltaModsAddedThisLevel(_Item)
AND
NOT DB_LeaderLib_Growth_Items_Temp_AppliedDeltaMods(_Character, _Item)
AND
LeaderLib_Growth_Items_QRY_ItemHasDeltaMods(_Item)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Growth:Items:LeaderLib_Events_ItemLeveledUp] Applying deltamods to item.");
DB_LeaderLib_Growth_Items_Temp_AppliedDeltaMods(_Character, _Item);
LeaderLib_Growth_Items_ApplyDeltaMods(_Character, _Item);

IF
CharacterItemEvent(_Character, _Item, "LeaderLib_Events_ItemLevelCheckFinished")
AND
NOT LeaderLib_Growth_Items_QRY_DeltaModsAddedThisLevel(_Item)
AND
NOT DB_LeaderLib_Growth_Items_Temp_AppliedDeltaMods(_Character, _Item)
AND
LeaderLib_Growth_Items_QRY_ItemHasDeltaMods(_Item)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Growth:Items:LeaderLib_Events_ItemLevelCheckFinished] Applying deltamods to item.");
DB_LeaderLib_Growth_Items_Temp_AppliedDeltaMods(_Character, _Item);
LeaderLib_Growth_Items_ApplyDeltaMods(_Character, _Item);

IF
DB_LeaderLib_Growth_Items_Temp_AppliedDeltaMods(_Character, _Item)
THEN
LeaderLib_Timers_StartCharacterItemTimer(_Character, _Item, 250, "LeaderLib_Timers_Growth_ResetAppliedDeltaModsDatabase", "LeaderLib_Events_Growth_ResetAppliedDeltaModsDatabase");

IF
CharacterItemEvent(_Character, _Item, "LeaderLib_Events_Growth_ResetAppliedDeltaModsDatabase")
AND
DB_LeaderLib_Growth_Items_Temp_AppliedDeltaMods(_Character, _Item)
THEN
NOT DB_LeaderLib_Growth_Items_Temp_AppliedDeltaMods(_Character, _Item);

PROC
LeaderLib_Growth_Items_ApplyDeltaMods((ITEMGUID)_Item)
AND
ItemGetOwner(_Item, _Owner)
AND
_Owner != NULL_00000000-0000-0000-0000-000000000000
THEN
LeaderLib_Growth_Items_ApplyDeltaMods(_Owner, _Item);

PROC
LeaderLib_Growth_Items_ApplyDeltaMods((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
NOT GetVarInteger(_Item, "LeaderLib_Level", _)
AND
CharacterGetLevel(_Character, _Level)
THEN
SetVarInteger(_Item, "LeaderLib_Level", _Level);
LeaderLog_Log("DEBUG", "[LeaderLib:Growth:Items:ApplyDeltaMods] Level not set on item. Using character's level.");

PROC
LeaderLib_Growth_Items_ApplyDeltaMods((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetVarInteger(_Item, "LeaderLib_Level", _Level)
THEN
SetVarInteger(_Item, "LeaderLib_LastDeltamodLevel", _Level);

QRY
LeaderLib_Growth_Items_QRY_CanAddRuneSlotDeltaMod((ITEMGUID)_Item, (STRING)_DeltaMod)
AND
DB_LeaderLib_RuneSlotDeltaMod(_Group, _DeltaMod)
AND
NOT LeaderLib_Helper_QRY_ItemHasMaxRuneSlots(_Item)
THEN
DB_NOOP(1);

QRY
LeaderLib_Growth_Items_QRY_CanAddRuneSlotDeltaMod((ITEMGUID)_Item, (STRING)_DeltaMod)
AND
NOT DB_LeaderLib_RuneSlotDeltaMod(_, _DeltaMod)
THEN
DB_NOOP(1);

QRY
LeaderLib_Growth_Items_QRY_CanAddDeltaMod((ITEMGUID)_Item, (STRING)_DeltaMod)
AND
LeaderLib_Growth_Items_QRY_CanAddRuneSlotDeltaMod(_Item, _DeltaMod)
AND
LeaderLib_Growth_Items_QRY_Internal_CanAddDeltaMod(_Item, _DeltaMod)
THEN
DB_NOOP(1);

//After the RuneSlot check is passed
QRY
LeaderLib_Growth_Items_QRY_Internal_CanAddDeltaMod((ITEMGUID)_Item, (STRING)_DeltaMod)
AND
NOT ItemHasDeltaModifier(_Item, _DeltaMod, _)
THEN
DB_NOOP(1);

QRY
LeaderLib_Growth_Items_QRY_Internal_CanAddDeltaMod((ITEMGUID)_Item, (STRING)_DeltaMod)
AND
ItemHasDeltaModifier(_Item, _DeltaMod, 0)
THEN
DB_NOOP(1);

QRY
LeaderLib_Growth_Items_QRY_Internal_CanAddDeltaMod((ITEMGUID)_Item, (STRING)_DeltaMod)
AND
ItemHasDeltaModifier(_Item, _DeltaMod, _Count)
AND
DB_LeaderLib_Growth_Items_DeltaMod_Limit(_DeltaMod, _Limit)
AND
_Count < _Limit
THEN
DB_NOOP(1);

PROC
LeaderLib_Growth_Items_ApplyDeltaMods((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetVarInteger(_Item, "LeaderLib_Level", _ItemLevel)
AND
DB_LeaderLib_Growth_Items_DeltaMods(_ID, _MinLevel, _DeltaMod, "Tag", _Tag)
AND
IsTagged(_Item, _Tag, 1)
AND
_ItemLevel >= _MinLevel
AND
LeaderLib_Growth_Items_QRY_CanAddDeltaMod(_Item, _DeltaMod)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Growth:Items:ApplyDeltaMods(Tag)] Added deltamod [",_DeltaMod,"] to item with tag [",_Tag,"].");
ItemAddDeltaModifier(_Item, _DeltaMod);

QRY
LeaderLib_Growth_Items_QRY_Internal_GetID((ITEMGUID)_Item)
AND
GetTemplate(_Item, _Template)
AND
DB_LeaderLib_Growth_Items_TemplateID(_ModID, _ID, _Template)
THEN
DB_LeaderLib_Growth_Items_Temp_MatchedID(_Item, _ID);

PROC
LeaderLib_Growth_Items_ApplyDeltaMods((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetVarInteger(_Item, "LeaderLib_Level", _ItemLevel)
AND
LeaderLib_Growth_Items_QRY_Internal_GetID(_Item)
AND
DB_LeaderLib_Growth_Items_Temp_MatchedID(_Item, _ID)
AND
DB_LeaderLib_Growth_Items_DeltaMods(_GroupID, _MinLevel, _DeltaMod, "ID", _ID)
AND
_ItemLevel >= _MinLevel
AND
LeaderLib_Growth_Items_QRY_CanAddDeltaMod(_Item, _DeltaMod)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Growth:Items:ApplyDeltaMods(ID)] Added deltamod [",_DeltaMod,"] to item via matched ID [",_ID,"].");
ItemAddDeltaModifier(_Item, _DeltaMod);

PROC
LeaderLib_Growth_Items_ApplyDeltaMods((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
DB_LeaderLib_Growth_Items_Temp_MatchedID(_Item, _ID)
THEN
NOT DB_LeaderLib_Growth_Items_Temp_MatchedID(_Item, _ID);

//Old template method
PROC
LeaderLib_Growth_Items_ApplyDeltaMods((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetVarInteger(_Item, "LeaderLib_Level", _ItemLevel)
AND
GetTemplate(_Item, _Template)
AND
DB_LeaderLib_Growth_Items_DeltaMods(_ID, _MinLevel, _DeltaMod, "Template", _Template)
AND
_ItemLevel >= _MinLevel
AND
LeaderLib_Growth_Items_QRY_CanAddDeltaMod(_Item, _DeltaMod)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Growth:Items:ApplyDeltaMods(Template)] Added deltamod [",_DeltaMod,"] to item.");
ItemAddDeltaModifier(_Item, _DeltaMod);
//END_REGION

//REGION DELTAMOD_CHECK
PROC
LeaderLib_Growth_Items_CheckEquipmentForMissingDeltamods((CHARACTERGUID)_Character)
AND
DB_LeaderLib_EquipmentSlots(_Slot)
AND
CharacterGetEquippedItem(_Character, _Slot, (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
NOT LeaderLib_Growth_Items_QRY_DeltaModsAddedThisLevel(_Item)
AND
LeaderLib_Growth_Items_QRY_ItemHasDeltaMods(_Item)
THEN
LeaderLib_Growth_Items_ApplyDeltaMods(_Character, _Item);
//END_REGION

//REGION TRANSFORMATIONS
//Transformation should happen before leveling up the item and applying deltamods
PROC
LeaderLib_Growth_Items_TransformItem((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetTemplate(_Item, _Template)
AND
DB_LeaderLib_Growth_Items_TemplateID(_ModID, _ID, _Template)
AND
CharacterGetLevel(_Character, _Level)
THEN
LeaderLib_Growth_Items_TransformItem(_Character, _Item, _ID, _Level);

PROC
LeaderLib_Growth_Items_TransformItem((CHARACTERGUID)_Character, (ITEMGUID)_Item, (INTEGER)_Level)
AND
GetTemplate(_Item, _Template)
AND
DB_LeaderLib_Growth_Items_TemplateID(_ModID, _ID, _Template)
THEN
LeaderLib_Growth_Items_TransformItem(_Character, _Item, _ID, _Level);

PROC
LeaderLib_Growth_Items_TransformItem((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_ID, (INTEGER)_Level)
AND
DB_LeaderLib_Growth_Items_Transformations(_ID, _MinLevel, _TransformTemplate, _TransformedFlag)
AND
_Level >= _MinLevel
AND
ObjectGetFlag(_Item, _TransformedFlag, 0)
THEN
LeaderLib_Growth_Items_Internal_SetNextTransform(_Character, _Item, _ID, _TransformTemplate, _TransformedFlag);
LeaderLib_Growth_Items_BlockEquipAfterTransform(_Character, _Item, _ID, _TransformTemplate, _Level);

//Set DB_LeaderLib_Growth_Items_Temp_BlockEquip(_Character, _Item) to block
PROC
LeaderLib_Growth_Items_BlockEquipAfterTransform((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_ID, (STRING)_TransformTemplate, (INTEGER)_Level)
THEN
DB_NOOP(1);

PROC
LeaderLib_Growth_Items_TransformItem((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_ID, (INTEGER)_Level)
AND
DB_LeaderLib_Growth_Items_Temp_NextTransform(_Character, _Item, _ID, _Template, _TransformedFlag)
AND
ItemIsEquipable(_Item, 1)
AND
NOT DB_LeaderLib_Growth_Items_Temp_BlockEquip(_Character, _Item)
THEN
DB_LeaderLib_Growth_Items_Temp_EquipAfterTransform(_Character, _Item);

PROC
LeaderLib_Growth_Items_TransformItem((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_ID, (INTEGER)_Level)
AND
DB_LeaderLib_Growth_Items_Temp_BlockEquip(_Character, _Item)
THEN
NOT DB_LeaderLib_Growth_Items_Temp_BlockEquip(_Character, _Item);

PROC
LeaderLib_Growth_Items_TransformItem((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_ID, (INTEGER)_Level)
AND
DB_LeaderLib_Growth_Items_Temp_NextTransform(_Character, _Item, _ID, _Template, _TransformedFlag)
AND
ItemGetOwner(_Item, _Owner)
THEN
NOT DB_LeaderLib_Growth_Items_Temp_NextTransform(_Character, _Item, _ID, _Template, _TransformedFlag);
DB_LeaderLib_Growth_Items_Temp_Transforming(_Character, _Item, _ID, _Template, _TransformedFlag);
LeaderLog_Log("DEBUG", "[LeaderLib:Growth:Items:TransformItem] Transforming item [",_ID,"] to template [",_Template,"] with flag [",_TransformedFlag,"].");
LeaderLib_Growth_Items_Internal_Transform_UnequipItem(_Character, _Item);
Transform(_Item, _Template, 0, 1, 1);
ItemSetOwner(_Item, _Owner);
LeaderLib_Timers_StartCharacterItemTimer(_Character, _Item, 50, "LeaderLib_Timers_OnGrowthItemTransformed", "LeaderLib_OnGrowthItemTransformed");

PROC
LeaderLib_Growth_Items_Internal_Transform_UnequipItem((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
LeaderLib_Helper_QRY_ItemIsEquipped(_Character, _Item)
THEN
CharacterUnequipItem(_Character, _Item);
DB_LeaderLib_Growth_Items_Temp_ItemWasEquipped(_Character, _Item);

PROC
LeaderLib_Growth_Items_Internal_SetNextTransform((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_ID, (STRING)_Template, (STRING)_TransformedFlag)
AND
DB_LeaderLib_Growth_Items_Temp_NextTransform(_Character, _Item, _ID, _OtherTemplate, _OtherTransformedFlag)
THEN
NOT DB_LeaderLib_Growth_Items_Temp_NextTransform(_Character, _Item, _ID, _OtherTemplate, _OtherTransformedFlag);

PROC
LeaderLib_Growth_Items_Internal_SetNextTransform((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_ID, (STRING)_Template, (STRING)_TransformedFlag)
THEN
DB_LeaderLib_Growth_Items_Temp_NextTransform(_Character, _Item, _ID, _Template, _TransformedFlag);
ObjectSetFlag(_Item, _TransformedFlag);

PROC
LeaderLib_Growth_Items_OnItemTransformed((ITEMGUID)_Item, (STRING)_Template)
AND
IsTagged(_Item, "LeaderLib_AutoLevel", 1)
THEN
SetVarInteger(_Item, "LeaderLib_Level", 1);

PROC
LeaderLib_Growth_Items_OnItemTransformed((ITEMGUID)_Item, (STRING)_Template)
AND
DB_LeaderLib_Growth_Items_Temp_EquipAfterTransform(_Character, _Item)
THEN
NOT DB_LeaderLib_Growth_Items_Temp_EquipAfterTransform(_Character, _Item);
LeaderLib_Growth_Items_Internal_Transform_EquipItem(_Character, _Item);

PROC
LeaderLib_Growth_Items_Internal_Transform_EquipItem((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
ObjectExists(_Item, 1)
AND
ObjectExists(_Character, 1)
AND
DB_LeaderLib_Growth_Items_Temp_ItemWasEquipped(_Character, _Item)
THEN
NOT DB_LeaderLib_Growth_Items_Temp_ItemWasEquipped(_Character, _Item);
CharacterEquipItem((CHARACTERGUID)_Character, (ITEMGUID)_Item);

IF
CharacterItemEvent(_Character, _Item, "LeaderLib_OnGrowthItemTransformed")
AND
DB_LeaderLib_Growth_Items_Temp_Transforming(_Character, _Item, _ID, _Template, _TransformedFlag)
THEN
NOT DB_LeaderLib_Growth_Items_Temp_Transforming(_Character, _Item, _ID, _Template, _TransformedFlag);
LeaderLib_Growth_Items_LevelUpItem(_Character, _Item);
LeaderLib_Growth_Items_ItemTransformed(_Character, _Item, _ID, _Template, _TransformedFlag);

PROC
LeaderLib_Growth_Items_ItemTransformed((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_ID, (STRING)_TransformTemplate, (STRING)_TransformedFlag)
THEN
DB_NOOP(1);
//END_REGION

//REGION RESETTING_ITEMS
PROC
LeaderLib_Growth_Items_ResetEquippedItem((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetTemplate(_Item, _Template)
THEN
DB_LeaderLib_Growth_Items_Temp_EquipAfterTransform(_Character, _Item);
LeaderLib_Growth_Items_Internal_Transform_UnequipItem(_Character, _Item);
Transform(_Item, _Template);

PROC
LeaderLib_Growth_Items_ResetItemsByID((STRING)_ID)
AND
DB_LeaderLib_Growth_Items_TemplateID(_ModID, _ID, _Template)
AND
DB_IsPlayer(_Player)
AND
NOT LeaderLib_Growth_Items_QRY_ResetEquippedItems(_Player, _Template)
AND
GetItemForItemTemplateInInventory(_Player, _Template, _Item)
THEN
Transform(_Item, _Template);

QRY
LeaderLib_Growth_Items_QRY_ResetEquippedItems((CHARACTERGUID)_Character, (STRING)_Template)
AND
DB_LeaderLib_EquipmentSlots(_Slot)
AND
CharacterGetEquippedItem(_Character, _Slot, (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
LeaderLib_Helper_QRY_RemoveRunes(_Character, _Item)
AND
GetTemplate(_Item, _Template)
AND
ItemGetOwner(_Item, _Owner)
AND
GetPosition(_Character, _x, _y, _z)
AND
CreateItemTemplateAtPosition(_Template, _x, _y, _z, _NewItem)
THEN
ProcObjectTimer(_Item, "LeaderLib_Commands_RemoveItem", 50);
ItemSetOwner(_NewItem, _Owner);
LeaderLib_Growth_Items_Internal_Transform_EquipResetItem(_Character, _NewItem);

PROC
LeaderLib_Growth_Items_Internal_Transform_EquipResetItem((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
ObjectExists(_Item, 1)
AND
ObjectExists(_Character, 1)
THEN
CharacterEquipItem((CHARACTERGUID)_Character, (ITEMGUID)_Item);

PROC
LeaderLib_Growth_Items_Internal_Transform_EquipResetItem((CHARACTERGUID)_Character, (ITEMGUID)_NewItem)
AND
DB_LeaderLib_Growth_Items_Temp_ItemWasEquipped(_Character, _OldItem)
THEN
NOT DB_LeaderLib_Growth_Items_Temp_ItemWasEquipped(_Character, _OldItem);
//END_REGION

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
