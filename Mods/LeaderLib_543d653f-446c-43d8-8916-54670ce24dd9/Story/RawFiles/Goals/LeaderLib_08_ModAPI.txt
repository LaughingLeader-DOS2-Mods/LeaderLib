Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LeaderLib_ModApi_RegisterMenu(_ID, _DisplayName, _Dialog)
//DB_LeaderLib_ModApi_AddItemToLeaderTrader(_Template, _Amount)
//DB_LeaderLib_ModApi_AddBookToLeaderTrader(_Template, _Amount)
//DB_LeaderLib_ModApi_SendEvent(_EventName)
//DB_LeaderLib_ModApi_RegisterMod(_ModID, _Version, _Author)

//DB_LeaderLib_ModApi_Log_SetTarget(_Target)
//DB_LeaderLib_ModApi_Log_ClearTarget(_Target)
//DB_LeaderLib_ModApi_Log(_Type, _Str1)
//DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2)
//DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3)
//DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4)
//DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5)
//DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6)
//DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7)
//DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8)
//DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9)
//DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9, _Str10)
KBSECTION
//REGION DB_MODAPI
/*LeaderUpdater Registering*/
IF
DB_LeaderLib_ModApi_RegisterMod((STRING)_ModID, (STRING)_Author, (STRING)_Version)
THEN
LeaderUpdater_Register_Mod(_ModID, _Author, _Version);
NOT DB_LeaderLib_ModApi_RegisterMod(_ModID, _Author, _Version);

IF
DB_LeaderLib_ModApi_RegisterMod((STRING)_ModID, (STRING)_Author, (INTEGER)_Major, (INTEGER)_Minor, (INTEGER)_Revision, (INTEGER)_Build)
THEN
LeaderUpdater_Register_Mod(_ModID, _Author, _Major, _Minor, _Revision, _Build);
NOT DB_LeaderLib_ModApi_RegisterMod(_ModID, _Author, _Major, _Minor, _Revision, _Build);

IF
DB_LeaderLib_ModApi_RegisterMenu((STRING)_ID, (STRING)_DisplayName, (STRING)_Dialog, (STRING)_ModID, (STRING)_Author)
THEN
LeaderLib_Register_ModMenu(_ID, _DisplayName, _Dialog, _ModID, _Author);
NOT DB_LeaderLib_ModApi_RegisterMenu(_ID, _DisplayName, _Dialog, _ModID, _Author);

IF
DB_LeaderLib_ModApi_RegisterActiveGoal((STRING)_ModID, (STRING)_Author, (STRING)_GoalTitle)
THEN
LeaderUpdater_Register_ActiveGoal(_ModID, _Author, _GoalTitle);
NOT DB_LeaderLib_ModApi_RegisterActiveGoal(_ModID, _Author, _GoalTitle);

IF
DB_LeaderLib_ModApi_RegisterDatabase((STRING)_ModID, (STRING)_Author, (STRING)_ReferenceName, (STRING)_DatabaseName, (INTEGER)_Arity)
THEN
LeaderUpdater_Register_Database(_ModID, _Author, _ReferenceName, _DatabaseName, _Arity);
NOT DB_LeaderLib_ModApi_RegisterDatabase(_ModID, _Author, _ReferenceName, _DatabaseName, _Arity);

IF
DB_LeaderLib_ModApi_RegisterGoal((STRING)_ModID, (STRING)_Author, (STRING)_GoalTitle)
THEN
LeaderUpdater_Register_Goal(_ModID, _Author, _GoalTitle);
NOT DB_LeaderLib_ModApi_RegisterGoal(_ModID, _Author, _GoalTitle);

/*Presets*/
IF
DB_LeaderLib_ModApi_RegisterPreset((STRING)_Preset, (STRING)_DisplayName, (STRING)_EnabledGlobalFlag)
THEN
LeaderLib_PresetMenu_RegisterPreset(_Preset, _DisplayName, _EnabledGlobalFlag);
NOT DB_LeaderLib_ModApi_RegisterPreset(_Preset, _DisplayName, _EnabledGlobalFlag);
/*Presets*/

IF
DB_LeaderLib_ModApi_RegisterPreset((STRING)_Group, (STRING)_Preset, (STRING)_DisplayName, (STRING)_EnabledGlobalFlag)
THEN
LeaderLib_PresetMenu_RegisterPreset(_Group, _Preset, _DisplayName, _EnabledGlobalFlag);
NOT DB_LeaderLib_ModApi_RegisterPreset(_Group, _Preset, _DisplayName, _EnabledGlobalFlag);

/*Clear Commands*/
IF
DB_LeaderLib_ModApi_ClearRegisteredModVersions((STRING)_ModID, (STRING)_Author)
THEN
LeaderUpdater_Clear_RegisteredModVersions(_ModID, _Author);
NOT DB_LeaderLib_ModApi_ClearRegisteredModVersions(_ModID, _Author);

IF
DB_LeaderLib_ModApi_ClearActiveGoals((STRING)_ModID, (STRING)_Author)
THEN
LeaderUpdater_Clear_ActiveGoals(_ModID, _Author);
NOT DB_LeaderLib_ModApi_ClearActiveGoals(_ModID, _Author);

IF
DB_LeaderLib_ModApi_SysClearAllDatabases((STRING)_ModID, (STRING)_Author)
THEN
LeaderUpdater_SysClear_AllDatabases(_ModID, _Author);
NOT DB_LeaderLib_ModApi_SysClearAllDatabases(_ModID, _Author);

IF
DB_LeaderLib_ModApi_ResetAllGoals((STRING)_ModID, (STRING)_Author)
THEN
LeaderUpdater_Reset_AllGoals(_ModID, _Author);
NOT DB_LeaderLib_ModApi_ResetAllGoals(_ModID, _Author);

/*Misc Commands*/
IF
DB_LeaderLib_ModApi_AddItemToLeaderTrader((STRING)_Template, (INTEGER)_Amount)
THEN
LeaderLib_Treasure_Register_ItemTemplate("LeaderLib.LeaderTrader.ModItems", _Template, _Amount);
NOT DB_LeaderLib_ModApi_AddItemToLeaderTrader(_Template, _Amount);

IF
DB_LeaderLib_ModApi_AddBookToLeaderTrader((STRING)_Template, (INTEGER)_Amount)
THEN
LeaderLib_Treasure_Register_ItemTemplate("LeaderLib.LeaderTrader.ModBooks", _Template, _Amount);
NOT DB_LeaderLib_ModApi_AddBookToLeaderTrader(_Template, _Amount);

IF
DB_LeaderLib_ModApi_SendEvent((STRING)_EventName)
THEN
LeaderLib_EventParser_Internal_RunEvent(_EventName);
NOT DB_LeaderLib_ModApi_SendEvent(_EventName);

IF
DB_LeaderLib_ModApi_ModIsActive((STRING)_ModID, (STRING)_Author, (STRING)_ActiveEvent, (STRING)_InactiveEvent)
THEN
LeaderUpdater_CheckIfModIsActive(_ModID, _Author, _ActiveEvent, _InactiveEvent);
NOT DB_LeaderLib_ModApi_ModIsActive(_ModID, _Author, _ActiveEvent, _InactiveEvent);

/*Sorting*/
IF
DB_LeaderLib_ModApi_AddToSortQueue((STRING)_DictionaryID, (STRING)_ID, (STRING)_String)
THEN
LeaderLib_DictionarySort_AddString(_DictionaryID, _ID, _String);
NOT DB_LeaderLib_ModApi_AddToSortQueue(_DictionaryID, _ID, _String);

IF
DB_LeaderLib_ModApi_StartSortQueue((STRING)_DictionaryID, (INTEGER)_TickRate, (STRING)_CompleteEvent)
THEN
LeaderLib_DictionarySort_StartSorting(_DictionaryID, _TickRate, _CompleteEvent);
NOT DB_LeaderLib_ModApi_StartSortQueue(_DictionaryID, _TickRate, _CompleteEvent);
//END_REGION

//REGION TREASURE_REGISTERING
IF
DB_LeaderLib_ModApi_Register_TreasureTable((STRING)_TreasureID, (STRING)_TreasureTable)
THEN
LeaderLib_Treasure_Register_TreasureTable(_TreasureID, _TreasureTable);
NOT DB_LeaderLib_ModApi_Register_TreasureTable(_TreasureID, _TreasureTable);

IF
DB_LeaderLib_ModApi_Register_TreasureTable((STRING)_TreasureID, (STRING)_TreasureTable, (STRING)_RequirementID)
THEN
LeaderLib_Treasure_Register_TreasureTable(_TreasureID, _TreasureTable, _RequirementID);
NOT DB_LeaderLib_ModApi_Register_TreasureTable(_TreasureID, _TreasureTable, _RequirementID);

IF
DB_LeaderLib_ModApi_Register_TreasureTable((STRING)_TreasureID, (STRING)_TreasureTable, (STRING)_RequirementID, (INTEGER)_UsePartyLevel)
THEN
LeaderLib_Treasure_Register_TreasureTable(_TreasureID, _TreasureTable, _RequirementID, _UsePartyLevel);
NOT DB_LeaderLib_ModApi_Register_TreasureTable(_TreasureID, _TreasureTable, _RequirementID, _UsePartyLevel);

IF
DB_LeaderLib_ModApi_Register_TreasureTable((STRING)_TreasureID, (STRING)_TreasureTable, (STRING)_RequirementID, (INTEGER)_UsePartyLevel, (INTEGER)_Level)
THEN
LeaderLib_Treasure_Register_TreasureTable(_TreasureID, _TreasureTable, _RequirementID, _UsePartyLevel, _Level);
NOT DB_LeaderLib_ModApi_Register_TreasureTable(_TreasureID, _TreasureTable, _RequirementID, _UsePartyLevel, _Level);

IF
DB_LeaderLib_ModApi_Register_TreasureTable((STRING)_TreasureID, (STRING)_TreasureTable, (STRING)_RequirementID, (INTEGER)_UsePartyLevel, (INTEGER)_MinLevel, (INTEGER)_MaxLevel)
THEN
LeaderLib_Treasure_Register_TreasureTable(_TreasureID, _TreasureTable, _RequirementID, _UsePartyLevel, _MinLevel, _MaxLevel);
NOT DB_LeaderLib_ModApi_Register_TreasureTable(_TreasureID, _TreasureTable, _RequirementID, _UsePartyLevel, _MinLevel, _MaxLevel);
//END_REGION

//REGION LOGGING
IF
DB_LeaderLib_ModApi_Log_SetTarget((CHARACTERGUID)_Target)
THEN
LeaderLog_SetTarget(_Target);
NOT DB_LeaderLib_ModApi_Log_SetTarget(_Target);

IF
DB_LeaderLib_ModApi_Log_ClearTarget((CHARACTERGUID)_Target)
THEN
LeaderLog_ClearTarget(_Target);
NOT DB_LeaderLib_ModApi_Log_ClearTarget(_Target);

IF
DB_LeaderLib_ModApi_Log((STRING)_Type, (STRING)_Str1)
THEN
LeaderLog_Log(_Type, _Str1);
NOT DB_LeaderLib_ModApi_Log(_Type, _Str1);

IF
DB_LeaderLib_ModApi_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2)
THEN
LeaderLog_Log(_Type, _Str1, _Str2);
NOT DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2);

IF
DB_LeaderLib_ModApi_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3);
NOT DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3);

IF
DB_LeaderLib_ModApi_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4);
NOT DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4);

IF
DB_LeaderLib_ModApi_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5);
NOT DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5);

IF
DB_LeaderLib_ModApi_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6);
NOT DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6);

IF
DB_LeaderLib_ModApi_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7);
NOT DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7);

IF
DB_LeaderLib_ModApi_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8);
NOT DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8);

IF
DB_LeaderLib_ModApi_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9);
NOT DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9);

IF
DB_LeaderLib_ModApi_Log((STRING)_Type, (STRING)_Str1, (STRING)_Str2, (STRING)_Str3, (STRING)_Str4, (STRING)_Str5, (STRING)_Str6, (STRING)_Str7, (STRING)_Str8, (STRING)_Str9, (STRING)_Str10)
THEN
LeaderLog_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9, _Str10);
NOT DB_LeaderLib_ModApi_Log(_Type, _Str1, _Str2, _Str3, _Str4, _Str5, _Str6, _Str7, _Str8, _Str9, _Str10);
//END_REGION

//REGION GLOBAL_SETTINGS
IF
DB_LeaderLib_ModApi_GlobalSettings_Register_Flag((STRING)_ModID, (STRING)_Author, (STRING)_Name)
THEN
LeaderLib_GlobalSettings_Register_Flag(_ModID, _Author, _Name);
NOT DB_LeaderLib_ModApi_GlobalSettings_Register_Flag(_ModID, _Author, _Name);

IF
DB_LeaderLib_ModApi_GlobalSettings_Register_Flag((STRING)_ModID, (STRING)_Author, (STRING)_Name, (INTEGER)_SaveWhenFalse)
THEN
LeaderLib_GlobalSettings_Register_Flag(_ModID, _Author, _Name, _SaveWhenFalse);
NOT DB_LeaderLib_ModApi_GlobalSettings_Register_Flag(_ModID, _Author, _Name, _SaveWhenFalse);

IF
DB_LeaderLib_ModApi_GlobalSettings_Register_Integer((STRING)_ModID, (STRING)_Author, (STRING)_Name)
THEN
LeaderLib_GlobalSettings_Register_Integer(_ModID, _Author, _Name);
NOT DB_LeaderLib_ModApi_GlobalSettings_Register_Integer(_ModID, _Author, _Name);

IF
DB_LeaderLib_ModApi_GlobalSettings_Register_Integer((STRING)_ModID, (STRING)_Author, (STRING)_Name, (INTEGER)_DefaultValue)
THEN
LeaderLib_GlobalSettings_Register_Integer(_ModID, _Author, _Name, _DefaultValue);
NOT DB_LeaderLib_ModApi_GlobalSettings_Register_Integer(_ModID, _Author, _Name, _DefaultValue);

IF
DB_LeaderLib_ModApi_GlobalSettings_SaveIntegerVariable((STRING)_ModID, (STRING)_Author, (STRING)_Name, (INTEGER)_Value)
THEN
LeaderLib_GlobalSettings_SaveIntegerVariable(_ModID, _Author, _Name, _Value);
NOT DB_LeaderLib_ModApi_GlobalSettings_SaveIntegerVariable(_ModID, _Author, _Name, _Value);
//END_REGION

//REGION CLEANUP
IF
StoryEvent(_,"LeaderLib_Initialized")
THEN
TimerLaunch("LeaderLib_Timers_LeaderLib_ModApiCleanup", 500);

/* In the event that any of these databases were set without LeaderLib installed, run through them again. */
IF
TimerFinished("LeaderLib_Timers_LeaderLib_ModApiCleanup")
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:ModAPI] ModApi cleanup started. Running ModAPI databases.");
LeaderLib_ModApi_RunCleanup();

PROC
LeaderLib_ModApi_RunCleanup()
THEN
//Clear logs that are still remaining
SysClear("DB_LeaderLib_ModApi_Log_SetTarget", 1);
SysClear("DB_LeaderLib_ModApi_Log_ClearTarget", 1);
SysClear("DB_LeaderLib_ModApi_Log", 2);
SysClear("DB_LeaderLib_ModApi_Log", 3);
SysClear("DB_LeaderLib_ModApi_Log", 4);
SysClear("DB_LeaderLib_ModApi_Log", 5);
SysClear("DB_LeaderLib_ModApi_Log", 6);
SysClear("DB_LeaderLib_ModApi_Log", 7);
SysClear("DB_LeaderLib_ModApi_Log", 8);
SysClear("DB_LeaderLib_ModApi_Log", 9);
SysClear("DB_LeaderLib_ModApi_Log", 10);
SysClear("DB_LeaderLib_ModApi_Log", 11);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
