Version 1
SubGoalCombiner SGC_AND
INITSECTION
LeaderLib_Settings_InitSettings();

//DB_LeaderLib_EquipmentSlots(_Slot)
//DB_LeaderLib_Settings_ItemTemplates(_Name, _ItemTemplate)
//DB_LeaderLib_Settings_DialogVariables(_VariableName, _VariableValue)
//DB_LeaderLib_Settings_QueueRates(_ReferenceName, _TickRate, _TimeoutRate)
//DB_LeaderLib_Settings_Temp_RegisteredModsList(_Str)
//DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _Str)
KBSECTION
//REGION SETTINGS
PROC
LeaderLib_Settings_InitSettings()
AND
DB_LeaderLib_Settings_Initialized(1)
THEN
NOT DB_LeaderLib_Settings_Initialized(1);

PROC
LeaderLib_Settings_InitSettings()
THEN
LeaderLib_PresetMenu_InitSettings();
LeaderLib_Settings_InitEquipmentSlots();
LeaderLib_Settings_InitTalents();
LeaderLib_Settings_InitStats();
LeaderLib_Settings_InitSurfaces();
LeaderLib_Settings_InitSkillData();
LeaderLib_Settings_InitDamageData();
LeaderLib_Settings_InitRaceData();
LeaderLib_Settings_InitStatusData();
LeaderLib_Settings_InitCCData();
LeaderLib_Settings_InitRuneSlotHelperData();
LeaderLib_Settings_InitForceHelperData();
LeaderLib_Settings_InitMathValues();
LeaderLib_Settings_InitStarterSkills();
LeaderLib_GlobalSettings_Internal_Init();

SysClear("DB_LeaderLib_Settings_QueueRates", 3);
DB_LeaderLib_Settings_QueueRates("TraderSpawn", 500, 2000);
DB_LeaderLib_Settings_QueueRates("TraderCheck", 100, 500);
DB_LeaderLib_Settings_QueueRates("Treasure", 100, 60000);
DB_LeaderLib_Settings_QueueRates("ItemGeneration", 0, 5000);

SysClear("DB_LeaderLib_Settings_ItemTemplates", 2);
DB_LeaderLib_Settings_ItemTemplates("Book_ModMenu", "BOOK_LeaderLib_ModMenu_646a1194-3383-47fa-a379-ebefa3d2b108");

SysClear("DB_LeaderLib_Settings_DialogVariables", 2);
DB_LeaderLib_Settings_DialogVariables("PlayerName", "LeaderLib_PlayerName_6c5b9559-53e3-47f7-8881-309a930e4be3");
DB_LeaderLib_Settings_DialogVariables("SpeakerName", "LeaderLib_SpeakerName_9fc648d4-7984-44e7-afa4-b8a07f21185b");
DB_LeaderLib_Settings_DialogVariables("ModMenu_PageInfo", "LeaderLib_ModMenu_PageInfo_2b744313-9239-412c-80a8-f3b5e8b56156");
DB_LeaderLib_Settings_DialogVariables("ModList", "LeaderLib_Settings_ModList_50c55fbe-ad1e-490e-92d1-8836ca42ca12");
DB_LeaderLib_Settings_DialogVariables("CurrentAutosaveInterval", "LeaderLib_AutosaveMenu_CurrentSettings_b48918b6-4864-4aae-88fd-53d658ccb082");

//Bartering Tweaks
DB_LLBARTER_DialogBlacklist("LeaderLib", "LeaderLib_ModMenu");
DB_LLBARTER_DialogBlacklist("LeaderLib", "LeaderLib_AutosaveMenu");
DB_LLBARTER_DialogBlacklist("LeaderLib", "LeaderLib_CommandsMenu");
DB_LLBARTER_DialogBlacklist("LeaderLib", "LeaderLib_PresetMenu");
DB_LLBARTER_DialogBlacklist("LeaderLib", "LeaderLib_SettingsMenu");

//Dummies
//Crime stuff is ignored when something attacks a dummy
DB_NeutralTagIgnore("LeaderLib_Dummy");

LeaderLib_Settings_SettingsInitialized();

//Proc for other mods to call to register LeaderLib data
PROC
LeaderLib_Settings_SettingsInitialized()
THEN
DB_LeaderLib_Settings_Initialized(1);

PROC
LeaderLib_Settings_InitSkillData()
AND
NOT DB_LeaderLib_RacialSkills(_,_)
THEN
DB_LeaderLib_RacialSkills("DWARF", "Target_PetrifyingTouch");
DB_LeaderLib_RacialSkills("ELF", "Shout_FleshSacrifice");
DB_LeaderLib_RacialSkills("HUMAN", "Shout_InspireStart");
DB_LeaderLib_RacialSkills("LIZARD", "Cone_Flamebreath");
DB_LeaderLib_RacialSkills("UNDEAD_DWARF", "Shout_PlayDead");
DB_LeaderLib_RacialSkills("UNDEAD_ELF", "Shout_PlayDead");
DB_LeaderLib_RacialSkills("UNDEAD_HUMAN", "Shout_PlayDead");
DB_LeaderLib_RacialSkills("UNDEAD_LIZARD", "Shout_PlayDead");

PROC
LeaderLib_Settings_InitSkillData()
AND
NOT DB_LeaderLib_OriginSkills(_,_)
THEN
DB_LeaderLib_OriginSkills("IFAN", "Summon_SoulWolf");
DB_LeaderLib_OriginSkills("LOHSE", "Target_MaddeningSong");
DB_LeaderLib_OriginSkills("REDPRINCE", "Target_DemonicStare");
DB_LeaderLib_OriginSkills("SEBILLE", "Shout_BreakTheShackles");
DB_LeaderLib_OriginSkills("BEAST", "Target_Squall");
DB_LeaderLib_OriginSkills("FANE", "Target_TimeWarp");
DB_LeaderLib_OriginSkills("GENERIC", "Dome_CircleOfProtection");

PROC
LeaderLib_Settings_InitEquipmentSlots()
AND
NOT DB_LeaderLib_EquipmentSlots(_)
THEN
DB_LeaderLib_EquipmentSlots("Weapon");
DB_LeaderLib_EquipmentSlots("Shield");
DB_LeaderLib_EquipmentSlots("Helmet");
DB_LeaderLib_EquipmentSlots("Breast");
DB_LeaderLib_EquipmentSlots("Leggings");
DB_LeaderLib_EquipmentSlots("Ring");
DB_LeaderLib_EquipmentSlots("Belt");
DB_LeaderLib_EquipmentSlots("Boots");
DB_LeaderLib_EquipmentSlots("Gloves");
DB_LeaderLib_EquipmentSlots("Amulet");
DB_LeaderLib_EquipmentSlots("Ring2");

PROC
LeaderLib_Settings_InitEquipmentSlots()
AND
LeaderLib_Array_QRY_EmptyLength("LeaderLib_EquipmentSlots")
AND
DB_LeaderLib_EquipmentSlots(_Slot)
THEN
LeaderLib_Array_AddToArray("LeaderLib_EquipmentSlots", _Slot);

PROC
LeaderLib_Settings_InitStats()
AND
NOT DB_LeaderLib_Attributes(_)
THEN
DB_LeaderLib_Attributes("Strength");
DB_LeaderLib_Attributes("Finesse");
DB_LeaderLib_Attributes("Intelligence");
DB_LeaderLib_Attributes("Constitution");
DB_LeaderLib_Attributes("Memory");
DB_LeaderLib_Attributes("Wits");

PROC
LeaderLib_Settings_InitStats()
AND
NOT DB_LeaderLib_Abilities(_)
THEN
DB_LeaderLib_Abilities("WarriorLore");
DB_LeaderLib_Abilities("RangerLore");
DB_LeaderLib_Abilities("RogueLore");
DB_LeaderLib_Abilities("SingleHanded");
DB_LeaderLib_Abilities("TwoHanded");
DB_LeaderLib_Abilities("Reflection");
DB_LeaderLib_Abilities("Ranged");
DB_LeaderLib_Abilities("Shield");
DB_LeaderLib_Abilities("Reflexes");
DB_LeaderLib_Abilities("PhysicalArmorMastery");
DB_LeaderLib_Abilities("Sourcery");
DB_LeaderLib_Abilities("Telekinesis");
DB_LeaderLib_Abilities("FireSpecialist");
DB_LeaderLib_Abilities("WaterSpecialist");
DB_LeaderLib_Abilities("AirSpecialist");
DB_LeaderLib_Abilities("EarthSpecialist");
DB_LeaderLib_Abilities("Necromancy");
DB_LeaderLib_Abilities("Summoning");
DB_LeaderLib_Abilities("Polymorph");
DB_LeaderLib_Abilities("Repair");
DB_LeaderLib_Abilities("Sneaking");
DB_LeaderLib_Abilities("Pickpocket");
DB_LeaderLib_Abilities("Thievery");
DB_LeaderLib_Abilities("Loremaster");
DB_LeaderLib_Abilities("Crafting");
DB_LeaderLib_Abilities("Barter");
DB_LeaderLib_Abilities("Charm");
DB_LeaderLib_Abilities("Intimidate");
DB_LeaderLib_Abilities("Reason");
DB_LeaderLib_Abilities("Persuasion");
DB_LeaderLib_Abilities("Leadership");
DB_LeaderLib_Abilities("Luck");
DB_LeaderLib_Abilities("DualWielding");
DB_LeaderLib_Abilities("Wand");
DB_LeaderLib_Abilities("MagicArmorMastery");
DB_LeaderLib_Abilities("VitalityMastery");
DB_LeaderLib_Abilities("Perseverance");
DB_LeaderLib_Abilities("Runecrafting");
DB_LeaderLib_Abilities("Brewmaster");

PROC
LeaderLib_Settings_Internal_UpdateTalents()
THEN
SysClear("DB_LeaderLib_Talents", 1);
SysClear("DB_LeaderLib_RaceTalents", 1);
SysClear("DB_LeaderLib_QuestTalents", 1);
LeaderLib_Settings_InitTalents();

PROC
LeaderLib_Settings_InitTalents()
AND
NOT DB_LeaderLib_Talents(_)
THEN
DB_LeaderLib_Talents("ActionPoints2");
DB_LeaderLib_Talents("ActionPoints");
DB_LeaderLib_Talents("AirSpells");
DB_LeaderLib_Talents("Ambidextrous");
DB_LeaderLib_Talents("AnimalEmpathy");
DB_LeaderLib_Talents("AttackOfOpportunity");
DB_LeaderLib_Talents("AvoidDetection");
DB_LeaderLib_Talents("Awareness");
DB_LeaderLib_Talents("Backstab");
DB_LeaderLib_Talents("Beastmaster");
DB_LeaderLib_Talents("Bully");
DB_LeaderLib_Talents("Carry");
DB_LeaderLib_Talents("ChanceToHitMelee");
DB_LeaderLib_Talents("ChanceToHitRanged");
DB_LeaderLib_Talents("Charm");
DB_LeaderLib_Talents("Courageous");
DB_LeaderLib_Talents("Criticals");
DB_LeaderLib_Talents("Damage");
DB_LeaderLib_Talents("Demon");
DB_LeaderLib_Talents("DualWieldingBlock");
DB_LeaderLib_Talents("DualWieldingDodging");
DB_LeaderLib_Talents("Durability");
DB_LeaderLib_Talents("EarthSpells");
DB_LeaderLib_Talents("ElementalAffinity");
DB_LeaderLib_Talents("ElementalRanger");
DB_LeaderLib_Talents("Escapist");
DB_LeaderLib_Talents("Executioner");
DB_LeaderLib_Talents("ExpGain");
DB_LeaderLib_Talents("ExtraSkillPoints");
DB_LeaderLib_Talents("ExtraStatPoints");
DB_LeaderLib_Talents("ExtraWandCharge");
DB_LeaderLib_Talents("FaroutDude");
DB_LeaderLib_Talents("FireSpells");
DB_LeaderLib_Talents("FiveStarRestaurant");
DB_LeaderLib_Talents("Flanking");
DB_LeaderLib_Talents("FolkDancer");
DB_LeaderLib_Talents("GoldenMage");
DB_LeaderLib_Talents("IceKing");
DB_LeaderLib_Talents("IncreasedArmor");
DB_LeaderLib_Talents("Initiative");
DB_LeaderLib_Talents("Intimidate");
DB_LeaderLib_Talents("InventoryAccess");
DB_LeaderLib_Talents("ItemCreation");
DB_LeaderLib_Talents("ItemMovement");
DB_LeaderLib_Talents("Kickstarter");
DB_LeaderLib_Talents("Leech");
DB_LeaderLib_Talents("LightStep");
DB_LeaderLib_Talents("LightningRod");
DB_LeaderLib_Talents("LivingArmor");
DB_LeaderLib_Talents("Lockpick");
DB_LeaderLib_Talents("LoneWolf");
DB_LeaderLib_Talents("Luck");
DB_LeaderLib_Talents("Memory");
DB_LeaderLib_Talents("MrKnowItAll");
DB_LeaderLib_Talents("NaturalConductor");
DB_LeaderLib_Talents("NoAttackOfOpportunity");
DB_LeaderLib_Talents("Perfectionist");
DB_LeaderLib_Talents("Politician");
DB_LeaderLib_Talents("QuickStep");
DB_LeaderLib_Talents("Raistlin");
DB_LeaderLib_Talents("RangerLoreArrowRecover");
DB_LeaderLib_Talents("RangerLoreEvasionBonus");
DB_LeaderLib_Talents("RangerLoreRangedAPBonus");
DB_LeaderLib_Talents("Reason");
DB_LeaderLib_Talents("Repair");
DB_LeaderLib_Talents("ResistDead");
DB_LeaderLib_Talents("ResistFear");
DB_LeaderLib_Talents("ResistKnockdown");
DB_LeaderLib_Talents("ResistPoison");
DB_LeaderLib_Talents("ResistSilence");
DB_LeaderLib_Talents("ResistStun");
DB_LeaderLib_Talents("ResurrectExtraHealth");
DB_LeaderLib_Talents("ResurrectToFullHealth");
DB_LeaderLib_Talents("RogueLoreDaggerAPBonus");
DB_LeaderLib_Talents("RogueLoreDaggerBackStab");
DB_LeaderLib_Talents("RogueLoreGrenadePrecision");
DB_LeaderLib_Talents("RogueLoreHoldResistance");
DB_LeaderLib_Talents("RogueLoreMovementBonus");
DB_LeaderLib_Talents("Scientist");
DB_LeaderLib_Talents("Sight");
DB_LeaderLib_Talents("SpillNoBlood");
DB_LeaderLib_Talents("StandYourGround");
DB_LeaderLib_Talents("Stench");
DB_LeaderLib_Talents("SurpriseAttack");
DB_LeaderLib_Talents("Throwing");
DB_LeaderLib_Talents("Torturer");
DB_LeaderLib_Talents("Trade");
DB_LeaderLib_Talents("Unstable");
DB_LeaderLib_Talents("ViolentMagic");
DB_LeaderLib_Talents("Vitalty");
DB_LeaderLib_Talents("WalkItOff");
DB_LeaderLib_Talents("WandCharge");
DB_LeaderLib_Talents("WarriorLoreGrenadeRange");
DB_LeaderLib_Talents("WarriorLoreNaturalArmor");
DB_LeaderLib_Talents("WarriorLoreNaturalHealth");
DB_LeaderLib_Talents("WarriorLoreNaturalResistance");
DB_LeaderLib_Talents("WaterSpells");
DB_LeaderLib_Talents("WeatherProof");
DB_LeaderLib_Talents("WhatARush");

PROC
LeaderLib_Settings_InitTalents()
AND
NOT DB_LeaderLib_RaceTalents(_)
THEN
//Racial Talents
DB_LeaderLib_RaceTalents("Dwarf_Sneaki");
DB_LeaderLib_RaceTalents("Dwarf_Strength");
DB_LeaderLib_RaceTalents("Elf_CorpseEating");
DB_LeaderLib_RaceTalents("Elf_Finesse");
DB_LeaderLib_RaceTalents("Human_Civil");
DB_LeaderLib_RaceTalents("Human_Wits");
DB_LeaderLib_RaceTalents("Lizard_Intelligence");
DB_LeaderLib_RaceTalents("Lizard_Persuasion");
DB_LeaderLib_RaceTalents("Zombie");

PROC
LeaderLib_Settings_InitTalents()
AND
NOT DB_LeaderLib_QuestTalents(_)
THEN
DB_LeaderLib_QuestTalents("Quest_GhostTree");
DB_LeaderLib_QuestTalents("Quest_SpidersKiss_Int");
DB_LeaderLib_QuestTalents("Quest_SpidersKiss_Null");
DB_LeaderLib_QuestTalents("Quest_SpidersKiss_Per");
DB_LeaderLib_QuestTalents("Quest_SpidersKiss_Str");
DB_LeaderLib_QuestTalents("Quest_TradeSecrets");
DB_LeaderLib_QuestTalents("Quest_Rooted");
//END_REGION

//REGION SURFACES
PROC
LeaderLib_Settings_InitSurfaces()
AND
NOT DB_LeaderLib_SurfaceToInt(_,_)
THEN
DB_LeaderLib_SurfaceToInt("SurfaceNone", -1);
DB_LeaderLib_SurfaceToInt("SurfaceFire", 0);
DB_LeaderLib_SurfaceToInt("SurfaceFireBlessed", 1);
DB_LeaderLib_SurfaceToInt("SurfaceFireCursed", 2);
DB_LeaderLib_SurfaceToInt("SurfaceFirePurified", 3);
DB_LeaderLib_SurfaceToInt("SurfaceWater", 4);
DB_LeaderLib_SurfaceToInt("SurfaceWaterElectrified", 5);
DB_LeaderLib_SurfaceToInt("SurfaceWaterFrozen", 6);
DB_LeaderLib_SurfaceToInt("SurfaceWaterBlessed", 7);
DB_LeaderLib_SurfaceToInt("SurfaceWaterElectrifiedBlessed", 8);
DB_LeaderLib_SurfaceToInt("SurfaceWaterFrozenBlessed", 9);
DB_LeaderLib_SurfaceToInt("SurfaceWaterCursed", 10);
DB_LeaderLib_SurfaceToInt("SurfaceWaterElectrifiedCursed", 11);
DB_LeaderLib_SurfaceToInt("SurfaceWaterFrozenCursed", 12);
DB_LeaderLib_SurfaceToInt("SurfaceWaterPurified", 13);
DB_LeaderLib_SurfaceToInt("SurfaceWaterElectrifiedPurified", 14);
DB_LeaderLib_SurfaceToInt("SurfaceWaterFrozenPurified", 15);
DB_LeaderLib_SurfaceToInt("SurfaceBlood", 16);
DB_LeaderLib_SurfaceToInt("SurfaceBloodElectrified", 17);
DB_LeaderLib_SurfaceToInt("SurfaceBloodFrozen", 18);
DB_LeaderLib_SurfaceToInt("SurfaceBloodBlessed", 19);
DB_LeaderLib_SurfaceToInt("SurfaceBloodElectrifiedBlessed", 20);
DB_LeaderLib_SurfaceToInt("SurfaceBloodFrozenBlessed", 21);
DB_LeaderLib_SurfaceToInt("SurfaceBloodCursed", 22);
DB_LeaderLib_SurfaceToInt("SurfaceBloodElectrifiedCursed", 23);
DB_LeaderLib_SurfaceToInt("SurfaceBloodFrozenCursed", 24);
DB_LeaderLib_SurfaceToInt("SurfaceBloodPurified", 25);
DB_LeaderLib_SurfaceToInt("SurfaceBloodElectrifiedPurified", 26);
DB_LeaderLib_SurfaceToInt("SurfaceBloodFrozenPurified", 27);
DB_LeaderLib_SurfaceToInt("SurfacePoison", 28);
DB_LeaderLib_SurfaceToInt("SurfacePoisonBlessed", 29);
DB_LeaderLib_SurfaceToInt("SurfacePoisonCursed", 30);
DB_LeaderLib_SurfaceToInt("SurfacePoisonPurified", 31);
DB_LeaderLib_SurfaceToInt("SurfaceOil", 32);
DB_LeaderLib_SurfaceToInt("SurfaceOilBlessed", 33);
DB_LeaderLib_SurfaceToInt("SurfaceOilCursed", 34);
DB_LeaderLib_SurfaceToInt("SurfaceOilPurified", 35);
DB_LeaderLib_SurfaceToInt("SurfaceLava", 36);
DB_LeaderLib_SurfaceToInt("SurfaceSource", 37);
DB_LeaderLib_SurfaceToInt("SurfaceWeb", 38);
DB_LeaderLib_SurfaceToInt("SurfaceWebBlessed", 39);
DB_LeaderLib_SurfaceToInt("SurfaceWebCursed", 40);
DB_LeaderLib_SurfaceToInt("SurfaceWebPurified", 41);
DB_LeaderLib_SurfaceToInt("SurfaceDeepwater", 42);
DB_LeaderLib_SurfaceToInt("SurfaceFireCloud", 47);
DB_LeaderLib_SurfaceToInt("SurfaceFireCloudBlessed", 48);
DB_LeaderLib_SurfaceToInt("SurfaceFireCloudCursed", 49);
DB_LeaderLib_SurfaceToInt("SurfaceFireCloudPurified", 50);
DB_LeaderLib_SurfaceToInt("SurfaceWaterCloud", 51);
DB_LeaderLib_SurfaceToInt("SurfaceWaterCloudElectrified", 52);
DB_LeaderLib_SurfaceToInt("SurfaceWaterCloudBlessed", 53);
DB_LeaderLib_SurfaceToInt("SurfaceWaterCloudElectrifiedBlessed", 54);
DB_LeaderLib_SurfaceToInt("SurfaceWaterCloudCursed", 55);
DB_LeaderLib_SurfaceToInt("SurfaceWaterCloudElectrifiedCursed", 56);
DB_LeaderLib_SurfaceToInt("SurfaceWaterCloudPurified", 57);
DB_LeaderLib_SurfaceToInt("SurfaceWaterCloudElectrifiedPurified", 58);
DB_LeaderLib_SurfaceToInt("SurfaceBloodCloud", 59);
DB_LeaderLib_SurfaceToInt("SurfaceBloodCloudElectrified", 60);
DB_LeaderLib_SurfaceToInt("SurfaceBloodCloudBlessed", 61);
DB_LeaderLib_SurfaceToInt("SurfaceBloodCloudElectrifiedBlessed", 62);
DB_LeaderLib_SurfaceToInt("SurfaceBloodCloudCursed", 63);
DB_LeaderLib_SurfaceToInt("SurfaceBloodCloudElectrifiedCursed", 64);
DB_LeaderLib_SurfaceToInt("SurfaceBloodCloudPurified", 65);
DB_LeaderLib_SurfaceToInt("SurfaceBloodCloudElectrifiedPurified", 66);
DB_LeaderLib_SurfaceToInt("SurfacePoisonCloud", 67);
DB_LeaderLib_SurfaceToInt("SurfacePoisonCloudBlessed", 68);
DB_LeaderLib_SurfaceToInt("SurfacePoisonCloudCursed", 69);
DB_LeaderLib_SurfaceToInt("SurfacePoisonCloudPurified", 70);
DB_LeaderLib_SurfaceToInt("SurfaceSmokeCloud", 71);
DB_LeaderLib_SurfaceToInt("SurfaceSmokeCloudBlessed", 72);
DB_LeaderLib_SurfaceToInt("SurfaceSmokeCloudCursed", 73);
DB_LeaderLib_SurfaceToInt("SurfaceSmokeCloudPurified", 74);
DB_LeaderLib_SurfaceToInt("SurfaceExplosionCloud", 75);
DB_LeaderLib_SurfaceToInt("SurfaceFrostCloud", 76);
DB_LeaderLib_SurfaceToInt("SurfaceDeathfogCloud", 77);

PROC
LeaderLib_Settings_InitSurfaces()
AND
NOT DB_LeaderLib_Surfaces(_,_)
THEN
LeaderLib_Settings_RegisterSurface("SurfaceNone", "None");
LeaderLib_Settings_RegisterSurface("SurfaceFire", "Ground", "Standard");
LeaderLib_Settings_RegisterSurface("SurfaceFireBlessed", "Ground", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfaceFireCursed", "Ground", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfaceFirePurified", "Ground", "Purified");
LeaderLib_Settings_RegisterSurface("SurfaceWater", "Ground", "Standard");
LeaderLib_Settings_RegisterSurface("SurfaceWaterElectrified", "Ground", "Standard", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceWaterFrozen", "Ground", "Standard");
LeaderLib_Settings_RegisterSurface("SurfaceWaterBlessed", "Ground", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfaceWaterElectrifiedBlessed", "Ground", "Blessed", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceWaterFrozenBlessed", "Ground", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfaceWaterCursed", "Ground", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfaceWaterElectrifiedCursed", "Ground", "Cursed", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceWaterFrozenCursed", "Ground", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfaceWaterPurified", "Ground", "Purified");
LeaderLib_Settings_RegisterSurface("SurfaceWaterElectrifiedPurified", "Ground", "Purified", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceWaterFrozenPurified", "Ground", "Purified");
LeaderLib_Settings_RegisterSurface("SurfaceBlood", "Ground", "Standard", "BloodStandard");
LeaderLib_Settings_RegisterSurface("SurfaceBloodElectrified", "Ground", "Electrified", "BloodStandard");
LeaderLib_Settings_RegisterSurface("SurfaceBloodFrozen", "Ground", "BloodStandard");
LeaderLib_Settings_RegisterSurface("SurfaceBloodBlessed", "Ground", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfaceBloodElectrifiedBlessed", "Ground", "Blessed", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceBloodFrozenBlessed", "Ground", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfaceBloodCursed", "Ground", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfaceBloodElectrifiedCursed", "Ground", "Cursed", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceBloodFrozenCursed", "Ground", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfaceBloodPurified", "Ground", "Purified");
LeaderLib_Settings_RegisterSurface("SurfaceBloodElectrifiedPurified", "Ground", "Purified", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceBloodFrozenPurified", "Ground", "Purified");
LeaderLib_Settings_RegisterSurface("SurfacePoison", "Ground", "Standard");
LeaderLib_Settings_RegisterSurface("SurfacePoisonBlessed", "Ground", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfacePoisonCursed", "Ground", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfacePoisonPurified", "Ground", "Purified");
LeaderLib_Settings_RegisterSurface("SurfaceOil", "Ground", "Standard");
LeaderLib_Settings_RegisterSurface("SurfaceOilBlessed", "Ground", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfaceOilCursed", "Ground", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfaceOilPurified", "Ground", "Purified");
LeaderLib_Settings_RegisterSurface("SurfaceLava", "Ground", "Special");
LeaderLib_Settings_RegisterSurface("SurfaceSource", "Ground", "Special");
LeaderLib_Settings_RegisterSurface("SurfaceWeb", "Ground", "Web");
LeaderLib_Settings_RegisterSurface("SurfaceWebBlessed", "Ground", "Web", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfaceWebCursed", "Ground", "Web", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfaceWebPurified", "Ground", "Web", "Purified");
//LeaderLib_Settings_RegisterSurface("Custom", "Custom", "", "");
//LeaderLib_Settings_RegisterSurface("CustomBlessed", "Custom", "", "");
//LeaderLib_Settings_RegisterSurface("CustomCursed", "Custom", "", "");
//LeaderLib_Settings_RegisterSurface("CustomPurified", "Custom", "", "");
LeaderLib_Settings_RegisterSurface("SurfaceDeepwater", "Ground", "Special");
LeaderLib_Settings_RegisterSurface("SurfaceFireCloud", "Standard", "Cloud");
LeaderLib_Settings_RegisterSurface("SurfaceFireCloudBlessed", "Cloud", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfaceFireCloudCursed", "Cloud", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfaceFireCloudPurified", "Cloud", "Purified");
LeaderLib_Settings_RegisterSurface("SurfaceWaterCloud", "Standard", "Cloud");
LeaderLib_Settings_RegisterSurface("SurfaceWaterCloudElectrified", "Standard", "Cloud", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceWaterCloudBlessed", "Cloud", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfaceWaterCloudElectrifiedBlessed", "Cloud", "Blessed", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceWaterCloudCursed", "Cloud", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfaceWaterCloudElectrifiedCursed", "Cloud", "Cursed", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceWaterCloudPurified", "Cloud", "Purified");
LeaderLib_Settings_RegisterSurface("SurfaceWaterCloudElectrifiedPurified", "Cloud", "Purified", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceBloodCloud", "Standard", "Cloud");
LeaderLib_Settings_RegisterSurface("SurfaceBloodCloudElectrified", "BloodStandard", "Cloud", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceBloodCloudBlessed", "Cloud", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfaceBloodCloudElectrifiedBlessed", "Cloud", "Blessed", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceBloodCloudCursed", "Cloud", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfaceBloodCloudElectrifiedCursed", "Cloud", "Cursed", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfaceBloodCloudPurified", "Cloud", "Purified");
LeaderLib_Settings_RegisterSurface("SurfaceBloodCloudElectrifiedPurified", "Cloud", "Purified", "Electrified");
LeaderLib_Settings_RegisterSurface("SurfacePoisonCloud", "Standard", "Cloud");
LeaderLib_Settings_RegisterSurface("SurfacePoisonCloudBlessed", "Cloud", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfacePoisonCloudCursed", "Cloud", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfacePoisonCloudPurified", "Cloud", "Purified");
LeaderLib_Settings_RegisterSurface("SurfaceSmokeCloud", "Standard", "Cloud");
LeaderLib_Settings_RegisterSurface("SurfaceSmokeCloudBlessed", "Cloud", "Blessed");
LeaderLib_Settings_RegisterSurface("SurfaceSmokeCloudCursed", "Cloud", "Cursed");
LeaderLib_Settings_RegisterSurface("SurfaceSmokeCloudPurified", "Cloud", "Purified");
LeaderLib_Settings_RegisterSurface("SurfaceExplosionCloud", "Special", "Cloud");
LeaderLib_Settings_RegisterSurface("SurfaceFrostCloud", "Standard", "Cloud");
LeaderLib_Settings_RegisterSurface("SurfaceDeathfogCloud", "Deathfog", "Cloud");

PROC
LeaderLib_Settings_RegisterSurface((STRING)_Surface)
THEN
LeaderLib_Settings_RegisterSurface(_Surface, "");

PROC
LeaderLib_Settings_RegisterSurface((STRING)_Surface, (STRING)_Group)
THEN
LeaderLib_Settings_RegisterSurface(_Surface, _Group, "", "");

PROC
LeaderLib_Settings_RegisterSurface((STRING)_Surface, (STRING)_Group1, (STRING)_Group2)
THEN
LeaderLib_Settings_RegisterSurface(_Surface, _Group1, _Group2, "");

PROC
LeaderLib_Settings_RegisterSurface((STRING)_Surface, (STRING)_Group1, (STRING)_Group2, (STRING)_Group3)
AND
_Surface != ""
AND
SysCount("DB_LeaderLib_Surfaces", 2, _Index)
THEN
DB_LeaderLib_Surfaces(_Index, _Surface);
LeaderLib_Settings_AddSurfaceToGroup(_Surface, _Group1);
LeaderLib_Settings_AddSurfaceToGroup(_Surface, _Group2);
LeaderLib_Settings_AddSurfaceToGroup(_Surface, _Group3);

PROC
LeaderLib_Settings_AddSurfaceToGroup((STRING)_Surface, (STRING)_Group)
AND
_Group != ""
THEN
DB_LeaderLib_SurfaceGroup(_Surface, _Group);
//LeaderLog_Log("DEBUG", "[LeaderLib:Settings:AddSurfaceToGroup] Added surface [",_Surface,"] to group [",_Group,"]");

PROC
LeaderLib_Settings_InitRaceData()
AND
NOT DB_LeaderLib_RaceTags(_,_,_)
THEN
//DB_LeaderLib_RaceTags(_Race, _Tag, _BaseRace)
DB_LeaderLib_RaceTags("Dwarf", "DWARF", "DWARF");
DB_LeaderLib_RaceTags("Elf", "ELF", "ELF");
DB_LeaderLib_RaceTags("Human", "HUMAN", "HUMAN");
DB_LeaderLib_RaceTags("Lizard", "LIZARD", "LIZARD");
DB_LeaderLib_RaceTags("Undead_Dwarf", "UNDEAD_DWARF", "DWARF");
DB_LeaderLib_RaceTags("Undead_Elf", "UNDEAD_ELF", "ELF");
DB_LeaderLib_RaceTags("Undead_Human", "UNDEAD_HUMAN", "HUMAN");
DB_LeaderLib_RaceTags("Undead_Lizard", "UNDEAD_LIZARD", "LIZARD");

PROC
LeaderLib_Settings_InitRaceData()
AND
NOT DB_LeaderLib_RaceTemplates(_,_,_,_)
THEN
//DB_LeaderLib_RaceTemplates(_RaceTag, _Undead, _Female, _Template)
DB_LeaderLib_RaceTemplates("DWARF", 0, 1,"Dwarves_Hero_Female_c1c58707-b06e-499e-9c43-91a90be602b0");
DB_LeaderLib_RaceTemplates("DWARF", 0, 0,"Dwarves_Hero_Male_024d1763-b2aa-46ec-b705-6338059838be");
DB_LeaderLib_RaceTemplates("DWARF", 1, 1,"Dwarves_Hero_Female_Undead_373a1966-a54d-4a3e-be70-e779a654c914");
DB_LeaderLib_RaceTemplates("DWARF", 1, 0,"Dwarves_Hero_Male_Undead_726442a5-6856-4b0d-91ed-5d2f003b8a0c");
DB_LeaderLib_RaceTemplates("ELF", 0, 1,"Elves_Hero_Female_7ef846f5-34dc-450c-815e-a58dfc190a7b");
DB_LeaderLib_RaceTemplates("ELF", 0, 0,"Elves_Hero_Male_19913083-924e-45ec-8b5b-119d5913722f");
DB_LeaderLib_RaceTemplates("ELF", 1, 1,"Elves_Hero_Female_Undead_7f366172-9fd1-45df-8719-a6d14cb534b3");
DB_LeaderLib_RaceTemplates("ELF", 1, 0,"Elves_Hero_Male_Undead_9eeaaafd-c47d-4650-9200-b00430d61e83");
DB_LeaderLib_RaceTemplates("HUMAN", 0, 1,"Humans_Hero_Female_de8ea39b-6989-4b93-b34a-81e549c540f2");
DB_LeaderLib_RaceTemplates("HUMAN", 0, 0,"Humans_Hero_Male_25611432-e5e4-482a-8f5d-196c9e90001e");
DB_LeaderLib_RaceTemplates("HUMAN", 1, 1,"Humans_Hero_Female_Undead_3bd0693d-0b0a-4f6d-93e2-aea9be654bee");
DB_LeaderLib_RaceTemplates("HUMAN", 1, 0,"Humans_Hero_Male_Undead_5ab5d036-4606-4265-962e-c2e4d2d2408b");
DB_LeaderLib_RaceTemplates("LIZARD", 0, 1,"Lizards_Hero_Female_e4a6bcfa-ecd6-4e56-8592-cd16b85a1c50");
DB_LeaderLib_RaceTemplates("LIZARD", 0, 0,"Lizards_Hero_Male_fa12e21f-0a10-47dd-af46-ab2c9a53cf6d");
DB_LeaderLib_RaceTemplates("LIZARD", 1, 1,"Lizards_Hero_Female_Undead_725f9a47-a3d4-41d2-92cf-017d18c2b212");
DB_LeaderLib_RaceTemplates("LIZARD", 1, 0,"Lizards_Hero_Male_Undead_57b70554-36bf-4b86-b9aa-8f7cc3944153");

/*
These two databases can be used in combination like so:
AND
CharacterGetRace(_Player, 1, _Race)
AND
DB_LeaderLib_RaceTags(_Race, _RaceTag, _BaseRaceTag)
AND
IsTagged(_Player, "UNDEAD", _Undead)
AND
CharacterIsFemale(_Player, _Female)
AND
DB_LeaderLib_RaceTemplates(_RaceTag, _Undead, _Female, _Template)
THEN
CharacterTransform(_Player, _Template, 1, 1, 1, 1, 1, 1, 0);
*/

PROC
LeaderLib_Settings_InitStatusData()
AND
NOT DB_LeaderLib_EngineStatus(_)
THEN
//These are statuses with their own type
DB_LeaderLib_EngineStatus("HIT");
DB_LeaderLib_EngineStatus("CLIMBING");
DB_LeaderLib_EngineStatus("DYING");
DB_LeaderLib_EngineStatus("ENCUMBERED");
DB_LeaderLib_EngineStatus("EXPLODE");
DB_LeaderLib_EngineStatus("HEALING");
DB_LeaderLib_EngineStatus("FLANKED");
DB_LeaderLib_EngineStatus("INSURFACE");
DB_LeaderLib_EngineStatus("LYING");
DB_LeaderLib_EngineStatus("MATERIAL");
DB_LeaderLib_EngineStatus("POST_MAGIC_CONTROL"); // HEAL type
DB_LeaderLib_EngineStatus("POST_PHYS_CONTROL"); // HEAL type
//DB_LeaderLib_EngineStatus("SHACKLES_OF_PAIN");
DB_LeaderLib_EngineStatus("SHACKLES_OF_PAIN_CASTER");
DB_LeaderLib_EngineStatus("ROTATE");
DB_LeaderLib_EngineStatus("SITTING");
DB_LeaderLib_EngineStatus("SMELLY");
DB_LeaderLib_EngineStatus("SNEAKING");
DB_LeaderLib_EngineStatus("SPIRIT");
DB_LeaderLib_EngineStatus("SPIRIT_VISION");
DB_LeaderLib_EngineStatus("SOURCE_MUTED");
DB_LeaderLib_EngineStatus("SUMMONING");
DB_LeaderLib_EngineStatus("TELEPORT_FALLING");
DB_LeaderLib_EngineStatus("THROWN");
DB_LeaderLib_EngineStatus("TUTORIAL_BED");
DB_LeaderLib_EngineStatus("UNSHEATHED");

//Auras to ignore, or aura statuses that can be resisted, and result in event spam
PROC
LeaderLib_Settings_InitStatusData()
AND
NOT DB_LeaderLib_AuraStatus("LeaderLib", _)
THEN
DB_LeaderLib_AuraStatus("LeaderLib", "HEAL_SHARING");
DB_LeaderLib_AuraStatus("LeaderLib", "HEAL_SHARING_CASTER");
DB_LeaderLib_AuraStatus("LeaderLib", "LEADERSHIP");
DB_LeaderLib_AuraStatus("LeaderLib", "PROTECTION_CIRCLE");
DB_LeaderLib_AuraStatus("LeaderLib", "FAVOURABLE_WIND");

//AuraEnemies
DB_LeaderLib_AuraStatus("LeaderLib", "QUEST_PAIN");
/*
DB_LeaderLib_AuraStatus("LeaderLib", "POISONED");
DB_LeaderLib_AuraStatus("LeaderLib", "BLIND");
DB_LeaderLib_AuraStatus("LeaderLib", "FEAR");
DB_LeaderLib_AuraStatus("LeaderLib", "MUTED");
DB_LeaderLib_AuraStatus("LeaderLib", "SUFFOCATING");
DB_LeaderLib_AuraStatus("LeaderLib", "PETRIFIED");
*/

PROC
LeaderLib_Settings_InitStatusData()
AND
NOT DB_LeaderLib_DisableStatuses("LeaderLib", _)
THEN
//Statuses with LoseControl set to Yes
DB_LeaderLib_DisableStatuses("LeaderLib", "CHICKEN");
DB_LeaderLib_DisableStatuses("LeaderLib", "COW");
DB_LeaderLib_DisableStatuses("LeaderLib", "MADNESS");
DB_LeaderLib_DisableStatuses("LeaderLib", "STORY_FROZEN");
DB_LeaderLib_DisableStatuses("LeaderLib", "TAUNTED");
DB_LeaderLib_DisableStatuses("LeaderLib", "ZOMBIE_CHICKEN");

PROC
LeaderLib_Settings_InitStatusData()
AND
NOT DB_LeaderLib_DisablingStatusTypes(_)
THEN
DB_LeaderLib_DisablingStatusTypes("DEACTIVATED");
DB_LeaderLib_DisablingStatusTypes("CHARMED");
DB_LeaderLib_DisablingStatusTypes("FEAR");
DB_LeaderLib_DisablingStatusTypes("INCAPACITATED");
DB_LeaderLib_DisablingStatusTypes("KNOCKED_DOWN");
DB_LeaderLib_DisablingStatusTypes("PLAY_DEAD");
//END_REGION

//REGION CC_DATA
PROC
LeaderLib_Settings_InitCCData()
THEN
LeaderLib_Settings_Register_PortraitTrigger(1, "Dwarf", 0, 0, TRIGGERGUID_Icon_Dwarf_Male_1_dc7ab589-9a70-4a9c-b566-a98127835a42);
LeaderLib_Settings_Register_PortraitTrigger(2, "Dwarf", 0, 0, TRIGGERGUID_Icon_Dwarf_Male_2_ccb34018-1625-4f78-aed0-8a8aefd406ba);
LeaderLib_Settings_Register_PortraitTrigger(1, "Dwarf", 0, 1, TRIGGERGUID_Icon_Undead_Dwarf_Male_1_8df7aeab-9aa2-4772-9c04-dc70d5d43cfe);
LeaderLib_Settings_Register_PortraitTrigger(2, "Dwarf", 0, 1, TRIGGERGUID_Icon_Undead_Dwarf_Male_2_42d9a235-2614-497f-bd96-6b3e161245e2);
LeaderLib_Settings_Register_PortraitTrigger(1, "Dwarf", 1, 0, TRIGGERGUID_Icon_Dwarf_Female_1_c79ab02b-ee28-4bde-8e73-c985395c50f7);
LeaderLib_Settings_Register_PortraitTrigger(2, "Dwarf", 1, 0, TRIGGERGUID_Icon_Dwarf_Female_2_a77d5868-eff2-4310-85bf-2ee746d8e38c);
LeaderLib_Settings_Register_PortraitTrigger(1, "Dwarf", 1, 1, TRIGGERGUID_Icon_Undead_Dwarf_Female_1_1bf3e8c5-3cce-47e9-8186-75bc4e2ba752);
LeaderLib_Settings_Register_PortraitTrigger(2, "Dwarf", 1, 1, TRIGGERGUID_Icon_Undead_Dwarf_Female_2_84aa42f6-1b5f-4384-a553-933682dbb506);

LeaderLib_Settings_Register_PortraitTrigger(1, "Elf", 0, 0, TRIGGERGUID_Icon_Elf_Male_1_c7cd3724-a597-45e8-89ab-78005b3f0d7b);
LeaderLib_Settings_Register_PortraitTrigger(2, "Elf", 0, 0, TRIGGERGUID_Icon_Elf_Male_2_4f7b4564-5e49-4076-9d04-a9eee6cbc148);
LeaderLib_Settings_Register_PortraitTrigger(1, "Elf", 0, 1, TRIGGERGUID_Icon_Undead_Elf_Male_1_8775bee6-f2fd-4b2b-a40e-381568481c44);
LeaderLib_Settings_Register_PortraitTrigger(2, "Elf", 0, 1, TRIGGERGUID_Icon_Undead_Elf_Male_2_4a54900b-f088-4d75-a370-1242e8ab36ea);
LeaderLib_Settings_Register_PortraitTrigger(1, "Elf", 1, 0, TRIGGERGUID_Icon_Elf_Female_1_a96c9b77-2bbd-4015-be1d-7ea614a3be9d);
LeaderLib_Settings_Register_PortraitTrigger(2, "Elf", 1, 0, TRIGGERGUID_Icon_Elf_Female_2_5c307b23-c61b-4aec-98e0-23d06a401d53);
LeaderLib_Settings_Register_PortraitTrigger(1, "Elf", 1, 1, TRIGGERGUID_Icon_Undead_Elf_Female_1_281d30d1-7af0-45f5-aab0-19444e55dd5f);
LeaderLib_Settings_Register_PortraitTrigger(2, "Elf", 1, 1, TRIGGERGUID_Icon_Undead_Elf_Female_2_922b2e54-8366-4442-a7a0-ae02c178a5b9);

LeaderLib_Settings_Register_PortraitTrigger(1, "Human", 0, 0, TRIGGERGUID_Icon_Human_Male_1_a14240ca-15af-4e24-8b03-a66a796aa4d8);
LeaderLib_Settings_Register_PortraitTrigger(2, "Human", 0, 0, TRIGGERGUID_Icon_Human_Male_2_f10e2e7b-5d99-40ef-a71b-5683e4756194);
LeaderLib_Settings_Register_PortraitTrigger(1, "Human", 0, 1, TRIGGERGUID_Icon_Undead_Human_Male_1_7a033763-156b-4e2b-b8d8-3c6c37eeb5fe);
LeaderLib_Settings_Register_PortraitTrigger(2, "Human", 0, 1, TRIGGERGUID_Icon_Undead_Human_Male_2_5ffc1380-41aa-40ca-a854-e6babcee3600);
LeaderLib_Settings_Register_PortraitTrigger(1, "Human", 1, 0, TRIGGERGUID_Icon_Human_Female_1_acd03bb5-3047-4255-af22-cce5a4975d82);
LeaderLib_Settings_Register_PortraitTrigger(2, "Human", 1, 0, TRIGGERGUID_Icon_Human_Female_2_23921554-b031-482f-82ca-91ae558f99e8);
LeaderLib_Settings_Register_PortraitTrigger(1, "Human", 1, 1, TRIGGERGUID_Icon_Undead_Human_Female_1_8cc8b6b9-fa44-48a3-9545-2936a9220554);
LeaderLib_Settings_Register_PortraitTrigger(2, "Human", 1, 1, TRIGGERGUID_Icon_Undead_Human_Female_2_61f40733-afeb-4dda-99d4-4b120b07b15f);

LeaderLib_Settings_Register_PortraitTrigger(1, "Lizard", 0, 0, TRIGGERGUID_Icon_Lizard_Male_1_a0161ddd-9219-463e-b8d1-bfa70a7c6f34);
LeaderLib_Settings_Register_PortraitTrigger(2, "Lizard", 0, 0, TRIGGERGUID_Icon_Lizard_Male_2_05b6a99c-3ce8-4c57-80a2-16445a27b570);
LeaderLib_Settings_Register_PortraitTrigger(1, "Lizard", 0, 1, TRIGGERGUID_Icon_Undead_Lizard_Male_1_6bc53bf2-b434-46bb-9201-562b49edab8d);
LeaderLib_Settings_Register_PortraitTrigger(2, "Lizard", 0, 1, TRIGGERGUID_Icon_Undead_Lizard_Male_2_73c91b27-e396-4124-a9da-197f6461379b);
LeaderLib_Settings_Register_PortraitTrigger(1, "Lizard", 1, 0, TRIGGERGUID_Icon_Lizard_Female_1_de0a1dab-02d9-468e-9f27-c24b7385c6e8);
LeaderLib_Settings_Register_PortraitTrigger(2, "Lizard", 1, 0, TRIGGERGUID_Icon_Lizard_Female_2_79a3b0ed-1807-4d38-b12d-158d507dd243);
LeaderLib_Settings_Register_PortraitTrigger(1, "Lizard", 1, 1, TRIGGERGUID_Icon_Undead_Lizard_Female_1_7d1a7f9e-5401-4a0a-90ed-db57e12878c4);
LeaderLib_Settings_Register_PortraitTrigger(2, "Lizard", 1, 1, TRIGGERGUID_Icon_Undead_Lizard_Female_2_86f3ca5d-6267-4618-8589-b9179424becf);

PROC
LeaderLib_Settings_Register_PortraitTrigger((INTEGER)_Index, (STRING)_Race, (INTEGER)_IsFemale, (INTEGER)_IsUndead, (TRIGGERGUID)_Trigger)
THEN
DB_LeaderLib_CC_PortraitTriggers(_Index, _Race, _IsFemale, _IsUndead, _Trigger);

PROC
LeaderLib_Settings_Internal_ClearPortraitTriggers()
AND
DB_LeaderLib_CC_PortraitTriggers(_Index, _Race, _IsFemale, _IsUndead, _Trigger)
THEN
NOT DB_LeaderLib_CC_PortraitTriggers(_Index, _Race, _IsFemale, _IsUndead, _Trigger);
//END_REGION

//REGION IGNORE_TAGS
PROC
LeaderLib_Settings_InitSettings()
THEN
LeaderLib_Helper_Register_IgnoreTag_Character("LeaderLib", "LeaderLib_Dummy");
//END_REGION

//REGION RUNESLOT_PROBLEM_WORKAROUND
PROC
LeaderLib_Settings_InitRuneSlotHelperData()
THEN
DB_LeaderLib_RuneSlotDeltaMod("Shared", "Boost_Weapon_EmptyRuneSlot");
DB_LeaderLib_RuneSlotDeltaMod("Shared", "Boost_Armor_UpperBody_EmptyRuneSlot");
DB_LeaderLib_RuneSlotDeltaMod("Shared", "Boost_Armor_Amulet_EmptyRuneSlot");
DB_LeaderLib_RuneSlotDeltaMod("LeaderLib", "Boost_LeaderLib_Armor_LowerBody_EmptyRuneSlot");
DB_LeaderLib_RuneSlotDeltaMod("LeaderLib", "Boost_LeaderLib_Armor_LowerBody_EmptyRuneSlot2");
DB_LeaderLib_RuneSlotDeltaMod("LeaderLib", "Boost_LeaderLib_Armor_Arms_EmptyRuneSlot");
DB_LeaderLib_RuneSlotDeltaMod("LeaderLib", "Boost_LeaderLib_Armor_Arms_EmptyRuneSlot2");
DB_LeaderLib_RuneSlotDeltaMod("LeaderLib", "Boost_LeaderLib_Armor_Boots_EmptyRuneSlot");
DB_LeaderLib_RuneSlotDeltaMod("LeaderLib", "Boost_LeaderLib_Armor_Boots_EmptyRuneSlot2");
DB_LeaderLib_RuneSlotDeltaMod("LeaderLib", "Boost_LeaderLib_Armor_UpperBody_EmptyRuneSlot");
DB_LeaderLib_RuneSlotDeltaMod("LeaderLib", "Boost_LeaderLib_Armor_UpperBody_EmptyRuneSlot2");
//END_REGION

//REGION MOD_DATA
IF
ObjectFlagSet("LeaderLib_Settings_ListMods", _Player, _Instance)
THEN
ObjectClearFlag(_Player, "LeaderLib_Settings_ListMods", 0);
LeaderLib_Settings_BuildModList();

PROC
LeaderLib_Settings_BuildModList()
AND
DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _Str)
THEN
NOT DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _Str);

PROC
LeaderLib_Settings_BuildModList()
AND
NOT DB_LeaderLib_Settings_Temp_RegisteredModsList(_)
THEN
DB_LeaderLib_Settings_Temp_RegisteredModsList("");

QRY
LeaderLib_Settings_QRY_SetActiveText((STRING)_ModID, (STRING)_Author)
AND
LeaderUpdater_QRY_ModIsActive(_ModID, _Author)
THEN
DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, " <b>(Active)</b>");

// [BEGIN_NO_OSITOOLS]
QRY
LeaderLib_Settings_QRY_SetActiveText((STRING)_ModID, (STRING)_Author)
AND
NOT DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _)
AND
LeaderUpdater_QRY_ModRegisteredActiveGoal(_ModID, _Author)
AND
NOT LeaderUpdater_QRY_ModIsActive(_ModID, _Author)
THEN
DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, " <b>(Deactivated)</b>");

QRY
LeaderLib_Settings_QRY_SetActiveText((STRING)_ModID, (STRING)_Author)
AND
NOT DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _)
AND
NOT LeaderUpdater_QRY_ModRegisteredActiveGoal(_ModID, _Author)
AND
NOT LeaderUpdater_QRY_ModIsActive(_ModID, _Author)
THEN
DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, " <b>(No Script Registered)</b>");
// [END_NO_OSITOOLS]

/* [OSITOOLS_ONLY]
QRY
LeaderLib_Settings_QRY_SetActiveText((STRING)_ModID, (STRING)_Author)
AND
NOT DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _)
AND
NOT LeaderUpdater_QRY_ModIsActive(_ModID, _Author)
AND
DB_LeaderUpdater_RegisteredUUID(_ModID, _Author, _UUID)
THEN
DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, " <b>(Deactivated)</b>");

QRY
LeaderLib_Settings_QRY_SetActiveText((STRING)_ModID, (STRING)_Author)
AND
NOT DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _)
AND
NOT LeaderUpdater_QRY_ModIsActive(_ModID, _Author)
AND
NOT LeaderUpdater_QRY_ModRegisteredActiveGoal(_ModID, _Author)
AND
NOT DB_LeaderUpdater_RegisteredUUID(_ModID, _Author, _)
THEN
DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, " <b>(No Script/UUID Registered)</b>");
*/

PROC
LeaderLib_Settings_BuildModList()
AND
DB_Mods_Registered(_ModID, _Author, _Version)
AND
DB_LeaderLib_Settings_Temp_RegisteredModsList(_Str1)
AND
StringConcatenate("<b>", _ModID, _NameStr)
AND
LeaderLib_Settings_QRY_SetActiveText(_ModID, _Author)
AND
DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _ActiveStr)
AND
StringConcatenate(_Str1, _NameStr, _Msg1)
AND
StringConcatenate(_Msg1, "</b> (", _Msg2)
AND
StringConcatenate(_Msg2, _Version, _Msg3)
AND
StringConcatenate(_Msg3, ") by ", _Msg4)
AND
StringConcatenate(_Msg4, _Author, _Msg5)
AND
StringConcatenate(_Msg5, _ActiveStr, _Msg6)
AND
StringConcatenate(_Msg6, "<br>", _CombinedStr)
THEN
NOT DB_LeaderLib_Settings_Temp_RegisteredModsList(_Str1);
DB_LeaderLib_Settings_Temp_RegisteredModsList(_CombinedStr);
NOT DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _ActiveStr);

PROC
LeaderLib_Settings_BuildModList()
AND
DB_LeaderLib_Settings_DialogVariables("ModList", _DialogVar)
AND
DB_LeaderLib_Settings_Temp_RegisteredModsList(_Str)
THEN
DialogSetVariableString("LeaderLib_SettingsMenu", _DialogVar, _Str);
NOT DB_LeaderLib_Settings_Temp_RegisteredModsList(_Str);
//END_REGION

//REGION STARTER_SKILLS
PROC
LeaderLib_Settings_InitStarterSkills()
AND
DB_LeaderLib_StarterSkills("LeaderLib", _Skill, _Slot, _Flag)
THEN
NOT DB_LeaderLib_StarterSkills("LeaderLib", _Skill, _Slot, _Flag);

PROC
LeaderLib_Settings_InitStarterSkills()
THEN
DB_LeaderLib_StarterSkills("LeaderLib", "Shout_LeaderLib_ChainAll", 29, "");
DB_LeaderLib_StarterSkills("LeaderLib", "Shout_LeaderLib_UnchainAll", 30, "");
DB_LeaderLib_StarterSkills("LeaderLib", "Shout_LeaderLib_OpenModMenu", 31, "LeaderLib_ModMenuSkillWasAdded");
//END_REGION

//REGION SETTINGS_MENU
IF
DialogStarted("LeaderLib_SettingsMenu", _Instance)
THEN
LeaderLib_Settings_BuildModList();
//END_REGION

//REGION MODMENU_BOOK
IF
ObjectFlagSet("LeaderLib_Commands_GiveModMenuBook", _Object, _Instance)
AND
LeaderLib_Helper_QRY_ClearObjectFlag(_Object, "LeaderLib_Commands_GiveModMenuBook")
AND
DB_LeaderLib_Settings_ItemTemplates("Book_ModMenu", _ModMenuBookTemplate)
THEN
ItemTemplateAddTo(_ModMenuBookTemplate, _Object, 1, 1);
//END_REGION

//REGION COMMANDS
IF
ObjectFlagSet("LeaderLib_Commands_CheckTraders", (CHARACTERGUID)_Player, _)
THEN
ObjectClearFlag(_Player, "LeaderLib_Commands_CheckTraders", 0);
LeaderLib_Traders_Internal_StartCheckingTraders();

IF
ObjectFlagSet("LeaderLib_Commands_AddModMenuSkill", (CHARACTERGUID)_Player, _)
THEN
ObjectClearFlag(_Player, "LeaderLib_Commands_AddModMenuSkill", 0);
CharacterAddSkill(_Player, "Shout_LeaderLib_OpenModMenu", 1);

IF
ObjectFlagSet("LeaderLib_Commands_RemoveModMenuSkill", (CHARACTERGUID)_Player, _)
THEN
ObjectClearFlag(_Player, "LeaderLib_Commands_RemoveModMenuSkill", 0);
CharacterRemoveSkill(_Player, "Shout_LeaderLib_OpenModMenu");
//END_REGION

//REGION FORCE_DATA
PROC
LeaderLib_Settings_InitForceHelperData()
AND
NOT DB_LeaderLib_ForceEvent(_,_,_)
THEN
//SysClear("DB_LeaderLib_ForceEvent", 3);
DB_LeaderLib_ForceEvent(1, "LeaderLib_Force_ShootProjectile_1", "LeaderLib_Force_ShootProjectileFromItem_1");
DB_LeaderLib_ForceEvent(2, "LeaderLib_Force_ShootProjectile_2", "LeaderLib_Force_ShootProjectileFromItem_2");
DB_LeaderLib_ForceEvent(3, "LeaderLib_Force_ShootProjectile_3", "LeaderLib_Force_ShootProjectileFromItem_3");
DB_LeaderLib_ForceEvent(4, "LeaderLib_Force_ShootProjectile_4", "LeaderLib_Force_ShootProjectileFromItem_4");
DB_LeaderLib_ForceEvent(5, "LeaderLib_Force_ShootProjectile_5", "LeaderLib_Force_ShootProjectileFromItem_5");
DB_LeaderLib_ForceEvent(6, "LeaderLib_Force_ShootProjectile_6", "LeaderLib_Force_ShootProjectileFromItem_6");
DB_LeaderLib_ForceEvent(7, "LeaderLib_Force_ShootProjectile_7", "LeaderLib_Force_ShootProjectileFromItem_7");
DB_LeaderLib_ForceEvent(8, "LeaderLib_Force_ShootProjectile_8", "LeaderLib_Force_ShootProjectileFromItem_8");
DB_LeaderLib_ForceEvent(9, "LeaderLib_Force_ShootProjectile_9", "LeaderLib_Force_ShootProjectileFromItem_9");
DB_LeaderLib_ForceEvent(10, "LeaderLib_Force_ShootProjectile_10", "LeaderLib_Force_ShootProjectileFromItem_10");
DB_LeaderLib_ForceEvent(11, "LeaderLib_Force_ShootProjectile_11", "LeaderLib_Force_ShootProjectileFromItem_11");
DB_LeaderLib_ForceEvent(12, "LeaderLib_Force_ShootProjectile_12", "LeaderLib_Force_ShootProjectileFromItem_12");
DB_LeaderLib_ForceEvent(13, "LeaderLib_Force_ShootProjectile_13", "LeaderLib_Force_ShootProjectileFromItem_13");
DB_LeaderLib_ForceEvent(14, "LeaderLib_Force_ShootProjectile_14", "LeaderLib_Force_ShootProjectileFromItem_14");
DB_LeaderLib_ForceEvent(15, "LeaderLib_Force_ShootProjectile_15", "LeaderLib_Force_ShootProjectileFromItem_15");
DB_LeaderLib_ForceEvent(16, "LeaderLib_Force_ShootProjectile_16", "LeaderLib_Force_ShootProjectileFromItem_16");
DB_LeaderLib_ForceEvent(17, "LeaderLib_Force_ShootProjectile_17", "LeaderLib_Force_ShootProjectileFromItem_17");
DB_LeaderLib_ForceEvent(18, "LeaderLib_Force_ShootProjectile_18", "LeaderLib_Force_ShootProjectileFromItem_18");
DB_LeaderLib_ForceEvent(19, "LeaderLib_Force_ShootProjectile_19", "LeaderLib_Force_ShootProjectileFromItem_19");
DB_LeaderLib_ForceEvent(20, "LeaderLib_Force_ShootProjectile_20", "LeaderLib_Force_ShootProjectileFromItem_20");
//END_REGION

//REGION DAMAGE_TYPES
PROC
LeaderLib_Settings_InitDamageData()
AND
NOT DB_LeaderLib_DamageTypes(_)
THEN
DB_LeaderLib_DamageTypes("None");
DB_LeaderLib_DamageTypes("Physical");
DB_LeaderLib_DamageTypes("Piercing");
DB_LeaderLib_DamageTypes("Corrosive");
DB_LeaderLib_DamageTypes("Magic");
DB_LeaderLib_DamageTypes("Chaos");
DB_LeaderLib_DamageTypes("Fire");
DB_LeaderLib_DamageTypes("Air");
DB_LeaderLib_DamageTypes("Water");
DB_LeaderLib_DamageTypes("Earth");
DB_LeaderLib_DamageTypes("Poison");
DB_LeaderLib_DamageTypes("Shadow");
//END_REGION

//REGION UPDATES
PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
NOT DB_LLBARTER_DialogBlacklist("LeaderLib", _PastVersion)
THEN
DB_LLBARTER_DialogBlacklist("LeaderLib", "LeaderLib_AutosaveMenu");
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updating dialog variables from version [",_PastVersion,"].");
DB_LeaderLib_Settings_DialogVariables("CurrentAutosaveInterval", "LeaderLib_AutosaveMenu_CurrentSettings_b48918b6-4864-4aae-88fd-53d658ccb082");
SysClear("DB_LeaderLib_Talents", 1);
LeaderLib_Settings_InitStats();

PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
NOT DB_LeaderLib_EngineStatus(_)
THEN
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updating [DB_LeaderLib_EngineStatus] from version [",_PastVersion,"].");
LeaderLib_Settings_InitStatusData();

PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1, 1, 0, 0)
THEN
NOT DB_LeaderLib_SurfaceGroup("SurfaceBloodFrozen", "Standard");
NOT DB_LeaderLib_SurfaceGroup("SurfaceBloodElectrified", "Standard");
NOT DB_LeaderLib_SurfaceGroup("SurfaceBloodCloudElectrified", "Standard");
DB_LeaderLib_SurfaceGroup("SurfaceBlood", "BloodStandard");
DB_LeaderLib_SurfaceGroup("SurfaceBloodFrozen", "BloodStandard");
DB_LeaderLib_SurfaceGroup("SurfaceBloodElectrified", "BloodStandard");
DB_LeaderLib_SurfaceGroup("SurfaceBloodCloudElectrified", "BloodStandard");
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updating surface settings from version [",_PastVersion,"].");

PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1, 1, 0, 0)
THEN
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updated settings from version [",_PastVersion,"].");
LeaderLib_Settings_InitSurfaces();
LeaderLib_Settings_SettingsInitialized();

PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1, 1, 6, 0)
THEN
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updated settings from version [",_PastVersion,"].");
LeaderLib_Settings_InitRaceData();

PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1, 1, 9, 2)
THEN
SysClear("DB_LeaderLib_EngineStatus", 1);
LeaderLib_Settings_InitStatusData();
DB_NeutralTagIgnore("LeaderLib_Dummy");
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updated settings from version [",_PastVersion,"].");

PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1, 1, 11, 0)
THEN
SysClear("DB_LeaderLib_RaceTags", 2);
LeaderLib_Settings_InitSkillData();
LeaderLib_Settings_InitRaceData();
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updated settings from version [",_PastVersion,"].");

//Add missing _BaseTag to regular races
PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1, 1, 13, 12)
THEN
SysClear("DB_LeaderLib_RaceTags", 3);
LeaderLib_Settings_InitRaceData();
LeaderLib_Helper_Register_IgnoreTag_Character("LeaderLib", "LeaderLib_Dummy");
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updated settings from version [",_PastVersion,"].");

//Add missing _BaseTag to regular races
PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1,1,14,0)
THEN
LeaderLib_Settings_Internal_UpdateTalents();
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updated settings from version [",_PastVersion,"].");

PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1,1,17,0)
THEN
LeaderLib_Settings_InitCCData();
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updated settings from version [",_PastVersion,"].");

PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1,2,7,0)
THEN
LeaderLib_Settings_InitRuneSlotHelperData();
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updated settings from version [",_PastVersion,"].");

PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1,2,9,0)
THEN
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updated settings from version [",_PastVersion,"].");
LeaderLib_Settings_InitForceHelperData();
LeaderLib_Settings_InitMathValues();

PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1,3,0,0)
THEN
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updated settings from version [",_PastVersion,"].");
SysClear("DB_LeaderLib_Surfaces", 2);
SysClear("DB_LeaderLib_SurfaceGroup", 2);
LeaderLib_Settings_InitSurfaces();

PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1,5,8,2)
THEN
LeaderLib_GlobalSettings_Internal_Init();

PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1,5,11,0)
THEN
LeaderLib_Settings_InitDamageData();
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LeaderLib_11__Start"
