Version 1
SubGoalCombiner SGC_AND
INITSECTION
LeaderLib_Autosaving_InitSettings();
KBSECTION
//REGION SETTINGS
PROC
LeaderLib_Autosaving_InitSettings()
THEN
LeaderLib_DynamicMenu_Register_DefaultMenu("LeaderLib.Autosave.IntervalSettings");
LeaderLib_DynamicMenu_Register_Dialog("LeaderLib.Autosave.IntervalSettings", "LeaderLib_AutosaveMenu");

LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_2", "2 Minutes");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_5", "5 Minutes");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_10", "10 Minutes");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_15", "15 Minutes");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_20", "20 Minutes");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_25", "25 Minutes");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_30", "30 Minutes");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_35", "35 Minutes");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_40", "40 Minutes");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_45", "45 Minutes");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_60", "60 Minutes");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_90", "90 Minutes");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_120", "2 Hours");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_180", "3 Hours");
LeaderLib_DynamicMenu_Register_Entry("LeaderLib.Autosave.IntervalSettings", "LeaderLib_Autosave_Interval_240", "4 Hours");

DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_2", 2);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_5", 5);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_10", 10);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_15", 15);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_20", 20);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_25", 25);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_30", 30);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_35", 35);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_40", 40);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_45", 45);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_60", 60);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_90", 90);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_120", 120);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_180", 180);
DB_LeaderLib_Autosaving_Interval("LeaderLib_Autosave_Interval_240", 240);

IF
GameStarted(_,_)
AND
NOT DB_LeaderLib_Autosaving_CurrentInterval(_)
THEN
DB_LeaderLib_Autosaving_CurrentInterval("LeaderLib_Autosave_Interval_15");
//END_REGION

//REGION GLOBAL_SETTINGS
PROC
LeaderLib_GlobalSettings_GetIntegerVariable("LeaderLib", "LaughingLeader", "AutosaveInterval")
AND
DB_LeaderLib_Autosaving_CurrentInterval(_Flag)
AND
DB_LeaderLib_Autosaving_Interval(_Flag, _Minutes)
THEN
LeaderLib_GlobalSettings_SaveIntegerVariable("LeaderLib", "LaughingLeader", "AutosaveInterval", _Minutes);

//New minutes assigned by a user via the settings file
PROC
LeaderLib_GlobalSettings_SetIntegerVariable("LeaderLib", "LaughingLeader", "AutosaveInterval", (INTEGER)_Minutes)
AND
IntegerMax(_Minutes, 2, _ClampedA)
AND
IntegerMin(_Minutes, 1440, _ClampedB)
AND
NOT DB_LeaderLib_Autosaving_Interval(_, _ClampedB)
AND
IntegertoString(_ClampedB, _IntStr)
AND
StringConcatenate("LeaderLib_Autosave_Interval_", _IntStr, _NewFlag)
THEN
DB_LeaderLib_Autosaving_Interval(_NewFlag, _ClampedB);
DB_LeaderLib_Autosaving_CurrentInterval(_NewFlag);
LeaderLib_GlobalSettings_Register_Flag("LeaderLib", "LaughingLeader", _NewFlag);
LeaderLog_Log("DEBUG", "[LeaderLib_11_3_Autosaving:SetIntegerVariable] New interval flag was created by user: (",_NewFlag,")[",_IntStr,"]");

PROC
LeaderLib_GlobalSettings_SetIntegerVariable("LeaderLib", "LaughingLeader", "AutosaveInterval", (INTEGER)_Minutes)
AND
DB_LeaderLib_Autosaving_Interval(_Flag, _Minutes)
THEN
DB_LeaderLib_Autosaving_CurrentInterval(_Flag);
GlobalSetFlag(_Flag);
LeaderLog_Log("DEBUG", "[LeaderLib_11_3_Autosaving:SetIntegerVariable] Loaded autosave interval: (",_Flag,").");
//END_REGION

//REGION INIT_TIMER
PROC
LeaderLib_Autosaving_Start()
AND
NOT DB_LeaderLib_AutoSaving_Temp_TimerStarted(1)
AND
DB_CurrentLevel(_Level)
AND
IsGameLevel(_Level, 1)
AND
DB_LeaderLib_Autosaving_CurrentInterval(_Flag)
AND
DB_LeaderLib_Autosaving_Interval(_Flag, _Minutes)
THEN
LeaderLog_LogInt("DEBUG", "[LeaderLib:Autosaving:LeaderLib_Commands_StartAutosaving] Autosaving after [",_Minutes,"] minutes.");
LeaderLib_Autosaving_InitTimer(_Minutes);

PROC
LeaderLib_Autosaving_Start()
AND
NOT DB_LeaderLib_AutoSaving_Temp_TimerStarted(1)
AND
DB_CurrentLevel(_Region)
AND
IsGameLevel(_Region, 0)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Autosaving:LeaderLib_Commands_StartAutosaving] Current level is not a game level. Delaying autosaving until a game level is started.");
DB_LeaderLib_Autosaving_Temp_StartAtGameLevel(1);

IF
GameStarted(_Region, _)
AND
IsGameLevel(_Region, 1)
AND
DB_LeaderLib_Autosaving_Temp_StartAtGameLevel(1)
THEN
NOT DB_LeaderLib_Autosaving_Temp_StartAtGameLevel(1);
LeaderLog_Log("DEBUG", "[LeaderLib:Autosaving:StartAtGameLevel(1)] Game level started. Starting autosaving.");
LeaderLib_Autosaving_Start();

PROC
LeaderLib_Autosaving_InitTimer((INTEGER)_Minutes)
AND
DB_LeaderLib_Autosaving_Temp_Countdown(_LastMinutes)
THEN
NOT DB_LeaderLib_Autosaving_Temp_Countdown(_LastMinutes);
TimerCancel("LeaderLib_Timers_Autosaving");

PROC
LeaderLib_Autosaving_InitTimer((INTEGER)_Minutes)
THEN
DB_LeaderLib_Autosaving_Temp_Countdown(_Minutes);
LeaderLib_Autosaving_StartTimer();
//END_REGION

//REGION TIMER
IF
TimerFinished("LeaderLib_Timers_Autosaving")
THEN
NOT DB_LeaderLib_AutoSaving_Temp_TimerStarted(1);

IF
TimerFinished("LeaderLib_Timers_Autosaving")
AND
DB_LeaderLib_Autosaving_Temp_Countdown(_Minutes)
AND
IntegerSubtract(_Minutes, 1, _RemainingMinutes)
THEN
NOT DB_LeaderLib_Autosaving_Temp_Countdown(_Minutes);
DB_LeaderLib_Autosaving_Temp_Countdown(_RemainingMinutes);
LeaderLog_LogInt("DEBUG", "[LeaderLib:Autosaving:LeaderLib_Timers_Autosaving] Autosaving after [",_RemainingMinutes,"] minute(s).");
LeaderLib_Autosaving_StartTimer();

PROC
LeaderLib_Autosaving_StartTimer()
AND
DB_LeaderLib_Autosaving_Temp_Countdown(_Minutes)
AND
_Minutes > 0
THEN
TimerLaunch("LeaderLib_Timers_Autosaving", 60000);
DB_LeaderLib_AutoSaving_Temp_TimerStarted(1);

PROC
LeaderLib_Autosaving_StartTimer()
AND
DB_LeaderLib_Autosaving_Temp_Countdown(_Minutes)
AND
_Minutes <= 0
THEN
LeaderLib_Autosaving_Save();
LeaderLib_Autosaving_Start();

PROC
LeaderLib_Autosaving_Stop()
AND
DB_LeaderLib_AutoSaving_Temp_TimerStarted(1)
THEN
NOT DB_LeaderLib_AutoSaving_Temp_TimerStarted(1);

PROC
LeaderLib_Autosaving_Stop()
AND
DB_LeaderLib_Autosaving_Temp_Countdown(_Minutes)
THEN
NOT DB_LeaderLib_Autosaving_Temp_Countdown(_Minutes);

PROC
LeaderLib_Autosaving_Stop()
THEN
TimerCancel("LeaderLib_Timers_Autosaving");

PROC
LeaderLib_Autosaving_Restart()
THEN
LeaderLog_Log("DEBUG", "[LeaderLib_11_3_Autosaving:Restart] Restarting autosave timer.");
LeaderLib_Autosaving_Stop();
LeaderLib_Autosaving_Start();
//END_REGION

//REGION START_EVENTS
IF
GlobalFlagSet("LeaderLib_AutosavingEnabled")
THEN
LeaderLib_Autosaving_Start();

IF
GlobalFlagCleared("LeaderLib_AutosavingEnabled")
THEN
LeaderLib_Autosaving_Stop();

IF
DB_LeaderLib_Autosaving_CurrentInterval(_Flag)
AND
DB_LeaderLib_Autosaving_Interval(_Flag, _Minutes)
AND
DB_GlobalFlag("LeaderLib_AutosavingEnabled")
THEN
LeaderLib_Autosaving_Restart();
//END_REGION

//REGION AUTOSAVING
PROC
LeaderLib_Autosaving_Save()
AND
NOT DB_GlobalFlag("LeaderLib_DisableAutosavingInCombat")
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Autosaving:LeaderLib_Commands_AutosaveNow] Autosaving now.");
AutoSave();

PROC
LeaderLib_Autosaving_Save()
AND
DB_GlobalFlag("LeaderLib_DisableAutosavingInCombat")
AND
CharacterGetHostCharacter(_Player)
AND
CharacterIsInCombat(_Player, 0)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Autosaving:LeaderLib_Commands_AutosaveNow] Autosaving now.");
AutoSave();

PROC
LeaderLib_Autosaving_Save()
AND
DB_GlobalFlag("LeaderLib_DisableAutosavingInCombat")
AND
CharacterGetHostCharacter(_Player)
AND
CharacterIsInCombat(_Player, 0)
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Autosaving:LeaderLib_Commands_AutosaveNow] Host is in combat. Delaying autosave until combat ends.");
DB_LeaderLib_Autosaving_Temp_SaveAfterCombat(1);

PROC
LeaderLib_AutoSaving_OnCombatEnded((INTEGER)_CombatID)
AND
DB_LeaderLib_Autosaving_Temp_SaveAfterCombat(1)
AND
CharacterGetHostCharacter(_Player)
AND
CharacterIsInCombat(_Player, 0)
THEN
NOT DB_LeaderLib_Autosaving_Temp_SaveAfterCombat(1);
LeaderLog_Log("DEBUG", "[LeaderLib:Autosaving:CombatEnded] Host left combat. Autosaving.");
AutoSave();
//Reset timer
LeaderLib_Autosaving_Start();

IF
GlobalFlagSet("LeaderLib_Commands_AutosaveNow")
THEN
GlobalClearFlag("LeaderLib_Commands_AutosaveNow");
LeaderLib_Autosaving_Save();
LeaderLib_Autosaving_Restart();

IF
GlobalFlagCleared("LeaderLib_Commands_AutosaveNow")
AND
DB_DialogName("LeaderLib_AutosaveMenu", _Instance)
THEN
LeaderLib_Autosaving_Internal_UpdateDialogVar(_Instance);
//END_REGION

//REGION SAVE_LOADED_RESTART
IF
SavegameLoaded(_,_,_,_)
AND
DB_LeaderLib_AutoSaving_Temp_TimerStarted(1)
AND
DB_LeaderLib_Autosaving_Temp_Countdown(_Minutes)
AND
_Minutes <= 25
THEN
LeaderLog_Log("DEBUG", "[LeaderLib_11_3_Autosaving:SavegameLoaded] Save loaded. Restarting autosave timer.");
LeaderLib_Autosaving_Restart();
//END_REGION

//REGION MENU
IF
DialogStarted("LeaderLib_AutosaveMenu", _Instance)
THEN
LeaderLib_Autosaving_Internal_UpdateDialogVar(_Instance);

IF
DB_GlobalFlag("LeaderLib_AutosavingEnabled")
AND
DB_DialogName("LeaderLib_AutosaveMenu", _Instance)
THEN
LeaderLib_Autosaving_Internal_UpdateDialogVar(_Instance);

IF
GlobalFlagCleared("LeaderLib_AutosavingEnabled")
AND
DB_DialogName("LeaderLib_AutosaveMenu", _Instance)
THEN
LeaderLib_Autosaving_Internal_UpdateDialogVar(_Instance);

PROC
LeaderLib_Autosaving_Internal_UpdateDialogVar((INTEGER)_Instance)
AND
DB_GlobalFlag("LeaderLib_AutosavingEnabled")
AND
DB_LeaderLib_AutoSaving_Temp_TimerStarted(1)
AND
DB_LeaderLib_Autosaving_Temp_Countdown(_Minutes)
AND
_Minutes > 1
AND
IntegertoString(_Minutes, _MinutesLeft)
AND
DB_LeaderLib_Autosaving_CurrentInterval(_CurrentGlobalFlag)
AND
DB_LeaderLib_Settings_DialogVariables("CurrentAutosaveInterval", _CurrentValVar)
AND
DB_LeaderLib_Dictionary_Data("LeaderLib.Autosave.IntervalSettings", _EntryIndex, _CurrentGlobalFlag, _DisplayText)
AND
StringConcatenate("Autosaving <font color='#00FF00'>Enabled</font> | Interval: <font color='#00FFFF'>", _DisplayText, _Msg1)
AND
StringConcatenate(_Msg1, "</font> | Time Left: <font color='#FF69B4'>", _Msg2)
AND
StringConcatenate(_Msg2, _MinutesLeft, _Msg3)
AND
StringConcatenate(_Msg3, " Minutes</font>", _Str)
THEN
DialogSetVariableStringForInstance(_Instance, _CurrentValVar, _Str);

PROC
LeaderLib_Autosaving_Internal_UpdateDialogVar((INTEGER)_Instance)
AND
NOT DB_LeaderLib_AutoSaving_Temp_DialogVarSet(1)
AND
DB_GlobalFlag("LeaderLib_AutosavingEnabled")
AND
DB_LeaderLib_AutoSaving_Temp_TimerStarted(1)
AND
DB_LeaderLib_Autosaving_Temp_Countdown(_Minutes)
AND
_Minutes == 1
AND
IntegertoString(_Minutes, _MinutesLeft)
AND
DB_LeaderLib_Autosaving_CurrentInterval(_CurrentGlobalFlag)
AND
DB_LeaderLib_Settings_DialogVariables("CurrentAutosaveInterval", _CurrentValVar)
AND
DB_LeaderLib_Dictionary_Data("LeaderLib.Autosave.IntervalSettings", _EntryIndex, _CurrentGlobalFlag, _DisplayText)
AND
StringConcatenate("Autosaving <font color='#00FF00'>Enabled</font> | Interval: <font color='#00FFFF'>", _DisplayText, _Msg1)
AND
StringConcatenate(_Msg1, "</font> | Time Left: Less Than <font color='#FF69B4'>1 Minute</font>", _Str)
THEN
DialogSetVariableStringForInstance(_Instance, _CurrentValVar, _Str);
DB_LeaderLib_AutoSaving_Temp_DialogVarSet(1);

QRY
LeaderLib_Autosaving_QRY_TimerDone()
AND
NOT DB_LeaderLib_AutoSaving_Temp_TimerStarted(1)
THEN
DB_NOOP(1);

QRY
LeaderLib_Autosaving_QRY_TimerDone()
AND
DB_LeaderLib_AutoSaving_Temp_TimerStarted(1)
AND
DB_LeaderLib_Autosaving_Temp_Countdown(_Minutes)
AND
_Minutes <= 0
THEN
DB_NOOP(1);

PROC
LeaderLib_Autosaving_Internal_UpdateDialogVar((INTEGER)_Instance)
AND
NOT DB_LeaderLib_AutoSaving_Temp_DialogVarSet(1)
AND
DB_GlobalFlag("LeaderLib_AutosavingEnabled")
AND
LeaderLib_Autosaving_QRY_TimerDone()
AND
DB_LeaderLib_Autosaving_CurrentInterval(_CurrentGlobalFlag)
AND
DB_LeaderLib_Settings_DialogVariables("CurrentAutosaveInterval", _CurrentValVar)
AND
DB_LeaderLib_Dictionary_Data("LeaderLib.Autosave.IntervalSettings", _EntryIndex, _CurrentGlobalFlag, _DisplayText)
AND
StringConcatenate("Autosaving <font color='#00FF00'>Enabled</font> | Interval: <font color='#00FFFF'>", _DisplayText, _Msg1)
AND
StringConcatenate(_Msg1, "</font> | <font color='#FFA500'>Timer not started. Enable/Disable autosaving to restart the timer.</font>", _Str)
THEN
DialogSetVariableStringForInstance(_Instance, _CurrentValVar, _Str);
DB_LeaderLib_AutoSaving_Temp_DialogVarSet(1);

PROC
LeaderLib_Autosaving_Internal_UpdateDialogVar((INTEGER)_Instance)
AND
NOT DB_LeaderLib_AutoSaving_Temp_DialogVarSet(1)
AND
NOT DB_GlobalFlag("LeaderLib_AutosavingEnabled")
AND
DB_LeaderLib_Autosaving_CurrentInterval(_CurrentGlobalFlag)
AND
DB_LeaderLib_Settings_DialogVariables("CurrentAutosaveInterval", _CurrentValVar)
AND
DB_LeaderLib_Dictionary_Data("LeaderLib.Autosave.IntervalSettings", _EntryIndex, _CurrentGlobalFlag, _DisplayText)
AND
StringConcatenate("Autosaving <font color='#FF0000'>Disabled</font> | Interval: <font color='#00FFFF'>", _DisplayText, _Str1)
AND
StringConcatenate(_Str1, "</font>", _Str2)
THEN
DialogSetVariableStringForInstance(_Instance, _CurrentValVar, _Str2);
DB_LeaderLib_AutoSaving_Temp_DialogVarSet(1);

PROC
LeaderLib_Autosaving_Internal_UpdateDialogVar((INTEGER)_Instance)
AND
DB_LeaderLib_AutoSaving_Temp_DialogVarSet(1)
THEN
NOT DB_LeaderLib_AutoSaving_Temp_DialogVarSet(1);

PROC
LeaderLib_DynamicMenu_OnEntryValueSet((GUIDSTRING)_Player, "LeaderLib.Autosave.IntervalSettings", (STRING)_DialogVar, (STRING)_AvailableFlag, (INTEGER)_Instance, (STRING)_GlobalFlag, (STRING)_DisplayText)
AND
DB_LeaderLib_Autosaving_CurrentInterval(_GlobalFlag)
AND
StringConcatenate(_DisplayText, " <b>*Current*</b>", _SelectedText)
THEN
DialogSetVariableStringForInstance(_Instance, _DialogVar, _SelectedText);

PROC
LeaderLib_DynamicMenu_OnEntrySelected("LeaderLib.Autosave.IntervalSettings", (GUIDSTRING)_Player, (INTEGER)_Instance, (STRING)_GlobalFlag)
AND
DB_LeaderLib_Autosaving_CurrentInterval(_LastGlobalFlag)
AND
_GlobalFlag != _LastGlobalFlag
THEN
NOT DB_LeaderLib_Autosaving_CurrentInterval(_LastGlobalFlag);
DB_LeaderLib_Autosaving_CurrentInterval(_GlobalFlag);
LeaderLog_Log("DEBUG", "[LeaderLib:Autosaving:OnEntrySelected('LeaderLib.Autosave.IntervalSettings')] Autosave interval global flag [",_GlobalFlag,"] was selected. Previous setting: [",_LastGlobalFlag,"]");
GlobalClearFlag(_LastGlobalFlag);
GlobalSetFlag(_GlobalFlag);
LeaderLib_Autosaving_Internal_UpdateDialogVar(_Instance);
LeaderLib_DynamicMenu_UpdateEntryValue("LeaderLib.Autosave.IntervalSettings", _Instance, _GlobalFlag);
LeaderLib_DynamicMenu_FetchDialogVariableByKey("LeaderLib.Autosave.IntervalSettings", _Instance, _LastGlobalFlag);

//Reset the *Current* text for the previous interval flag
PROC
LeaderLib_DynamicMenu_OnFetchDialogVariable("LeaderLib.Autosave.IntervalSettings", (STRING)_DialogVar, (STRING)_AvailableFlag, (INTEGER)_Instance, (STRING)_EntryKey, (STRING)_DisplayText)
THEN
DialogSetVariableStringForInstance(_Instance, _DialogVar, _DisplayText);
//END_REGION

//REGION COMBAT_SAVE
PROC
LeaderLib_AutoSaving_OnCombatStarted((INTEGER)_CombatID)
AND
DB_GlobalFlag("LeaderLib_AutosaveOnCombatStart")
AND
NOT DB_LeaderLib_AutoSaving_Temp_CombatSave(_CombatID)
AND
LeaderLib_Combat_QRY_HasInvolvedPlayer(_CombatID)
THEN
AutoSave();
DB_LeaderLib_AutoSaving_Temp_CombatSave(_CombatID);

PROC
LeaderLib_AutoSaving_OnCombatEnded((INTEGER)_CombatID)
AND
DB_LeaderLib_AutoSaving_Temp_CombatSave(_CombatID)
THEN
NOT DB_LeaderLib_AutoSaving_Temp_CombatSave(_CombatID);

PROC
LeaderLib_AutoSaving_ClearToggleScriptData()
AND
DB_LeaderLib_AutoSaving_Temp_CombatSave(_CombatID)
THEN
NOT DB_LeaderLib_AutoSaving_Temp_CombatSave(_CombatID);
//END_REGION

//REGION PAUSING
PROC
LeaderLib_AutoSaving_OnCombatStarted((INTEGER)_CombatID)
AND
DB_GlobalFlag("LeaderLib_DisableAutosavingInCombat")
AND
LeaderLib_Combat_QRY_HasInvolvedPlayer(_CombatID)
THEN
TimerPause("LeaderLib_Timers_Autosaving");
DB_LeaderLib_AutoSaving_Temp_TimerPaused(1);

PROC
LeaderLib_AutoSaving_OnCombatEnded((INTEGER)_CombatID)
AND
DB_LeaderLib_AutoSaving_Temp_TimerPaused(1)
THEN
TimerCancel("LeaderLib_Timers_Autosaving_ResetPause");
TimerLaunch("LeaderLib_Timers_Autosaving_ResetPause", 250);

IF
TimerFinished("LeaderLib_Timers_Autosaving_ResetPause")
AND
DB_LeaderLib_AutoSaving_Temp_TimerPaused(1)
AND
NOT LeaderLib_Combat_QRY_AnyPlayerIsInCombat()
THEN
NOT DB_LeaderLib_AutoSaving_Temp_TimerPaused(1);
TimerUnpause("LeaderLib_Timers_Autosaving");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LeaderLib_11__Start"
