Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION

//Added to when dialog is starting
IF
DB_DialogNPCs(_Instance, _Trader, _Index)
AND
ObjectIsCharacter((CHARACTERGUID)_Trader, 1)
THEN
LeaderLib_Treasure_Internal_CheckForTraderGeneration(_Trader);

PROC
LeaderLib_Treasure_Internal_CheckForTraderGeneration((CHARACTERGUID)_Trader)
AND
DB_LeaderLib_Traders_Active(_Trader, _TraderID, _Level)
AND
LeaderLib_Treasure_QRY_ObjectCanStartGeneration((GUIDSTRING)_Trader)
AND
DB_LeaderLib_Treasure_RegisteredTraderTreasure(_TreasureID, _TraderID)
AND
LeaderLib_Treasure_QRY_TreasureHasGenerationType(_TreasureID, "DIALOG_STARTED")
THEN
//LeaderLog_Log("DEBUG","[LeaderLib:TreasureSystem:DialogStarted] Adding trader to generation queue with TreasureID [",_TreasureID,"].");
LeaderLib_Treasure_AddToGenerationQueue(_Trader, _TreasureID, "DIALOG_STARTED");

//Called when dialog ends
PROC
ProcSetHasMetDBEntry((STRING)_Dialog, (GUIDSTRING)_Trader, (CHARACTERGUID)_Player)
AND
ObjectIsCharacter((CHARACTERGUID)_Trader, 1)
AND
DB_LeaderLib_Traders_Active(_Trader, _TraderID, _Level)
AND
LeaderLib_Treasure_QRY_ObjectCanStartGeneration((GUIDSTRING)_Trader)
AND
DB_LeaderLib_Treasure_RegisteredTraderTreasure(_TreasureID, _TraderID)
AND
LeaderLib_Treasure_QRY_TreasureHasGenerationType(_TreasureID, "DIALOG_ENDED")
THEN
//LeaderLog_Log("DEBUG","[LeaderLib:TreasureSystem:DialogEnded] Adding trader to generation queue with TreasureID [",_TreasureID,"].");
LeaderLib_Treasure_AddToGenerationQueue(_Trader, _TreasureID, "DIALOG_ENDED");
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LeaderLib_19_ToggledScripts"