Version 1
SubGoalCombiner SGC_AND
INITSECTION
// To intercept a dialog request, define one of these:
//   PROC_GLOBAL_DialogStartRequested((GUIDSTRING)_Target,(GUIDSTRING)_Source)
//   PROC_GLOBAL_DialogStartRequested_AfterGenerics((GUIDSTRING)_Target,(GUIDSTRING)_Source)
// The former is called before any generics (low attitude etc) are checked, but still after
// speaker availability checks are confirmed (not dead, not in combat).
// Start your own dialog in one of those PROCs if the conditions are right, and set
// DB_FoundDialog(_Target,_Source) if you want to prevent the default dialog to be searched/started
//

DB_AnimalFoodVars("FoodTemplate1");
DB_AnimalFoodVars("FoodTemplate2");
DB_AnimalFoodVars("FoodTemplate3");
DB_AnimalFoodVars("FoodTemplate4");
DB_AnimalFoodVars("FoodTemplate5");
DB_AnimalFoodVars("FoodTemplate6");

DB_CustomChildDialog("nullstring");
KBSECTION
//REGION HasMet
IF
DB_HasMetCharactersToCheck(_NPC,_PC)
THEN
ProcSetHasMetTag(_Npc,(CHARACTERGUID)_PC);

IF
DB_HasMetCharactersToCheck(_NPC,_PC)
THEN
NOT DB_HasMetCharactersToCheck(_NPC,_PC);

PROC
Proc_Dialogs_CharactersHaveMetInThisShape((GUIDSTRING)_Npc,(CHARACTERGUID)_Player)
THEN
SetTag(_NPC,"HasMet");

PROC
ProcSetHasMetTag((GUIDSTRING)_Npc,(CHARACTERGUID)_Player)
AND
DB_CharacterPolymorphedInto(_Player,(STRING)_Race)
AND
DB_HasMet(_Npc,_Player,(STRING)_Race)
THEN
Proc_Dialogs_CharactersHaveMetInThisShape(_Npc,_Player);

PROC
ProcSetHasMetTag((GUIDSTRING)_Npc,(CHARACTERGUID)_Player)
AND
NOT DB_CharacterPolymorphedInto(_Player,_)
AND
DB_HasMet(_Npc,_Player,"")
THEN
Proc_Dialogs_CharactersHaveMetInThisShape(_Npc,_Player);

IF
DialogEnded(_Diag,_Inst)
AND
DB_DialogNPCs(_Inst,_Npc,_)
AND
DB_DialogPlayers(_Inst,_Player,_)
THEN
ProcSetHasMetDBEntry(_Diag,(GUIDSTRING)_Npc,(CHARACTERGUID)_Player);

PROC
ProcSetHasMetDBEntry((STRING)_Diag,(GUIDSTRING)_Npc,(CHARACTERGUID)_Player)
AND
DB_CharacterPolymorphedInto(_Player,_Race)
THEN
DB_HasMet(_Npc,_Player,_Race);

PROC
ProcSetHasMetDBEntry((STRING)_Diag,(GUIDSTRING)_Npc,(CHARACTERGUID)_Player)
AND
NOT DB_CharacterPolymorphedInto(_Player,_)
THEN
DB_HasMet(_Npc,_Player,"");


IF
DialogEnded(_Diag,_Inst)
AND
DB_DialogNPCs(_Inst,_Npc,_)
THEN
ClearTag(_Npc,"HasMet");
//END_REGION

//REGION Tag Priority Dialogs
PROC
PROC_GLOBAL_DialogStartRequested((GUIDSTRING)_NPC,(GUIDSTRING)_Player)
THEN
PROC_GLO_Origins_CheckTagPriorityDialogs(_NPC,_Player);

PROC
PROC_GLO_Origins_CheckTagPriorityDialogs((GUIDSTRING)_NPC,(GUIDSTRING)_Player)
AND
DB_TagPriorityDialog(_NPC, (STRING)_Dialog, (STRING)_PriorityTag)
AND
NOT DB_GLO_OriginsFoundTagPriorityPlayer(1)
AND
IsTagged(_Player,_PriorityTag,0)
AND
DB_IsPlayer(_OtherPlayer)
AND
QRY_SpeakerIsAvailableAndInDialogRange(_OtherPlayer, (CHARACTERGUID)_Player)
AND
_OtherPlayer != _Player
AND
CharacterGetReservedUserID((CHARACTERGUID)_Player,_ID)
AND
CharacterGetReservedUserID((CHARACTERGUID)_OtherPlayer,_ID)
AND
IsTagged(_OtherPlayer,_PriorityTag,1)
AND
HasLineOfSight(_NPC, _OtherPlayer, 1)
THEN
DB_GLO_OriginsFoundTagPriorityPlayer(1);
ProcForceStopDialog(_NPC);
Proc_StartDialog(0,_Dialog,_NPC,_OtherPlayer);
PROC_GLO_Origins_ClearTaggedPrioritiesForDialog(_Dialog);

PROC
PROC_GLO_Origins_ClearTaggedPrioritiesForDialog((STRING)_Dialog)
AND
DB_TagPriorityDialog(_NPC,_Dialog,_PriorityTag)
THEN
NOT DB_TagPriorityDialog(_NPC,_Dialog,_PriorityTag);

PROC
PROC_GLO_Origins_CheckTagPriorityDialogs((GUIDSTRING)_NPC,(GUIDSTRING)_Player)
THEN
NOT DB_GLO_OriginsFoundTagPriorityPlayer(1);

//END_REGION


//REGION The Only Allowed Dialog Starting
//Dummy definition
QRY
QRY_GLOBAL_CrimeDialogIntercept_Wrapper((INTEGER)_Automated, (GUIDSTRING)_Speaker1, (GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5, (GUIDSTRING)_Speaker6)
AND
0 == 1
THEN
DB_NOOP(1);

//Dummy definition
QRY
QRY_PlayOriginMoment((STRING)_Dialog, (GUIDSTRING)_MainNPC, (GUIDSTRING)_Player)
AND
0 == 1
THEN
DB_NOOP(1);

QRY
QRY_StartDialog(1,(STRING)_Dialog,(GUIDSTRING)_Speaker1)
AND
QRY_SpeakerIsAvailable(_Speaker1,1)
AND
StartDialog_Internal(_Dialog,0,_Speaker1,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1);

QRY
QRY_StartDialog(1,(STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2)
AND
QRY_SpeakerIsAvailable(_Speaker1,1)
AND
QRY_SpeakerIsAvailable(_Speaker2,1)
AND
StartDialog_Internal(_Dialog,0,_Speaker1,_Speaker2,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2);

QRY
QRY_StartDialog(1,(STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3)
AND
QRY_SpeakerIsAvailable(_Speaker1,1)
AND
QRY_SpeakerIsAvailable(_Speaker2,1)
AND
QRY_SpeakerIsAvailable(_Speaker3,1)
AND
StartDialog_Internal(_Dialog,0,_Speaker1,_Speaker2,_Speaker3,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3);

QRY
QRY_StartDialog(1,(STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4)
AND
QRY_SpeakerIsAvailable(_Speaker1,1)
AND
QRY_SpeakerIsAvailable(_Speaker2,1)
AND
QRY_SpeakerIsAvailable(_Speaker3,1)
AND
QRY_SpeakerIsAvailable(_Speaker4,1)
AND
StartDialog_Internal(_Dialog,0,_Speaker1,_Speaker2,_Speaker3,_Speaker4,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4);

QRY
QRY_StartDialog(1,(STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4,(GUIDSTRING)_Speaker5)
AND
QRY_SpeakerIsAvailable(_Speaker1,1)
AND
QRY_SpeakerIsAvailable(_Speaker2,1)
AND
QRY_SpeakerIsAvailable(_Speaker3,1)
AND
QRY_SpeakerIsAvailable(_Speaker4,1)
AND
QRY_SpeakerIsAvailable(_Speaker5,1)
AND
StartDialog_Internal(_Dialog,0,_Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,NULL_00000000-0000-0000-0000-000000000000,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5,NULL_00000000-0000-0000-0000-000000000000);

QRY
QRY_StartDialog(1,(STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4,(GUIDSTRING)_Speaker5,(GUIDSTRING)_Speaker6)
AND
QRY_SpeakerIsAvailable(_Speaker1,1)
AND
QRY_SpeakerIsAvailable(_Speaker2,1)
AND
QRY_SpeakerIsAvailable(_Speaker3,1)
AND
QRY_SpeakerIsAvailable(_Speaker4,1)
AND
QRY_SpeakerIsAvailable(_Speaker5,1)
AND
QRY_SpeakerIsAvailable(_Speaker6,1)
AND
StartDialog_Internal(_Dialog,0,_Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,_Speaker6,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5, (GUIDSTRING)_Speaker6);

QRY
QRY_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_Speaker1)
AND
QRY_SpeakerIsAvailable(_Speaker1)
AND
QRY_PrepForInteractiveDialog(_Speaker1)
AND
StartDialog_Internal(_Dialog,1,_Speaker1,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker1,1);
ProcItemSetInvulnerableForDialog(_Speaker1);

QRY
QRY_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2)
AND
QRY_SpeakerIsAvailable(_Speaker1)
AND
QRY_SpeakerIsAvailable(_Speaker2)
AND
QRY_PrepForInteractiveDialog(_Speaker1)
AND
QRY_PrepForInteractiveDialog(_Speaker2)
AND
StartDialog_Internal(_Dialog,1,_Speaker1,_Speaker2,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2);
ProcFaceCharacter(_Speaker1,_Speaker2);
ProcFaceCharacter(_Speaker2,_Speaker1);
ProcItemSetInvulnerableForDialog(_Speaker1);
ProcItemSetInvulnerableForDialog(_Speaker2);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker1,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker2,1);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker2);

QRY
QRY_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3)
AND
QRY_SpeakerIsAvailable(_Speaker1)
AND
QRY_SpeakerIsAvailable(_Speaker2)
AND
QRY_SpeakerIsAvailable(_Speaker3)
AND
QRY_PrepForInteractiveDialog(_Speaker1)
AND
QRY_PrepForInteractiveDialog(_Speaker2)
AND
QRY_PrepForInteractiveDialog(_Speaker3)
AND
StartDialog_Internal(_Dialog,1,_Speaker1,_Speaker2,_Speaker3,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3);
ProcFaceCharacter(_Speaker1,_Speaker3);
ProcFaceCharacter(_Speaker2,_Speaker3);
ProcFaceCharacter(_Speaker3,_Speaker1);
ProcItemSetInvulnerableForDialog(_Speaker1);
ProcItemSetInvulnerableForDialog(_Speaker2);
ProcItemSetInvulnerableForDialog(_Speaker3);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker1,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker2,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker3,1);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker2);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker3);


QRY
QRY_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4)
AND
QRY_SpeakerIsAvailable(_Speaker1)
AND
QRY_SpeakerIsAvailable(_Speaker2)
AND
QRY_SpeakerIsAvailable(_Speaker3)
AND
QRY_SpeakerIsAvailable(_Speaker4)
AND
QRY_PrepForInteractiveDialog(_Speaker1)
AND
QRY_PrepForInteractiveDialog(_Speaker2)
AND
QRY_PrepForInteractiveDialog(_Speaker3)
AND
QRY_PrepForInteractiveDialog(_Speaker4)
AND
StartDialog_Internal(_Dialog,1,_Speaker1,_Speaker2,_Speaker3,_Speaker4,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4);
ProcFaceCharacter(_Speaker1,_Speaker4);
ProcFaceCharacter(_Speaker2,_Speaker4);
ProcFaceCharacter(_Speaker3,_Speaker4);
ProcFaceCharacter(_Speaker4,_Speaker1);
ProcItemSetInvulnerableForDialog(_Speaker1);
ProcItemSetInvulnerableForDialog(_Speaker2);
ProcItemSetInvulnerableForDialog(_Speaker3);
ProcItemSetInvulnerableForDialog(_Speaker4);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker1,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker2,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker3,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker4,1);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker2);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker3);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker4);


QRY
QRY_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4,(GUIDSTRING)_Speaker5)
AND
QRY_SpeakerIsAvailable(_Speaker1)
AND
QRY_SpeakerIsAvailable(_Speaker2)
AND
QRY_SpeakerIsAvailable(_Speaker3)
AND
QRY_SpeakerIsAvailable(_Speaker4)
AND
QRY_SpeakerIsAvailable(_Speaker5)
AND
QRY_PrepForInteractiveDialog(_Speaker1)
AND
QRY_PrepForInteractiveDialog(_Speaker2)
AND
QRY_PrepForInteractiveDialog(_Speaker3)
AND
QRY_PrepForInteractiveDialog(_Speaker4)
AND
QRY_PrepForInteractiveDialog(_Speaker5)
AND
StartDialog_Internal(_Dialog,1,_Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,NULL_00000000-0000-0000-0000-000000000000,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5);
ProcFaceCharacter(_Speaker1,_Speaker5);
ProcFaceCharacter(_Speaker2,_Speaker5);
ProcFaceCharacter(_Speaker3,_Speaker5);
ProcFaceCharacter(_Speaker4,_Speaker5);
ProcFaceCharacter(_Speaker5,_Speaker1);
ProcItemSetInvulnerableForDialog(_Speaker1);
ProcItemSetInvulnerableForDialog(_Speaker2);
ProcItemSetInvulnerableForDialog(_Speaker3);
ProcItemSetInvulnerableForDialog(_Speaker4);
ProcItemSetInvulnerableForDialog(_Speaker5);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker1,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker2,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker3,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker4,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker5,1);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker2);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker3);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker4);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker5);

QRY
QRY_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4,(GUIDSTRING)_Speaker5,(GUIDSTRING)_Speaker6)
AND
QRY_SpeakerIsAvailable(_Speaker1)
AND
QRY_SpeakerIsAvailable(_Speaker2)
AND
QRY_SpeakerIsAvailable(_Speaker3)
AND
QRY_SpeakerIsAvailable(_Speaker4)
AND
QRY_SpeakerIsAvailable(_Speaker5)
AND
QRY_SpeakerIsAvailable(_Speaker6)
AND
QRY_PrepForInteractiveDialog(_Speaker1)
AND
QRY_PrepForInteractiveDialog(_Speaker2)
AND
QRY_PrepForInteractiveDialog(_Speaker3)
AND
QRY_PrepForInteractiveDialog(_Speaker4)
AND
QRY_PrepForInteractiveDialog(_Speaker5)
AND
QRY_PrepForInteractiveDialog(_Speaker6)
AND
StartDialog_Internal(_Dialog,1,_Speaker1,_Speaker2,_Speaker3,_Speaker4,_Speaker5,_Speaker6,1)
THEN
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2, (GUIDSTRING)_Speaker3, (GUIDSTRING)_Speaker4, (GUIDSTRING)_Speaker5, (GUIDSTRING)_Speaker6);
ProcFaceCharacter(_Speaker1,_Speaker6);
ProcFaceCharacter(_Speaker2,_Speaker6);
ProcFaceCharacter(_Speaker3,_Speaker6);
ProcFaceCharacter(_Speaker4,_Speaker6);
ProcFaceCharacter(_Speaker5,_Speaker6);
ProcFaceCharacter(_Speaker6,_Speaker1);
ProcItemSetInvulnerableForDialog(_Speaker1);
ProcItemSetInvulnerableForDialog(_Speaker2);
ProcItemSetInvulnerableForDialog(_Speaker3);
ProcItemSetInvulnerableForDialog(_Speaker4);
ProcItemSetInvulnerableForDialog(_Speaker5);
ProcItemSetInvulnerableForDialog(_Speaker6);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker1,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker2,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker3,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker4,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker5,1);
CharacterMakeStoryNpc((CHARACTERGUID)_Speaker6,1);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker2);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker3);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker4);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker5);
DB_HasMetCharactersToCheck(_Speaker1,_Speaker6);

QRY
QRY_PrepForInteractiveDialog((GUIDSTRING)_Speaker)
THEN
DialogRequestStop(_Speaker);
//END_REGION

//REGION Setting Items in Dialog Invulnerable 
PROC
ProcItemSetInvulnerableForDialog((GUIDSTRING)_Speaker)
AND
ObjectIsItem(_Speaker,1)
THEN
SetInvulnerable_UseProcSetInvulnerable(_Speaker,1);
//END_REGION

//REGION Flags Set Up The Start Of Dialog
PROC
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1)
THEN
DB_NOOP(1);

PROC
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2)
THEN
DB_NOOP(1);

PROC
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3)
THEN
DB_NOOP(1);

PROC
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4)
THEN
DB_NOOP(1);

PROC
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4,(GUIDSTRING)_Speaker5)
THEN
DB_NOOP(1);

PROC
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4,(GUIDSTRING)_Speaker5,(GUIDSTRING)_Speaker6)
THEN
DB_NOOP(1);
//END_REGION

IF	
DialogEnded(_,_Inst)
THEN
DB_MarkedForDelete(_Inst);
ProcClearDialogFlagsForPlayers(_Inst);
ProcClearDialogFlagsForNPCs(_Inst);

//REGION Animal Food Dialogs
PROC
ProcSetAnimalFoodEvents((CHARACTERGUID)_Player,_)
THEN
SetVarInteger(_Player,"GEN_HasAnimalFood",0);

PROC
ProcSetAnimalFoodEvents((CHARACTERGUID)_Player,(CHARACTERGUID)_Npc)
AND
DB_AnimalFoodVars(_Var)
AND
GetVarFixedString(_Npc,_Var,_TempVal)
AND
_TempVal!="DONTEAT"
AND
QryItemTemplateInMagicPockets(_Player,_tempVal)
THEN
SetVarInteger(_Player,"GEN_HasAnimalFood",1);

PROC
ProcGiveAnimalFood((CHARACTERGUID)_Player,(CHARACTERGUID)_Npc)
AND
DB_AnimalFoodVars(_Var)
AND
GetVarFixedString(_Npc,_Var,_TempVal)
AND
_TempVal!="DONTEAT"
AND
NOT DB_FoodGiven(_Player)
AND
QryRemoveItemTemplateFromMagicPockets(_Player,_TempVal,1)
THEN
DB_FoodGiven(_Player);
CharacterAddAttitudeTowardsPlayer(_Npc,_Player,5);

PROC
ProcGiveAnimalFood(_Player,_Npc)
THEN
NOT DB_FoodGiven(_Player);

IF
ObjectFlagSet("GEN_PlayerGivesFood",_Player,_Inst)
AND
DB_DialogNPCs(_Inst,_Npc,1)
THEN
ProcGiveAnimalFood((CHARACTERGUID)_Player,(CHARACTERGUID)_Npc);
//END_REGION

//REGION Dialogs that must not be interceptable by custom scripts
//END_REGION

//REGION Custom script dialog Intercepts
PROC
PROC_GLOBAL_DialogStartRequested((GUIDSTRING)_Npc,(GUIDSTRING)_Player)
THEN
DB_NOOP(1);

PROC
SelectAndStartDialog((GUIDSTRING)_Player,(GUIDSTRING)_Npc) 
THEN
// Reverse order of parameters to be consisted with DialogStartRequested()
PROC_GLOBAL_DialogStartRequested(_Npc,_Player);
//END_REGION

//REGION Hostile Dialog
PROC
StartHostileDialog((GUIDSTRING)_Player,(GUIDSTRING)_Npc)
AND
IsTagged(_Npc,"ANIMAL",1)
THEN
DB_FoundDialog(_Npc,_Player);
ProcSetAnimalFoodEvents((CHARACTERGUID)_Player,(CHARACTERGUID)_Npc);
Proc_StartDialog(0,"GEB_Default_AnimalHostile",_Npc,_Player); //TODO Change this Dialog to a new Style Dialog

PROC
StartHostileDialog((GUIDSTRING)_Player,(GUIDSTRING)_Npc)
AND
IsTagged(_Npc,"ANIMAL",0)
THEN
StartHostileDialog_1(_Player,_Npc);

PROC
StartHostileDialog_1((GUIDSTRING)_Player,(GUIDSTRING)_Npc)
AND
DB_HostileDialog(_Npc,(STRING)_Dialog)
THEN
DB_FoundDialog(_Npc,_Player);
Proc_StartDialog(0,_Dialog,_Npc,_Player);

PROC
StartHostileDialog_1((GUIDSTRING)_Player,(GUIDSTRING)_Npc)
AND
NOT DB_FoundDialog(_Npc,_Player)
THEN
DB_FoundDialog(_Npc,_Player);
Proc_StartDialog(0,"GEB_Default_Hostile",_Npc,_Player);
//END_REGION

//REGION Companion Redirects & ADs
PROC
SelectAndStartDialog((GUIDSTRING)_Player,(GUIDSTRING)_OtherPlayer) 
AND
NOT DB_FoundDialog(_OtherPlayer,_Player)
AND
DB_IsPlayer((CHARACTERGUID)_Player)
AND
DB_IsPlayer((CHARACTERGUID)_OtherPlayer)
AND
CharacterGetReservedUserID(_Player,_PID)
AND
CharacterGetReservedUserID(_OtherPlayer,_OPID)
AND
_PID != _OPID
THEN
Proc_StartDialog(1,"GLO_AD_CompanionCantTalk",_OtherPlayer);
DB_FoundDialog(_OtherPlayer,_Player);

PROC
SelectAndStartDialog((GUIDSTRING)_Player,(GUIDSTRING)_OtherPlayer) 
AND
NOT DB_FoundDialog(_OtherPlayer,_Player)
AND
DB_IsPlayer((CHARACTERGUID)_Player)
AND
DB_IsPlayer((CHARACTERGUID)_OtherPlayer)
AND
IsTagged(_Player,"AVATAR",0)
AND
IsTagged(_OtherPlayer,"AVATAR",0)
AND
DB_CompanionAvatarBond(_OtherPlayer,_Avatar)
AND
IsTagged(_Avatar,"AVATAR",1)
AND
CharacterGetReservedUserID(_Avatar,_PID)
AND
CharacterGetReservedUserID(_OtherPlayer,_PID)
AND
QRY_SpeakerIsAvailableAndInDialogRange(_Avatar,_OtherPlayer)
THEN
SelectAndStartDialog(_Avatar,_OtherPlayer);
MakePlayerActive(_Avatar);
DB_FoundDialog(_OtherPlayer,_Player);

PROC
SelectAndStartDialog((GUIDSTRING)_Player,(GUIDSTRING)_OtherPlayer) 
AND
NOT DB_FoundDialog(_OtherPlayer,_Player)
AND
DB_IsPlayer((CHARACTERGUID)_Player)
AND
DB_IsPlayer((CHARACTERGUID)_OtherPlayer)
AND
IsTagged(_Player,"AVATAR",0)
AND
IsTagged(_OtherPlayer,"AVATAR",0)
THEN
Proc_StartDialog(1,"GLO_AD_CompanionCantTalk",_OtherPlayer);
DB_FoundDialog(_OtherPlayer,_Player);

PROC
SelectAndStartDialog((GUIDSTRING)_Player,(GUIDSTRING)_Companion) 
AND
NOT DB_FoundDialog(_Companion,_Player)
AND
DB_GLO_PartyMembers_RecruiteeAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Player2)
AND
_Player != _Player2
THEN
Proc_StartDialog(0,"GLO_NonBondedCompanionDialog",_Companion,_Player);
DB_FoundDialog(_Companion,_Player);

PROC
SelectAndStartDialog((GUIDSTRING)_Player,(GUIDSTRING)_Companion) 
AND
NOT DB_FoundDialog(_Companion,_Player)
AND
DB_RelationshipDialogs((CHARACTERGUID)_Companion,_Dialog)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Player)
AND
QRY_StartDialog(0,_Dialog,_Companion,_Player)
THEN
NOT DB_RelationshipDialogs(_Companion,_Dialog);
DB_FoundDialog(_Companion,_Player);

PROC
SelectAndStartDialog((GUIDSTRING)_Player,(GUIDSTRING)_Npc) 
AND
IsTagged(_NPC,"ANIMAL",0)
AND
NOT DB_FoundDialog(_Npc,_Player)
AND
CharacterGetAttitudeTowardsPlayer((CHARACTERGUID)_Npc,(CHARACTERGUID)_Player,_Att)
AND
_Att <= -45
AND
NOT _Npc.DB_IsPlayer()
AND
NOT DB_NoLowAttitudeDialog(_Npc)
THEN
StartHostileDialog(_Player,_Npc);
DB_FoundDialog(_Npc,_Player);
//END_REGION

//REGION Threatened Dialog
PROC
SelectAndStartDialog((GUIDSTRING)_Player,(GUIDSTRING)_NPC)
AND
NOT DB_FoundDialog(_NPC,_Player)
AND
CharacterIsInFightMode((CHARACTERGUID)_Player,1)
AND
NOT DB_IsPlayer((CHARACTERGUID)_NPC)
AND
NOT DB_BlockThreatenedDialog(_NPC)
AND
IsTagged(_NPC,"ANIMAL",0)
AND
NOT DB_CombatCharacters(_Player,_)
THEN
StartThreatenedDialog(_NPC,_Player);

PROC 
StartThreatenedDialog((GUIDSTRING)_NPC,(GUIDSTRING)_Player)
AND
CharacterCanTrade((CHARACTERGUID)_NPC,_CanTrade)
THEN
DB_FoundDialog(_NPC,_Player);
Proc_StartDialog(0,"GEB_Warning_Weapons_StartDialog",_NPC,_Player);
CharacterSetCanTrade(_NPC,0);
DB_CouldTrade(_NPC,_CanTrade);

IF
DialogEnded("GEB_Warning_Weapons_StartDialog",_Inst)
AND
DB_DialogNPCs(_Inst,_NPC,1)
AND
DB_CouldTrade((CHARACTERGUID)_NPC,_CanTrade)
THEN
NOT DB_CouldTrade(_NPC,_CanTrade);
CharacterSetCanTrade((CHARACTERGUID)_NPC,_CanTrade);

//END_REGION

//REGION Script intercept after generics
PROC
PROC_GLOBAL_DialogStartRequested_AfterGenerics((GUIDSTRING)_Npc,(GUIDSTRING)_Player)
THEN
DB_NOOP(1);

PROC
SelectAndStartDialog((GUIDSTRING)_Player,(GUIDSTRING)_Npc) 
AND 
NOT DB_FoundDialog(_Npc,_Player) 
THEN
PROC_GLOBAL_DialogStartRequested_AfterGenerics(_Npc,_Player);
//END_REGION

//REGION Dialog Start by clicking on NPC
PROC	
SelectAndStartDialog((GUIDSTRING)_Player,(GUIDSTRING)_Npc) 
AND 
NOT DB_FoundDialog(_Npc,_Player) 
THEN
DB_FoundDialog(_Npc,_Player);
NPCDialogStartRequested(_Npc,_Player);// start the default dialog

PROC
SelectAndStartDialog((GUIDSTRING)_Player,(GUIDSTRING)_Npc) 
THEN
NOT DB_FoundDialog(_Npc,_Player);

IF	
DialogStartRequested(_Npc2,_Npc1)
AND
QRY_SpeakerIsAvailable(_Npc1)
AND
QRY_SpeakerIsAvailable(_Npc2)
THEN
SelectAndStartDialog(_Npc1,_Npc2);

//END_REGION

IF
CharacterDying(_Char)
THEN
DialogRequestStop(_Char);

IF
CharacterUnlockedTalent(_Char,"AnimalEmpathy")
THEN
SetTag(_char,"PETPAL");

IF
CharacterLockedTalent(_Char,"AnimalEmpathy")
THEN
ClearTag(_char,"PETPAL");

IF
DB_IsPlayer(_Char)
AND
CharacterHasTalent(_Char,"AnimalEmpathy",1)
THEN
SetTag(_char,"PETPAL");

IF
CharacterCreationFinished(_Char)
AND
_Char != NULL_00000000-0000-0000-0000-000000000000
AND
CharacterHasTalent(_Char,"AnimalEmpathy",0)
THEN
ClearTag(_char,"PETPAL");

//REGION Child dialogs
IF
ChildDialogRequested(_ChildDialog,_ParentInstance,_TargetInstance)
AND
NOT DB_CustomChildDialog(_ChildDialog)
AND
DB_DialogPlayers(_ParentInstance,_Player,1)
THEN
ProcStartChildDialog(_ChildDialog,_ParentInstance,_TargetInstance);

PROC
ProcStartChildDialog((STRING)_ChildDialog,(INTEGER)_ParentInstance,(INTEGER)_TargetInstance)
THEN
DB_TargetInstancespeakers(_TargetInstance,1,(CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000);
DB_TargetInstancespeakers(_TargetInstance,2,(CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000);
DB_TargetInstancespeakers(_TargetInstance,3,(CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000);
DB_TargetInstancespeakers(_TargetInstance,4,(CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000);

PROC
ProcStartChildDialog((STRING)_ChildDialog,(INTEGER)_ParentInstance,(INTEGER)_TargetInstance)
AND
DB_DialogNumPlayers(_ParentInstance,_NumPlayers)
AND
DB_DialogNumNPCs(_ParentInstance,_NumNPCs)
AND
IntegerSum(_NumPlayers,_NumNPCs,_Total)
AND
_Total > 4
THEN
DebugBreak("too many speakers to fit in the child dialog! Need custom scripting and/or extension on speaker limit");

PROC
ProcStartChildDialog(_,(INTEGER)_ParentInstance,(INTEGER)_TargetInstance)
AND
DB_DialogNPCs(_ParentInstance,_NPC,_Index)
THEN
NOT DB_TargetInstancespeakers(_TargetInstance,_Index,NULL_00000000-0000-0000-0000-000000000000);
DB_TargetInstancespeakers(_TargetInstance,_Index,(CHARACTERGUID)_NPC);

PROC
ProcStartChildDialog(_,(INTEGER)_ParentInstance,(INTEGER)_TargetInstance)
AND
DB_DialogPlayers(_ParentInstance,_Player,_Index)
AND
DB_DialogNumNPCs(_ParentInstance,_NumNPCs)
AND
IntegerSum(_NumNPCs,_Index,_PlayerIndex)
THEN
NOT DB_TargetInstancespeakers(_TargetInstance,_PlayerIndex,NULL_00000000-0000-0000-0000-000000000000);
DB_TargetInstancespeakers(_TargetInstance,_PlayerIndex,(CHARACTERGUID)_Player);

PROC
ProcStartChildDialog(_ChildDialog,(INTEGER)_ParentInstance,(INTEGER)_TargetInstance)
AND
DB_TargetInstancespeakers(_TargetInstance,1,_Speaker1)
AND
DB_TargetInstancespeakers(_TargetInstance,2,_Speaker2)
AND
DB_TargetInstancespeakers(_TargetInstance,3,_Speaker3)
AND
DB_TargetInstancespeakers(_TargetInstance,4,_Speaker4)
AND
DialogStartChildDialog(_ChildDialog,_ParentInstance,_TargetInstance,_Speaker1,_Speaker2,_Speaker3,_Speaker4,_)
THEN
DB_NOOP(1);

PROC
ProcStartChildDialog(_ChildDialog,(INTEGER)_ParentInstance,(INTEGER)_TargetInstance)
AND
DB_TargetInstancespeakers(_TargetInstance,_Index,_Speaker)
THEN
NOT DB_TargetInstancespeakers(_TargetInstance,_Index,_Speaker);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__AAA_Z_LeaderLib_TopToggledScripts"