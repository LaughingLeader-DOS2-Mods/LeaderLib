if Data == nil then 
	Data = {}
end

Data.SkillRequirementTags = {}

Data.OriginalSkillTiers = {}
---@type table<string,boolean>
Data.ObjectStats = {}
--Valid items with a Stats table can still have an empty StatsId for some reason.
--Data.ObjectStats = {[""] = true}

---@type Enum
Data.DamageTypes = {
	None = 0,
	Physical = 1,
	Piercing = 2,
	Corrosive = 3,
	Magic = 4,
	Chaos = 5,
	Fire = 6,
	Air = 7,
	Water = 8,
	Earth = 9,
	Poison = 10,
	Shadow = 11,
	[0] = "None",
	[1] = "Physical",
	[2] = "Piercing",
	[3] = "Corrosive",
	[4] = "Magic",
	[5] = "Chaos",
	[6] = "Fire",
	[7] = "Air",
	[8] = "Water",
	[9] = "Earth",
	[10] = "Poison",
	[11] = "Shadow",
}

Classes.Enum:Create(Data.DamageTypes)
---@deprecated
Data.DamageTypeEnums = Data.DamageTypes

Data.DamageTypeToResistance = {
	Physical = "PhysicalResistance",
	Piercing = "PiercingResistance",
	Corrosive = "CorrosiveResistance",
	Magic = "MagicResistance",
	Air = "AirResistance",
	Earth = "EarthResistance",
	Fire = "FireResistance",
	Poison = "PoisonResistance",
	Shadow = "ShadowResistance", -- Technically Tenebrium
	Water = "WaterResistance",
	Sulfuric = "CustomResistance",
}

--Not real resistances
Data.DamageTypeToResistanceWithExtras = {
	None = "PureResistance",
	Chaos = "ChaosResistance",
	Sentinel = "SentinelResistance",
}

setmetatable(Data.DamageTypeToResistanceWithExtras, {__index = Data.DamageTypeToResistance})

Data.DamageTypeToArmorType = {
	Air = "CurrentMagicArmor",
	Earth ="CurrentMagicArmor",
	Fire = "CurrentMagicArmor",
	Magic = "CurrentMagicArmor",
	Poison = "CurrentMagicArmor",
	Water = "CurrentMagicArmor",
	Corrosive = "CurrentArmor",
	Physical = "CurrentArmor",
	Sulfuric = "CurrentArmor", -- TODO Does this affect armor?
}

---@type Enum
Data.EquipmentSlots = {
	Helmet = 0,
	Breast = 1,
	Leggings = 2,
	Weapon = 3,
	Shield = 4,
	Ring = 5,
	Belt = 6,
	Boots = 7,
	Gloves = 8,
	Amulet = 9,
	Ring2 = 10,
	Wings = 11,
	Horns = 12,
	Overhead = 13,
	Sentinel = 14,
	[0] = "Helmet",
	[1] = "Breast",
	[2] = "Leggings",
	[3] = "Weapon",
	[4] = "Shield",
	[5] = "Ring",
	[6] = "Belt",
	[7] = "Boots",
	[8] = "Gloves",
	[9] = "Amulet",
	[10] = "Ring2",
	[11] = "Wings",
	[12] = "Horns",
	[13] = "Overhead",
	[14] = "Sentinel",
}

Classes.Enum:Create(Data.EquipmentSlots)
---@deprecated
Data.EquipmentSlotNames = Data.EquipmentSlots

---@type Enum
Data.VisibleEquipmentSlots = {
	[0]="Helmet",
	[1]="Breast",
	[2]="Leggings",
	[3]="Weapon",
	[4]="Shield",
	[5]="Ring",
	[6]="Belt",
	[7]="Boots",
	[8]="Gloves",
	[9]="Amulet",
	[10]="Ring2",
	Helmet = 0,
	Breast = 1,
	Leggings = 2,
	Weapon = 3,
	Shield = 4,
	Ring = 5,
	Belt = 6,
	Boots = 7,
	Gloves = 8,
	Amulet = 9,
	Ring2 = 10,
}
Classes.Enum:Create(Data.VisibleEquipmentSlots)

--- Enums for every ability in the game.
---@type Enum
Data.Ability = {
	WarriorLore = 0,
	RangerLore = 1,
	RogueLore = 2,
	SingleHanded = 3,
	TwoHanded = 4,
	PainReflection = 5,
	Ranged = 6,
	Shield = 7,
	Reflexes = 8,
	PhysicalArmorMastery = 9,
	MagicArmorMastery = 10,
	VitalityMastery = 11,
	Sourcery = 12,
	FireSpecialist = 13,
	WaterSpecialist = 14,
	AirSpecialist = 15,
	EarthSpecialist = 16,
	Necromancy = 17,
	Summoning = 18,
	Polymorph = 19,
	Telekinesis = 20,
	Repair = 21,
	Sneaking = 22,
	Pickpocket = 23,
	Thievery = 24,
	Loremaster = 25,
	Crafting = 26,
	Barter = 27,
	Charm = 28,
	Intimidate = 29,
	Reason = 30,
	Persuasion = 31,
	Leadership = 32,
	Luck = 33,
	DualWielding = 34,
	Wand = 35,
	Perseverance = 36,
	Runecrafting = 37,
	Brewmaster = 38,
	Sulfurology = 39,
	--Sentinel = 40,
}

Classes.Enum:Create(Data.Ability)
---@deprecated
Data.AbilityEnum = Data.Ability

---@type Enum
Data.Attribute = {
	Strength = 0,
	Finesse = 1,
	Intelligence = 2,
	Constitution = 3,
	Memory = 4,
	Wits = 5,
	[0] = "Strength",
	[1] ="Finesse",
	[2] ="Intelligence",
	[3] ="Constitution",
	[4] ="Memory",
	[5] ="Wits"
}
Classes.Enum:Create(Data.Attribute)
---@deprecated
Data.AttributeEnum = Data.Attribute

---@type Enum
Data.Talents = {
	ItemMovement = 1,
	ItemCreation = 2,
	Flanking = 3,
	AttackOfOpportunity = 4,
	Backstab = 5,
	Trade = 6,
	Lockpick = 7,
	ChanceToHitRanged = 8,
	ChanceToHitMelee = 9,
	Damage = 10,
	ActionPoints = 11,
	ActionPoints2 = 12,
	Criticals = 13,
	IncreasedArmor = 14,
	Sight = 15,
	ResistFear = 16,
	ResistKnockdown = 17,
	ResistStun = 18,
	ResistPoison = 19,
	ResistSilence = 20,
	ResistDead = 21,
	Carry = 22,
	Throwing = 23,
	Repair = 24,
	ExpGain = 25,
	ExtraStatPoints = 26,
	ExtraSkillPoints = 27,
	Durability = 28,
	Awareness = 29,
	Vitality = 30,
	FireSpells = 31,
	WaterSpells = 32,
	AirSpells = 33,
	EarthSpells = 34,
	Charm = 35,
	Intimidate = 36,
	Reason = 37,
	Luck = 38,
	Initiative = 39,
	InventoryAccess = 40,
	AvoidDetection = 41,
	AnimalEmpathy = 42,
	Escapist = 43,
	StandYourGround = 44,
	SurpriseAttack = 45,
	LightStep = 46,
	ResurrectToFullHealth = 47,
	Scientist = 48,
	Raistlin = 49,
	MrKnowItAll = 50,
	WhatARush = 51,
	FaroutDude = 52,
	Leech = 53,
	ElementalAffinity = 54,
	FiveStarRestaurant = 55,
	Bully = 56,
	ElementalRanger = 57,
	LightningRod = 58,
	Politician = 59,
	WeatherProof = 60,
	LoneWolf = 61,
	Zombie = 62,
	Demon = 63,
	IceKing = 64,
	Courageous = 65,
	GoldenMage = 66,
	WalkItOff = 67,
	FolkDancer = 68,
	SpillNoBlood = 69,
	Stench = 70,
	Kickstarter = 71,
	WarriorLoreNaturalArmor = 72,
	WarriorLoreNaturalHealth = 73,
	WarriorLoreNaturalResistance = 74,
	RangerLoreArrowRecover = 75,
	RangerLoreEvasionBonus = 76,
	RangerLoreRangedAPBonus = 77,
	RogueLoreDaggerAPBonus = 78,
	RogueLoreDaggerBackStab = 79,
	RogueLoreMovementBonus = 80,
	RogueLoreHoldResistance = 81,
	NoAttackOfOpportunity = 82,
	WarriorLoreGrenadeRange = 83,
	RogueLoreGrenadePrecision = 84,
	WandCharge = 85,
	DualWieldingDodging = 86,
	Human_Inventive = 87,
	Human_Civil = 88,
	Elf_Lore = 89,
	Elf_CorpseEating = 90,
	Dwarf_Sturdy = 91,
	Dwarf_Sneaking = 92,
	Lizard_Resistance = 93,
	Lizard_Persuasion = 94,
	Perfectionist = 95,
	Executioner = 96,
	ViolentMagic = 97,
	QuickStep = 98,
	Quest_SpidersKiss_Str = 99,
	Quest_SpidersKiss_Int = 100,
	Quest_SpidersKiss_Per = 101,
	Quest_SpidersKiss_Null = 102,
	Memory = 103,
	Quest_TradeSecrets = 104,
	Quest_GhostTree = 105,
	BeastMaster = 106,
	LivingArmor = 107,
	Torturer = 108,
	Ambidextrous = 109,
	Unstable = 110,
	ResurrectExtraHealth = 111,
	NaturalConductor = 112,
	Quest_Rooted = 113,
	PainDrinker = 114,
	DeathfogResistant = 115,
	Sourcerer = 116,
	Rager = 117,
	Elementalist = 118,
	Sadist = 119,
	Haymaker = 120,
	Gladiator = 121,
	Indomitable = 122,
	WildMag = 123,
	Jitterbug = 124,
	Soulcatcher = 125,
	MasterThief = 126,
	GreedyVessel = 127,
	MagicCycles = 128,
}

Classes.Enum:Create(Data.Talents)
---@deprecated
Data.TalentEnum = Data.Talents

Data.ItemRarity = {
	Sentinel = -1,
	Common = 0,
	Unique = 1,
	Uncommon = 2,
	Rare = 3,
	Epic = 4,
	Legendary = 5,
	Divine = 6,
	[-1] = "Sentinel",
	[0] = "Common",
	[1] = "Unique",
	[2] = "Uncommon",
	[3] = "Rare",
	[4] = "Epic",
	[5] = "Legendary",
	[6] = "Divine",
}

Classes.Enum:Create(Data.ItemRarity, nil, nil, 0)

---@class SKILL_STATE
SKILL_STATE = {
	PREPARE = "PREPARE",
	USED = "USED",
	CAST = "CAST",
	HIT = "HIT",
	PROJECTILEHIT = "PROJECTILEHIT",
	BEFORESHOOT = "BEFORESHOOT",
	SHOOTPROJECTILE = "SHOOTPROJECTILE",
	CANCEL = "CANCEL", -- When preparing is stopped without casting
	LEARNED = "LEARNED",
	MEMORIZED = "MEMORIZED",
	UNMEMORIZED = "UNMEMORIZED",
}

Ext.Require("Shared/Data/ResistancePenetrationTags.lua")
Ext.Require("Shared/Data/ValueTypes.lua")
Ext.Require("Shared/Data/ExtenderUserData.lua")
Ext.Require("Shared/Data/Colors.lua")
Ext.Require("Shared/Data/ColorNames.lua")

Data.EngineStatus = {
	ACTIVE_DEFENSE = true,
	ADRENALINE = true,
	AOO = true,
	BOOST = true,
	CHANNELING = true,
	CHARMED = true,
	CLEAN = true,
	CLIMBING = true,
	COMBAT = true,
	COMBUSTION = true,
	CONSTRAINED = true,
	CONSUME = true,
	DAMAGE = true,
	DARK_AVENGER = true,
	DECAYING_TOUCH = true,
	DRAIN = true,
	DYING = true,
	EFFECT = true,
	ENCUMBERED = true,
	EXPLODE = true,
	FLANKED = true,
	FLOATING = true,
	FORCE_MOVE = true,
	HIT = true,
	IDENTIFY = true,
	INCAPACITATED = true,
	INFECTIOUS_DISEASED = true,
	INFUSED = true,
	INSURFACE = true,
	LEADERSHIP = true,
	LINGERING_WOUNDS = true,
	LYING = true,
	MATERIAL = true,
	OVERPOWER = true,
	POLYMORPHED = true,
	REMORSE = true,
	REPAIR = true,
	ROTATE = true,
	SHACKLES_OF_PAIN = true,
	SHACKLES_OF_PAIN_CASTER = true,
	SITTING = true,
	SMELLY = true,
	SNEAKING = true,
	SOURCE_MUTED = true,
	SPARK = true,
	SPIRIT = true,
	SPIRIT_VISION = true,
	STANCE = true,
	STORY_FROZEN = true,
	SUMMONING = true,
	TELEPORT_FALLING = true,
	THROWN = true,
	TUTORIAL_BED = true,
	UNHEALABLE = true,
	UNLOCK = true,
	UNSHEATHED = true,
	WIND_WALKER = true,
	--Custom
	LEADERLIB_RECALC = true,
}

Data.StatusStatsIdTypes = {
	ACTIVE_DEFENSE = true,
	ADRENALINE = true,
	CHALLENGE = true,
	CHANNELING = true,
	CHARMED = true,
	COMBUSTION = true,
	CONSUME = true,
	DAMAGE = true,
	DAMAGE_ON_MOVE = true,
	DARK_AVENGER = true,
	DEMONIC_BARGAIN = true, --TODO Not a ConsumeStatusBase in the extender, but it has a StatsId?
	DEACTIVATED = true,
	DECAYING_TOUCH = true,
	DISARMED = true,
	ENCUMBERED = true,
	EXTRA_TURN = true,
	FEAR = true,
	FLOATING = true,
	FORCE_MOVE = true,
	GUARDIAN_ANGEL = true,
	HEALING = true,
	HEAL_SHARING = true,
	HEAL_SHARING_CASTER = true,
	INCAPACITATED = true,
	INFECTIOUS_DISEASED = true,
	INVISIBLE = true,
	KNOCKED_DOWN = true, --TODO Not a ConsumeStatusBase in the extender, but it has a StatsId?
	LEADERSHIP = true,
	LINGERING_WOUNDS = true,
	MUTED = true,
	OVERPOWER = true,
	PLAY_DEAD = true,
	POLYMORPHED = true,
	REMORSE = true,
	SHACKLES_OF_PAIN = true,
	SHACKLES_OF_PAIN_CASTER = true,
	SPARK = true,
	SPIRIT_VISION = true,
	STANCE = true,
	WIND_WALKER = true,
}

setmetatable(Data.EngineStatus, {
	__call = function(status)
		return Data.EngineStatus[status] == true
	end
})

Data.StatusToType = {
	ACTIVE_DEFENSE = "ACTIVE_DEFENSE",
	ADRENALINE = "ADRENALINE",
	AOO = "AOO",
	BOOST = "BOOST",
	CHANNELING = "CHANNELING",
	CHARMED = "CHARMED",
	CLEAN = "CLEAN",
	CLIMBING = "CLIMBING",
	COMBAT = "COMBAT",
	COMBUSTION = "COMBUSTION",
	CONSTRAINED = "CONSTRAINED",
	CONSUME = "CONSUME",
	DAMAGE = "DAMAGE",
	DARK_AVENGER = "DARK_AVENGER",
	DECAYING_TOUCH = "DECAYING_TOUCH",
	DRAIN = "DRAIN",
	DYING = "DYING",
	EFFECT = "EFFECT",
	ENCUMBERED = "ENCUMBERED",
	EXPLODE = "EXPLODE",
	FLANKED = "FLANKED",
	FLOATING = "FLOATING",
	FORCE_MOVE = "FORCE_MOVE",
	HIT = "HIT",
	IDENTIFY = "IDENTIFY",
	INCAPACITATED = "INCAPACITATED",
	INFECTIOUS_DISEASED = "INFECTIOUS_DISEASED",
	INFUSED = "INFUSED",
	INSURFACE = "INSURFACE",
	LEADERSHIP = "LEADERSHIP",
	LINGERING_WOUNDS = "LINGERING_WOUNDS",
	LYING = "LYING",
	MATERIAL = "MATERIAL",
	OVERPOWER = "OVERPOWER",
	POLYMORPHED = "POLYMORPHED",
	REMORSE = "REMORSE",
	REPAIR = "REPAIR",
	ROTATE = "ROTATE",
	SHACKLES_OF_PAIN = "SHACKLES_OF_PAIN",
	SHACKLES_OF_PAIN_CASTER = "SHACKLES_OF_PAIN_CASTER",
	SITTING = "SITTING",
	SMELLY = "SMELLY",
	SNEAKING = "SNEAKING",
	SOURCE_MUTED = "SOURCE_MUTED",
	SPARK = "SPARK",
	SPIRIT = "SPIRIT",
	SPIRIT_VISION = "SPIRIT_VISION",
	STANCE = "STANCE",
	STORY_FROZEN = "STORY_FROZEN",
	SUMMONING = "SUMMONING",
	TELEPORT_FALLING = "TELEPORT_FALLING",
	THROWN = "THROWN",
	TUTORIAL_BED = "TUTORIAL_BED",
	UNHEALABLE = "UNHEALABLE",
	UNLOCK = "UNLOCK",
	UNSHEATHED = "UNSHEATHED",
	WIND_WALKER = "WIND_WALKER",
}

---Statuses ignored by default in status listeners
---If a mod registers a callback for one of these, it will no longer be ignored in listeners.
Data.IgnoredStatus = {}
for k,b in pairs(Data.EngineStatus) do
	Data.IgnoredStatus[k] = true
end
Data.IgnoredStatus.CONSUME = false
Data.IgnoredStatus.SUMMONING = false -- For the summoning listener
Data.IgnoredStatus.SNEAKING = false

Data.Surfaces = {
	None = -1,
	Fire = 0,
	FireBlessed = 1,
	FireCursed = 2,
	FirePurified = 3,
	Water = 4,
	WaterElectrified = 5,
	WaterFrozen = 6,
	WaterBlessed = 7,
	WaterElectrifiedBlessed = 8,
	WaterFrozenBlessed = 9,
	WaterCursed = 10,
	WaterElectrifiedCursed = 11,
	WaterFrozenCursed = 12,
	WaterPurified = 13,
	WaterElectrifiedPurified = 14,
	WaterFrozenPurified = 15,
	Blood = 16,
	BloodElectrified = 17,
	BloodFrozen = 18,
	BloodBlessed = 19,
	BloodElectrifiedBlessed = 20,
	BloodFrozenBlessed = 21,
	BloodCursed = 22,
	BloodElectrifiedCursed = 23,
	BloodFrozenCursed = 24,
	BloodPurified = 25,
	BloodElectrifiedPurified = 26,
	BloodFrozenPurified = 27,
	Poison = 28,
	PoisonBlessed = 29,
	PoisonCursed = 30,
	PoisonPurified = 31,
	Oil = 32,
	OilBlessed = 33,
	OilCursed = 34,
	OilPurified = 35,
	Lava = 36,
	Source = 37,
	Web = 38,
	WebBlessed = 39,
	WebCursed = 40,
	WebPurified = 41,
	Deepwater = 42,
	FireCloud = 47,
	FireCloudBlessed = 48,
	FireCloudCursed = 49,
	FireCloudPurified = 50,
	WaterCloud = 51,
	WaterCloudElectrified = 52,
	WaterCloudBlessed = 53,
	WaterCloudElectrifiedBlessed = 54,
	WaterCloudCursed = 55,
	WaterCloudElectrifiedCursed = 56,
	WaterCloudPurified = 57,
	WaterCloudElectrifiedPurified = 58,
	BloodCloud = 59,
	BloodCloudElectrified = 60,
	BloodCloudBlessed = 61,
	BloodCloudElectrifiedBlessed = 62,
	BloodCloudCursed = 63,
	BloodCloudElectrifiedCursed = 64,
	BloodCloudPurified = 65,
	BloodCloudElectrifiedPurified = 66,
	PoisonCloud = 67,
	PoisonCloudBlessed = 68,
	PoisonCloudCursed = 69,
	PoisonCloudPurified = 70,
	SmokeCloud = 71,
	SmokeCloudBlessed = 72,
	SmokeCloudCursed = 73,
	SmokeCloudPurified = 74,
	ExplosionCloud = 75,
	FrostCloud = 76,
	DeathfogCloud = 77,
}

for k,v in pairs(Data.Surfaces) do
	Data.Surfaces[v] = k
end

Classes.Enum:Create(Data.Surfaces)

Data.SurfaceChange = {
	[0] = "None",
	[1] = "Ignite",
	[2] = "Melt",
	[3] = "Freeze",
	[4] = "Electrify",
	[5] = "Bless",
	[6] = "Curse",
	[7] = "Condense",
	[8] = "Vaporize",
	[9] = "Bloodify",
	[10] = "Contaminate",
	[11] = "Oilify",
	[12] = "Shatter",
	None = 0,
	Ignite = 1,
	Melt = 2,
	Freeze = 3,
	Electrify = 4,
	Bless = 5,
	Curse = 6,
	Condense = 7,
	Vaporize = 8,
	Bloodify = 9,
	Contaminate = 10,
	Oilify = 11,
	Shatter = 12,
}

Classes.Enum:Create(Data.SurfaceChange)

---@overload fun(string:UISWFName):integer
Data.UIType = {
	actionProgression = 0,
	addContent = 57,
	addContent_c = 81,
	areaInteract_c = 68,
	arenaResult = 125,
	book = 2,
	bottomBar_c = 59,
	buttonLayout_c = 95,
	calibrationScreen = 98,
	campaignManager = 124,
	characterAssign = 52,
	characterAssign_c = 92,
	characterCreation = 3,
	characterCreation_c = 4,
	characterSheet = 119,
	chatLog = 6,
	combatLog = 7,
	combatLog_c = 65,
	combatTurn = 8,
	connectionMenu = 33,
	connectivity_c = 34,
	--consoleHints_c = -1,
	--consoleHintsPS_c = -1,
	containerInventory = { Default = 9, Pickpocket = 37},
	--containerInventory_lib = -1,
	containerInventoryGM = 143,
	contextMenu = { Default = 10, Object = 11 },
	contextMenu_c = { Default = 12, Object = 96 },
	craftPanel_c = 84,
	credits = 53,
	dialog = 14,
	dialog_c = 66,
	--diplomacy = -1,
	dummyOverhead = 15,
	encounterPanel = 105,
	enemyHealthBar = 42,
	engrave = 69,
	equipmentPanel_c = 64,
	examine = 104,
	examine_c = 67,
	feedback_c = 97,
	--fonts_en = -1,
	formation = 130,
	formation_c = 135,
	fullScreenHUD = 100,
	gameMenu = 19,
	gameMenu_c = 77,
	giftBagContent = 147,
	giftBagsMenu = 146,
	gmInventory = 126,
	GMItemSheet = 107,
	GMJournal = 139,
	GMMetadataBox = 109,
	GMMinimap = 113,
	GMMoodPanel = 108,
	GMPanelHUD = 120,
	GMRewardPanel = 131,
	GMSkills = 123,
	hotBar = 40,
	installScreen_c = 80,
	inventorySkillPanel_c = 62,
	itemAction = 86,
	itemGenerator = 106,
	itemSplitter = 21,
	itemSplitter_c = 85,
	journal = 22,
	journal_c = 70,
	journal_csp = 140,
	loadingScreen = 23,
	--LSClasses = -1,
	mainMenu = 28,
	mainMenu_c = 87, -- Still mainMenu, but this is used for controllers after clicking "Options" in the gameMenu_c
	menuBG = 56,
	minimap = 30,
	minimap_c = 60,
	mods = 49,
	mods_c = 103,
	monstersSelection = 127,
	mouseIcon = 31,
	msgBox = 29,
	msgBox_c = 75,
	notification = 36,
	--npcInfo = -1,
	optionsInput = 13,
	optionsSettings = { Default = 45, Video = 45, Audio = 1, Game = 17 },
	optionsSettings_c = { Default = 91, Video = 91, Audio = 88, Game = 89 },
	overhead = 5,
	overviewMap = 112,
	panelSelect_c = 83,
	partyInventory = 116,
	partyInventory_c = 142,
	partyManagement_c = 82,
	pause = 121,
	peace = 122,
	playerInfo = 38,
	playerInfo_c = 61, --Still playerInfo.swf, but the ID is different.
	possessionBar = 110,
	pyramid = 129,
	pyramid_c = 134,
	reputationPanel = 138,
	reward = 136,
	reward_c = 137,
	roll = 118,
	saveLoad = 39,
	saveLoad_c = 74,
	saving = 99,
	serverlist = 26,
	serverlist_c = 27,
	skills = 41,
	skillsSelection = 54,
	sortBy_c = 79,
	startTurnRequest = 145,
	startTurnRequest_c = 144,
	statsPanel_c = 63,
	statusConsole = 117,
	statusPanel = 128,
	stickiesPanel = 133,
	sticky = 132,
	storyElement = 71,
	--subtitles = -1,
	surfacePainter = 111,
	textDisplay = 43,
	--texture_lib = -1,
	--texture_lib_c = -1,
	tooltip = 44,
	--tooltipHelper = -1,
	--tooltipHelper_kb = -1,
	trade = 46,
	trade_c = 73,
	tutorialBox = 55,
	tutorialBox_c = 94,
	uiCraft = 102,
	--uiElements = -1,
	--uiElementsGM = -1,
	uiFade = 16,
	userProfile = 51,
	vignette = 114,
	voiceNotification_c = 93,
	watermark = 141,
	waypoints = 47,
	waypoints_c = 78,
	worldTooltip = 48,
}

local _MultiTypeUI = {
	contextMenu = true,
	contextMenu_c = true,
	containerInventory = true,
	optionsSettings = true,
	optionsSettings_c = true,
}

---@param tbl table
---@param key string
---@return integer
local function _UITypeIDCall(tbl, key)
	local id = tbl[key]
	if _MultiTypeUI[key] then
		local _default = id.Default
		for k,v in pairs(id) do
			if k ~= "Default" then
				local ui = Ext.GetUIByType(v)
				if ui then
					return v
				end
			end
		end
		return _default
	end
	return id
end

setmetatable(Data.UIType, {
	__call = _UITypeIDCall
})

---@type table<integer, string>
Data.UITypeToName = {}

for k,v in pairs(Data.UIType) do
	if _MultiTypeUI[k] then
		for _,v2 in pairs(v) do
			Data.UITypeToName[v2] = k
		end
	else
		Data.UITypeToName[v] = k
	end
end

Data.ArmorType = {
	None = "None",
	Cloth = "Cloth",
	Leather = "Leather",
	Mail = "Male",
	Plate = "Plate",
	Robe = "Robe"
}

Data.ActionSkills = {
	ActionAttackGround = "Action_AttackGround",
	ActionSkillDisarm = "Action_Disarm",
	ActionSkillEndTurn = "Action_EndOfTurn",
	ActionSkillFlee = "Action_Flee",
	ActionSkillGuard = "Action_Guard",
	ActionSkillIdentify = "Action_Identify",
	ActionSkillLockpick = "Action_LockPick",
	ActionSkillRepair = "Action_Repair",
	ActionSkillSheathe = "Action_Sheath",
	ActionSkillSneak = "Action_Sneak",
}

if Ext.IsServer() then
Data.OsirisEvents = {
	AttackedByObject = 5,
	AutomatedDialogEnded = 2,
	AutomatedDialogRequestFailed = 2,
	AutomatedDialogStarted = 2,
	CameraReachedNode = 5,
	CanCombineItem = 7,
	CanLockpickItem = 3,
	CanMoveItem = 3,
	CanPickupItem = 3,
	CanUseItem = 3,
	CharacterAddedToGroup = 1,
	CharacterAttitudeTowardsPlayerChanged = 3,
	CharacterBaseAbilityChanged = 4,
	CharacterBlockedBy = 3,
	CharacterChangedAlginmentToCharacter = 3,
	CharacterCharacterEvent = 3,
	CharacterCreatedInArena = 2,
	CharacterCreationFinished = 1,
	CharacterCreationStarted = 1,
	CharacterCriticalHitBy = 3,
	CharacterDestroyedItem = 2,
	CharacterDestroyedItemTemplate = 2,
	CharacterDetachedFromGroup = 1,
	CharacterDied = 1,
	CharacterDisplayTextEnded = 2,
	CharacterDying = 1,
	CharacterEnteredRegion = 2,
	CharacterEnteredTrigger = 2,
	CharacterGhostDestroyed = 2,
	CharacterGhostRevealed = 2,
	CharacterGuarded = 1,
	CharacterItemEvent = 3,
	CharacterJoinedParty = 1,
	CharacterKilledBy = 3,
	CharacterLearnedSkill = 2,
	CharacterLeftParty = 1,
	CharacterLeftRegion = 2,
	CharacterLeftTrigger = 2,
	CharacterLeveledUp = 1,
	CharacterLoadedInPreset = 1,
	CharacterLockedTalent = 2,
	CharacterLootedCharacterCorpse = 2,
	CharacterLostSightOfCharacter = 2,
	CharacterMadePlayer = 1,
	CharacterMissedBy = 3,
	CharacterMoveToAndTalkFailed = 3,
	CharacterMoveToAndTalkRequestDialog = 5,
	CharacterMoveToAndTalkRequestDialogFailedEvent = 3,
	CharacterMovedItem = 2,
	CharacterMovedItemTemplate = 2,
	CharacterOnCrimeSensibleActionNotification = 10,
	CharacterPhysicalHitBy = 3,
	CharacterPickpocketEnter = 2,
	CharacterPickpocketExit = 1,
	CharacterPickpocketFailed = 2,
	CharacterPickpocketSuccess = 4,
	CharacterPolymorphedInto = 2,
	CharacterPreMovedItem = 2,
	CharacterPrecogDying = 1,
	CharacterReceivedDamage = 3,
	CharacterRelationChangedTo = 3,
	CharacterRequestsHomestead = 1,
	CharacterReservedUserIDChanged = 3,
	CharacterResurrected = 1,
	CharacterSawCharacter = 2,
	CharacterSawSneakingCharacter = 2,
	CharacterScriptFrameFinished = 2,
	CharacterSelectedAsBestUnavailableFallbackLead = 8,
	CharacterSelectedInCharCreation = 2,
	CharacterSetTemporaryRelationsFailed = 2,
	CharacterStartAttackObject = 3,
	CharacterStartAttackPosition = 5,
	CharacterStartLockpickingItem = 2,
	CharacterStartOriginIntroduction = 3,
	CharacterStatusApplied = 3,
	CharacterStatusAttempt = 3,
	CharacterStatusRemoved = 3,
	CharacterStoleItem = 8,
	CharacterStopOriginIntroduction = 2,
	CharacterStoppedCombiningItems = 6,
	CharacterStoppedLockpickingItem = 2,
	CharacterStoppedPolymorph = 1,
	CharacterStoppedUsingItem = 2,
	CharacterTeleportByItem = 3,
	CharacterTeleportToFleeWaypoint = 2,
	CharacterTeleportToPyramid = 2,
	CharacterTeleportToWaypoint = 2,
	CharacterTeleported = 9,
	CharacterTemplateDied = 1,
	CharacterTemplateKilledByCharacter = 2,
	CharacterTraitChanged = 2,
	CharacterTurnedToGhost = 2,
	CharacterUnlockedRecipe = 2,
	CharacterUnlockedTalent = 2,
	CharacterUsedItem = 2,
	CharacterUsedItemFailed = 2,
	CharacterUsedItemTemplate = 3,
	CharacterUsedLadder = 1,
	CharacterUsedSkill = 4,
	CharacterUsedSkillAtPosition = 7,
	CharacterUsedSkillInTrigger = 5,
	CharacterUsedSkillOnTarget = 5,
	CharacterUsedSkillOnZoneWithTarget = 5,
	CharacterUsedSourcePoint = 1,
	CharacterVitalityChanged = 2,
	CharacterWentOnStage = 2,
	ChildDialogRequested = 3,
	ClearFadeDone = 2,
	CombatEnded = 1,
	CombatRoundStarted = 2,
	CombatStarted = 1,
	CreditsEnded = 0,
	CrimeDisabled = 2,
	CrimeEnabled = 2,
	CrimeInterrogationRequest = 8,
	CrimeIsRegistered = 8,
	CustomBookUIClosed = 2,
	DLCUpdated = 3,
	DialogActorJoined = 3,
	DialogActorLeft = 3,
	DialogEnded = 2,
	DialogRequestFailed = 2,
	DialogStartRequested = 2,
	DialogStarted = 2,
	DifficultyChanged = 1,
	DualDialogRequested = 3,
	DualDialogStart = 2,
	EndGameRequestMovie = 2,
	FadeDone = 2,
	FadeInDone = 2,
	FadeOutDone = 2,
	FleeCombat = 1,
	GMCampaignModeStarted = 1,
	GameBookInterfaceClosed = 2,
	GameEventCleared = 1,
	GameEventSet = 1,
	GameModeStarted = 2,
	GameStarted = 2,
	GlobalFlagCleared = 1,
	GlobalFlagSet = 1,
	HappyWithDeal = 4,
	ItemAddedToCharacter = 2,
	ItemAddedToContainer = 2,
	ItemClosed = 1,
	ItemCreatedAtTrigger = 3,
	ItemDestroyed = 1,
	ItemDestroying = 1,
	ItemDisplayTextEnded = 2,
	ItemDropped = 1,
	ItemEnteredRegion = 2,
	ItemEnteredTrigger = 3,
	ItemEquipped = 2,
	ItemGhostRevealed = 1,
	ItemLeftRegion = 2,
	ItemLeftTrigger = 3,
	ItemMoved = 1,
	ItemMovedFromTo = 4,
	ItemOpened = 1,
	ItemReceivedDamage = 1,
	ItemRemovedFromCharacter = 2,
	ItemRemovedFromContainer = 2,
	ItemSendToHomesteadEvent = 2,
	ItemSetEquipped = 2,
	ItemSetUnEquipped = 2,
	ItemStackedWith = 2,
	ItemStatusAttempt = 3,
	ItemStatusChange = 3,
	ItemStatusRemoved = 3,
	ItemTemplateAddedToCharacter = 3,
	ItemTemplateAddedToContainer = 3,
	ItemTemplateCombinedWithItemTemplate = 7,
	ItemTemplateDestroyed = 2,
	ItemTemplateEnteredTrigger = 5,
	ItemTemplateEquipped = 2,
	ItemTemplateLeftTrigger = 5,
	ItemTemplateMoved = 2,
	ItemTemplateOpening = 3,
	ItemTemplateRemovedFromCharacter = 3,
	ItemTemplateRemovedFromContainer = 3,
	ItemTemplateUnEquipped = 2,
	ItemUnEquipFailed = 2,
	ItemUnEquipped = 2,
	ItemUnlocked = 3,
	ItemWentOnStage = 2,
	ItemsScatteredAt = 3,
	MessageBoxChoiceClosed = 3,
	MessageBoxClosed = 2,
	MessageBoxYesNoClosed = 3,
	MovieFinished = 1,
	MoviePlaylistFinished = 1,
	MysteryUnlocked = 2,
	NRD_ItemDeltaModIteratorEvent = 4,
	NRD_Loop = 3,
	NRD_OnActionStateEnter = 2,
	NRD_OnHeal = 4,
	NRD_OnHit = 4,
	NRD_OnPrepareHit = 4,
	NRD_OnStatusAttempt = 4,
	NRD_SkillIteratorEvent = 5,
	NRD_StatusIteratorEvent = 4,
	ObjectEnteredCombat = 2,
	ObjectFlagCleared = 3,
	ObjectFlagSet = 3,
	ObjectFlagShared = 3,
	ObjectLeftCombat = 2,
	ObjectLostTag = 2,
	ObjectReadyInCombat = 2,
	ObjectSourcePointAddRequest = 3,
	ObjectSwitchedCombat = 3,
	ObjectTransformed = 2,
	ObjectTurnEnded = 1,
	ObjectTurnStarted = 1,
	ObjectWasTagged = 2,
	OnArenaRoundForceEnded = 0,
	OnArenaRoundStarted = 1,
	OnCrimeConfrontationDone = 7,
	OnCrimeMergedWith = 2,
	OnCrimeRemoved = 6,
	OnCrimeResolved = 6,
	OnCrimeSawCriminalInCombat = 3,
	OnCriminalMergedWithCrime = 2,
	OnMutatorEnabledAtTurn = 2,
	OnStageChanged = 2,
	PartyPresetLoaded = 1,
	PersuasionResult = 3,
	PuzzleUIClosed = 3,
	PuzzleUIUsed = 5,
	QuestCategoryChanged = 2,
	QuestShared = 3,
	ReadyCheckFailed = 1,
	ReadyCheckPassed = 1,
	RegionEnded = 1,
	RegionStarted = 1,
	RequestPickpocket = 2,
	RequestTrade = 2,
	RuneInserted = 4,
	RuneRemoved = 4,
	SavegameLoaded = 4,
	SavegameLoading = 4,
	SkillActivated = 2,
	SkillAdded = 3,
	SkillCast = 4,
	SkillDeactivated = 2,
	StoryEvent = 2,
	TeleportRequestMovie = 2,
	TextEventSet = 1,
	TimerFinished = 1,
	TradeEnds = 2,
	TradeGenerationEnded = 1,
	TradeGenerationStarted = 1,
	TutorialBoxClosed = 2,
	UserConnected = 3,
	UserDisconnected = 3,
	UserEvent = 2,
	UserMakeWar = 3,
	VoiceBarkEnded = 2,
	VoiceBarkFailed = 1,
	VoiceBarkStarted = 2,
}
end

Data.LevelExperience = {
	[1] = 0,
	[2] = 2000,
	[3] = 8000,
	[4] = 20000,
	[5] = 40000,
	[6] = 70000,
	[7] = 112000,
	[8] = 168000,
	[9] = 240000,
	[10] = 340000,
	[11] = 479000,
	[12] = 672000,
	[13] = 941000,
	[14] = 1315000,
	[15] = 1834000,
	[16] = 2556000,
	[17] = 3559000,
	[18] = 4954000,
	[19] = 6893000,
	[20] = 9588000,
	[21] = 13334000,
	[22] = 18540000,
	[23] = 25777000,
	[24] = 35836000,
	[25] = 49818000,
	[26] = 69253000,
	[27] = 96268000,
	[28] = 133818000,
	[29] = 186013000,
	[30] = 258564000,
	[31] = 359410000,
	[32] = 499586000,
	[33] = 694430000,
	[34] = 965264000,
	[35] = 1341723000
}

Data.HitType = {
    Melee = 0,
    Magic = 1,
    Ranged = 2,
    WeaponDamage = 3,
    Surface = 4,
    DoT = 5,
    Reflected = 6,
    [0] = "Melee",
    [1] = "Magic",
    [2] = "Ranged",
    [3] = "WeaponDamage",
    [4] = "Surface",
    [5] = "DoT",
    [6] = "Reflected",
}
Classes.Enum:Create(Data.HitType)

---More of an informal association rather than an actual enum.
Data.HitReason = {
	[0] = "ASAttack",
	--Character::ApplyDamage, StatusDying, ExecPropertyDamage, StatusDamage
	[1] = "ApplyDamage|StatusDying|ExecPropertyDamage|StatusDamage",
	[2] = "AIHitTest",
	[3] = "Explode",
	[4] = "Trap",
	[5] = "InSurface",
	[6] = "SetHP|OsiApplyDamage|StatusConsume",
	ASAttack = 0,
	ApplyDamage = 1,
	StatusDying = 1,
	ExecPropertyDamage = 1,
	StatusDamage = 1,
	AIHitTest = 2,
	Explode = 3,
	Trap = 4,
	InSurface = 5,
	SetHP = 6,
	OsiApplyDamage = 6,
	StatusConsume = 6,
}

Classes.Enum:Create(Data.HitReason)

---@enum GameDifficulty
Data.Difficulty = {
	[0] = "Story",
	[1] = "Explorer",
	[2] = "Classic",
	[3] = "Tactician",
	[4] = "Honour",
	Story = 0,
	Explorer = 1,
	Classic = 2,
	Tactician = 3,
	Honour = 4,
}

Classes.Enum:Create(Data.Difficulty)

Data.SkillRequirement = {
    MeleeWeapon = "MeleeWeapon",
    RangedWeapon = "RangedWeapon",
    StaffWeapon = "StaffWeapon",
    DaggerWeapon = "DaggerWeapon",
    ShieldWeapon = "ShieldWeapon",
    RifleWeapon = "RifleWeapon",
    ArrowWeapon = "ArrowWeapon",
}

if Vars.IsClient then
	Data.UIFlags = {
		OF_Load = 0x1,
		OF_Loaded = 0x2,
		OF_RequestDelete = 0x4,
		OF_Visible = 0x8,
		OF_Activated = 0x10,
		OF_PlayerInput1 = 0x20,
		OF_PlayerInput2 = 0x40,
		OF_PlayerInput3 = 0x80,
		OF_PlayerInput4 = 0x100,
		OF_PlayerModal1 = 0x200,
		OF_PlayerModal2 = 0x400,
		OF_PlayerModal3 = 0x800,
		OF_PlayerModal4 = 0x1000,
		OF_KeepInScreen = 0x8000,
		OF_KeepCustomInScreen = 0x10000,
		OF_DeleteOnChildDestroy = 0x20000,
		OF_PauseRequest = 0x40000,
		OF_SortOnAdd = 0x80000,
		OF_FullScreen = 0x400000,
		OF_PlayerTextInput1 = 0x800000,
		OF_PlayerTextInput2 = 0x1000000,
		OF_PlayerTextInput3 = 0x2000000,
		OF_PlayerTextInput4 = 0x4000000,
		OF_DontHideOnDelete = 0x10000000,
		OF_PrecacheUIData = 0x20000000,
		OF_PreventCameraMove = 0x40000000,
	}

	Data.DefaultUIFlags = Data.UIFlags.OF_Load|Data.UIFlags.OF_PlayerInput1|Data.UIFlags.OF_DeleteOnChildDestroy
end

Data.StatAttributes = {
	Armor = {
		"Armor Defense Value",
		"ArmorBoost",
		"Magic Armor Value",
		"MagicArmorBoost",
		"Movement",
		"Initiative",
		"Requirements",
		"Slot",
		"Durability",
		"DurabilityDegradeSpeed",
		"Value",
		"ModifierType",
		"Act",
		"Act part",
		"Fire",
		"Air",
		"Water",
		"Earth",
		"Poison",
		"Piercing",
		"Physical",
		"StrengthBoost",
		"FinesseBoost",
		"IntelligenceBoost",
		"ConstitutionBoost",
		"MemoryBoost",
		"WitsBoost",
		"SingleHanded",
		"TwoHanded",
		"Ranged",
		"DualWielding",
		"RogueLore",
		"WarriorLore",
		"RangerLore",
		"FireSpecialist",
		"WaterSpecialist",
		"AirSpecialist",
		"EarthSpecialist",
		"Sourcery",
		"Necromancy",
		"Polymorph",
		"Summoning",
		"PainReflection",
		"Perseverance",
		"Leadership",
		"Telekinesis",
		"Sneaking",
		"Thievery",
		"Loremaster",
		"Repair",
		"Barter",
		"Persuasion",
		"Luck",
		"SightBoost",
		"HearingBoost",
		"VitalityBoost",
		"MagicPointsBoost",
		"ChanceToHitBoost",
		"APMaximum",
		"APStart",
		"APRecovery",
		"AccuracyBoost",
		"DodgeBoost",
		"CriticalChance",
		"ComboCategory",
		"Weight",
		"InventoryTab",
		"Flags",
		"ArmorType",
		"Boosts",
		"Skills",
		"ItemColor",
		"Reflection",
		"ItemGroup",
		"ObjectCategory",
		"MinAmount",
		"MaxAmount",
		"Priority",
		"Unique",
		"MinLevel",
		"MaxLevel",
		"MaxSummons",
		"NeedsIdentification",
		"Charges",
		"RuneSlots",
		"RuneSlots_V1",
		"MaxCharges",
		"Talents",
		"Tags",
	},
	Character = {
		"Strength",
		"Finesse",
		"Intelligence",
		"Constitution",
		"Memory",
		"Wits",
		"SingleHanded",
		"TwoHanded",
		"Ranged",
		"DualWielding",
		"RogueLore",
		"WarriorLore",
		"RangerLore",
		"FireSpecialist",
		"WaterSpecialist",
		"AirSpecialist",
		"EarthSpecialist",
		"Sourcery",
		"Necromancy",
		"Polymorph",
		"Summoning",
		"PainReflection",
		"Leadership",
		"Perseverance",
		"Telekinesis",
		"Sneaking",
		"Thievery",
		"Loremaster",
		"Repair",
		"Barter",
		"Persuasion",
		"Luck",
		"FireResistance",
		"EarthResistance",
		"WaterResistance",
		"AirResistance",
		"PoisonResistance",
		"PiercingResistance",
		"PhysicalResistance",
		"Sight",
		"Hearing",
		"FOV",
		"APMaximum",
		"APStart",
		"APRecovery",
		"Initiative",
		"Vitality",
		"MagicPoints",
		"ChanceToHitBoost",
		"Movement",
		"MovementSpeedBoost",
		"CriticalChance",
		"Gain",
		"Armor",
		"ArmorBoost",
		"ArmorBoostGrowthPerLevel",
		"MagicArmor",
		"MagicArmorBoost",
		"MagicArmorBoostGrowthPerLevel",
		"Accuracy",
		"Dodge",
		"Act",
		"Act part",
		"Act strength",
		"MaxResistance",
		"Weight",
		"Talents",
		"Traits",
		"PathInfluence",
		"Flags",
		"Reflection",
		"StepsType",
		"MaxSummons",
		"MPStart",
		"DamageBoost",
		"DamageBoostGrowthPerLevel",
	},
	Crime = {
		"CrimeType",
		"TensionWeight",
		"Lifetime",
		"Audible",
		"DetectionRange",
		"CreatesCrimescene",
		"Continuous",
		"VictimReaction",
		"NoticedAD",
		"WarningDialog",
		"ArrestDialog",
		"InterrogateDialog",
		"ReactionCategory_Tag",
		"ReactionCategory_Priority",
		"ReactionCategory_PrimaryReaction",
		"ReactionCategory_SecondaryReaction",
		"MaxInvestigators",
		"ContinuousDelayTimer",
		"SoundEvent",
		"AudibleRange",
		"VictimDialog",
		"CanRaiseAlarm",
		"CanMerge",
	},
	Object = {
		"ModifierType",
		"Act",
		"Act part",
		"UseAPCost",
		"Value",
		"ComboCategory",
		"Weight",
		"Strength",
		"Finesse",
		"Intelligence",
		"Constitution",
		"Memory",
		"Wits",
		"Vitality",
		"Armor",
		"FireResistance",
		"EarthResistance",
		"WaterResistance",
		"AirResistance",
		"PoisonResistance",
		"PiercingResistance",
		"PhysicalResistance",
		"ShadowResistance",
		"Flags",
		"Requirements",
		"InventoryTab",
		"RootTemplate",
		"ObjectCategory",
		"MinAmount",
		"MaxAmount",
		"Priority",
		"Unique",
		"MinLevel",
		"RuneEffectWeapon",
		"RuneEffectUpperbody",
		"RuneEffectAmulet",
		"RuneLevel",
		"MaxLevel",
		"AddToBottomBar",
		"IgnoredByAI",
	},
	Potion = {
		"ModifierType",
		"VitalityBoost",
		"Strength",
		"Finesse",
		"Intelligence",
		"Constitution",
		"Memory",
		"Wits",
		"SingleHanded",
		"TwoHanded",
		"Ranged",
		"DualWielding",
		"RogueLore",
		"WarriorLore",
		"RangerLore",
		"FireSpecialist",
		"WaterSpecialist",
		"AirSpecialist",
		"EarthSpecialist",
		"Sourcery",
		"Necromancy",
		"Polymorph",
		"Summoning",
		"PainReflection",
		"Perseverance",
		"Leadership",
		"Telekinesis",
		"Sneaking",
		"Thievery",
		"Loremaster",
		"Repair",
		"Barter",
		"Persuasion",
		"Luck",
		"FireResistance",
		"EarthResistance",
		"WaterResistance",
		"AirResistance",
		"PoisonResistance",
		"PhysicalResistance",
		"PiercingResistance",
		"Sight",
		"Hearing",
		"Initiative",
		"Vitality",
		"VitalityPercentage",
		"MagicPoints",
		"ActionPoints",
		"ChanceToHitBoost",
		"AccuracyBoost",
		"DodgeBoost",
		"DamageBoost",
		"APCostBoost",
		"SPCostBoost",
		"APMaximum",
		"APStart",
		"APRecovery",
		"Movement",
		"MovementSpeedBoost",
		"Gain",
		"Armor",
		"MagicArmor",
		"ArmorBoost",
		"MagicArmorBoost",
		"CriticalChance",
		"Act",
		"Act part",
		"Duration",
		"UseAPCost",
		"ComboCategory",
		"StackId",
		"BoostConditions",
		"Flags",
		"StatusMaterial",
		"StatusEffect",
		"StatusIcon",
		"SavingThrow",
		"Weight",
		"Value",
		"InventoryTab",
		"UnknownBeforeConsume",
		"Reflection",
		"Damage",
		"Damage Multiplier",
		"Damage Range",
		"DamageType",
		"AuraRadius",
		"AuraSelf",
		"AuraAllies",
		"AuraEnemies",
		"AuraNeutrals",
		"AuraItems",
		"AuraFX",
		"RootTemplate",
		"ObjectCategory",
		"MinAmount",
		"MaxAmount",
		"Priority",
		"Unique",
		"MinLevel",
		"MaxLevel",
		"BloodSurfaceType",
		"MaxSummons",
		"AddToBottomBar",
		"SummonLifelinkModifier",
		"IgnoredByAI",
		"RangeBoost",
		"BonusWeapon",
		"AiCalculationStatsOverride",
		"RuneEffectWeapon",
		"RuneEffectUpperbody",
		"RuneEffectAmulet",
		"RuneLevel",
		"LifeSteal",
		"IsFood",
		"IsConsumable",
	},
	SkillData = {
		"SkillType",
		"Level",
		"Ability",
		"Element",
		"Requirement",
		"Requirements",
		"DisplayName",
		"DisplayNameRef",
		"Description",
		"DescriptionRef",
		"StatsDescription",
		"StatsDescriptionRef",
		"StatsDescriptionParams",
		"Icon",
		"FXScale",
		"PrepareAnimationInit",
		"PrepareAnimationLoop",
		"PrepareEffect",
		"PrepareEffectBone",
		"CastAnimation",
		"CastTextEvent",
		"CastAnimationCheck",
		"CastEffect",
		"CastEffectTextEvent",
		"TargetCastEffect",
		"TargetHitEffect",
		"TargetEffect",
		"SourceTargetEffect",
		"TargetTargetEffect",
		"LandingEffect",
		"ImpactEffect",
		"MaleImpactEffects",
		"FemaleImpactEffects",
		"OnHitEffect",
		"SelectedCharacterEffect",
		"SelectedObjectEffect",
		"SelectedPositionEffect",
		"DisappearEffect",
		"ReappearEffect",
		"ReappearEffectTextEvent",
		"RainEffect",
		"StormEffect",
		"FlyEffect",
		"SpatterEffect",
		"ShieldMaterial",
		"ShieldEffect",
		"ContinueEffect",
		"SkillEffect",
		"Template",
		"TemplateCheck",
		"TemplateOverride",
		"TemplateAdvanced",
		"Totem",
		"Template1",
		"Template2",
		"Template3",
		"WeaponBones",
		"TeleportSelf",
		"CanTargetCharacters",
		"CanTargetItems",
		"CanTargetTerrain",
		"ForceTarget",
		"TargetProjectiles",
		"UseCharacterStats",
		"UseWeaponDamage",
		"UseWeaponProperties",
		"SingleSource",
		"ContinueOnKill",
		"Autocast",
		"AmountOfTargets",
		"AutoAim",
		"AddWeaponRange",
		"Memory Cost",
		"Magic Cost",
		"ActionPoints",
		"Cooldown",
		"CooldownReduction",
		"ChargeDuration",
		"CastDelay",
		"Offset",
		"Lifetime",
		"Duration",
		"TargetRadius",
		"ExplodeRadius",
		"AreaRadius",
		"HitRadius",
		"RadiusMax",
		"Range",
		"MaxDistance",
		"Angle",
		"TravelSpeed",
		"Acceleration",
		"Height",
		"Damage",
		"Damage Multiplier",
		"Damage Range",
		"DamageType",
		"DamageMultiplier",
		"DeathType",
		"BonusDamage",
		"Chance To Hit Multiplier",
		"HitPointsPercent",
		"MinHitsPerTurn",
		"MaxHitsPerTurn",
		"HitDelay",
		"MaxAttacks",
		"NextAttackChance",
		"NextAttackChanceDivider",
		"EndPosRadius",
		"JumpDelay",
		"TeleportDelay",
		"PointsMaxOffset",
		"RandomPoints",
		"ChanceToPierce",
		"MaxPierceCount",
		"MaxForkCount",
		"ForkLevels",
		"ForkChance",
		"HealAmount",
		"StatusClearChance",
		"SurfaceType",
		"SurfaceLifetime",
		"SurfaceStatusChance",
		"SurfaceTileCollision",
		"SurfaceGrowInterval",
		"SurfaceGrowStep",
		"SurfaceRadius",
		"TotalSurfaceCells",
		"SurfaceMinSpawnRadius",
		"MinSurfaces",
		"MaxSurfaces",
		"MinSurfaceSize",
		"MaxSurfaceSize",
		"GrowSpeed",
		"GrowOnSurface",
		"GrowTimeout",
		"SkillBoost",
		"SkillAttributeFlags",
		"SkillProperties",
		"CleanseStatuses",
		"AoEConditions",
		"TargetConditions",
		"ForkingConditions",
		"CycleConditions",
		"ShockWaveDuration",
		"TeleportTextEvent",
		"SummonEffect",
		"ProjectileCount",
		"ProjectileDelay",
		"StrikeCount",
		"StrikeDelay",
		"PreviewStrikeHits",
		"SummonLevel",
		"Damage On Jump",
		"Damage On Landing",
		"StartTextEvent",
		"StopTextEvent",
		"Healing Multiplier",
		"Atmosphere",
		"ConsequencesStartTime",
		"ConsequencesDuration",
		"HealthBarColor",
		"Skillbook",
		"PreviewImpactEffect",
		"IgnoreVisionBlock",
		"HealEffectId",
		"AddRangeFromAbility",
		"DivideDamage",
		"OverrideMinAP",
		"OverrideSkillLevel",
		"Tier",
		"GrenadeBone",
		"GrenadeProjectile",
		"GrenadePath",
		"MovingObject",
		"SpawnObject",
		"SpawnEffect",
		"SpawnFXOverridesImpactFX",
		"SpawnLifetime",
		"ProjectileTerrainOffset",
		"ProjectileType",
		"HitEffect",
		"PushDistance",
		"ForceMove",
		"Stealth",
		"Distribution",
		"Shuffle",
		"PushPullEffect",
		"Stealth Damage Multiplier",
		"Distance Damage Multiplier",
		"BackStart",
		"FrontOffset",
		"TargetGroundEffect",
		"PositionEffect",
		"BeamEffect",
		"PreviewEffect",
		"CastSelfAnimation",
		"IgnoreCursed",
		"IsEnemySkill",
		"DomeEffect",
		"AuraSelf",
		"AuraAllies",
		"AuraEnemies",
		"AuraNeutrals",
		"AuraItems",
		"AIFlags",
		"Shape",
		"Base",
		"AiCalculationSkillOverride",
		"TeleportSurface",
		"ProjectileSkills",
		"SummonCount",
		"LinkTeleports",
		"TeleportsUseCount",
		"HeightOffset",
		"ForGameMaster",
		"IsMelee",
		"MemorizationRequirements",
		"IgnoreSilence",
		"IgnoreHeight",
	},
	StatusData = {
		"StatusType",
		"Icon",
		"DisplayName",
		"DisplayNameRef",
		"Description",
		"DescriptionRef",
		"DescriptionParams",
		"OverrideDefaultDescription",
		"FormatColor",
		"SavingThrow",
		"IsChanneled",
		"Instant",
		"StatusEffect",
		"StatusEffectOverrideForItems",
		"StatusEffectOnTurn",
		"MaterialType",
		"Material",
		"MaterialApplyBody",
		"MaterialApplyArmor",
		"MaterialApplyWeapon",
		"MaterialApplyNormalMap",
		"MaterialFadeAmount",
		"MaterialOverlayOffset",
		"MaterialParameters",
		"HealingEvent",
		"HealStat",
		"HealType",
		"HealValue",
		"StatsId",
		"IsInvulnerable",
		"IsDisarmed",
		"StackId",
		"StackPriority",
		"AuraRadius",
		"AuraSelf",
		"AuraAllies",
		"AuraEnemies",
		"AuraNeutrals",
		"AuraItems",
		"AuraFX",
		"ImmuneFlag",
		"CleanseStatuses",
		"MaxCleanseCount",
		"ApplyAfterCleanse",
		"SoundStart",
		"SoundLoop",
		"SoundStop",
		"DamageEvent",
		"DamageStats",
		"DeathType",
		"DamageCharacters",
		"DamageItems",
		"DamageTorches",
		"FreezeTime",
		"SurfaceChange",
		"PermanentOnTorch",
		"AbsorbSurfaceType",
		"AbsorbSurfaceRange",
		"Skills",
		"BonusFromAbility",
		"Items",
		"OnlyWhileMoving",
		"DescriptionCaster",
		"DescriptionTarget",
		"WinBoost",
		"LoseBoost",
		"WeaponOverride",
		"ApplyEffect",
		"ForGameMaster",
		"ResetCooldowns",
		"ResetOncePerCombat",
		"PolymorphResult",
		"DisableInteractions",
		"LoseControl",
		"AiCalculationSkillOverride",
		"HealEffectId",
		"ScaleWithVitality",
		"VampirismType",
		"BeamEffect",
		"HealMultiplier",
		"InitiateCombat",
		"Projectile",
		"Radius",
		"Charges",
		"MaxCharges",
		"DefendTargetPosition",
		"TargetConditions",
		"Toggle",
		"LeaveAction",
		"DieAction",
		"PlayerSameParty",
		"PlayerHasTag",
		"PeaceOnly",
		"Necromantic",
		"RetainSkills",
		"BringIntoCombat",
		"ApplyStatusOnTick",
		"IsResistingDeath",
		"TargetEffect",
		"DamagePercentage",
		"ForceOverhead",
		"TickSFX",
		"ForceStackOverwrite",
		"FreezeCooldowns",
		"ShouldAttachToCaster",
	},
	Weapon = {
		"Handedness",
		"IsTwoHanded",
		"Damage Type",
		"Damage",
		"Damage Range",
		"DamageBoost",
		"DamageFromBase",
		"CriticalDamage",
		"CriticalChance",
		"Movement",
		"Initiative",
		"Requirements",
		"Slot",
		"Durability",
		"DurabilityDegradeSpeed",
		"Value",
		"WeaponType",
		"AnimType",
		"WeaponRange",
		"ModifierType",
		"Projectile",
		"Act",
		"Act part",
		"StrengthBoost",
		"FinesseBoost",
		"IntelligenceBoost",
		"ConstitutionBoost",
		"MemoryBoost",
		"WitsBoost",
		"SingleHanded",
		"TwoHanded",
		"Ranged",
		"DualWielding",
		"RogueLore",
		"WarriorLore",
		"RangerLore",
		"FireSpecialist",
		"WaterSpecialist",
		"AirSpecialist",
		"EarthSpecialist",
		"Sourcery",
		"Necromancy",
		"Polymorph",
		"Summoning",
		"Leadership",
		"PainReflection",
		"Perseverance",
		"Telekinesis",
		"Sneaking",
		"Thievery",
		"Loremaster",
		"Repair",
		"Barter",
		"Persuasion",
		"Luck",
		"Fire",
		"Earth",
		"Water",
		"Air",
		"Poison",
		"Physical",
		"Piercing",
		"SightBoost",
		"HearingBoost",
		"VitalityBoost",
		"MagicPointsBoost",
		"ChanceToHitBoost",
		"APMaximum",
		"APStart",
		"APRecovery",
		"AccuracyBoost",
		"DodgeBoost",
		"Weight",
		"AttackAPCost",
		"ComboCategory",
		"Flags",
		"Boosts",
		"InventoryTab",
		"Charges",
		"MaxCharges",
		"Skills",
		"Reflection",
		"ItemGroup",
		"ObjectCategory",
		"MinAmount",
		"MaxAmount",
		"Priority",
		"Unique",
		"MinLevel",
		"MaxLevel",
		"ItemColor",
		"MaxSummons",
		"RuneSlots",
		"RuneSlots_V1",
		"NeedsIdentification",
		"LifeSteal",
		"CleavePercentage",
		"CleaveAngle",
		"Talents",
		"IgnoreVisionBlock",
		"Tags",
	},
	Shield = {
		"Armor Defense Value",
		"ArmorBoost",
		"Magic Armor Value",
		"MagicArmorBoost",
		"Movement",
		"Initiative",
		"Requirements",
		"Slot",
		"Durability",
		"DurabilityDegradeSpeed",
		"Value",
		"ModifierType",
		"Act",
		"Act part",
		"Fire",
		"Air",
		"Water",
		"Earth",
		"Poison",
		"Piercing",
		"Physical",
		"Blocking",
		"StrengthBoost",
		"FinesseBoost",
		"IntelligenceBoost",
		"ConstitutionBoost",
		"MemoryBoost",
		"WitsBoost",
		"SingleHanded",
		"TwoHanded",
		"Ranged",
		"DualWielding",
		"RogueLore",
		"WarriorLore",
		"RangerLore",
		"FireSpecialist",
		"WaterSpecialist",
		"AirSpecialist",
		"EarthSpecialist",
		"Sourcery",
		"Necromancy",
		"Polymorph",
		"Summoning",
		"Leadership",
		"PainReflection",
		"Perseverance",
		"Telekinesis",
		"Sneaking",
		"Thievery",
		"Loremaster",
		"Repair",
		"Barter",
		"Persuasion",
		"Luck",
		"SightBoost",
		"HearingBoost",
		"VitalityBoost",
		"MagicPointsBoost",
		"ChanceToHitBoost",
		"APMaximum",
		"APStart",
		"APRecovery",
		"AccuracyBoost",
		"DodgeBoost",
		"CriticalChance",
		"ComboCategory",
		"Weight",
		"InventoryTab",
		"Flags",
		"Skills",
		"Reflection",
		"ItemGroup",
		"ObjectCategory",
		"MinAmount",
		"MaxAmount",
		"Priority",
		"Unique",
		"MinLevel",
		"MaxLevel",
		"ItemColor",
		"MaxSummons",
		"RuneSlots",
		"RuneSlots_V1",
		"NeedsIdentification",
		"Talents",
		"Tags",
	},
}

Data.PropertyContext = {
	Target = 0x01,
	AoE = 0x02,
	Self = 0x04,
	SelfOnHit = 0x08,
	SelfOnEquip = 0x10,
}

Data.ModID = {
	LeaderLib = "7e737d2f-31d2-4751-963f-be6ccc59cd0c",
	UnofficialPatch = "d15a346b-b332-4397-9b3f-f1e6045ff1c7",
	TrainingDummy = "40efe511-7489-455e-a9c8-ad7495b8c9f2",
	DivinityOriginalSin2 = "1301db3d-1f54-4e98-9be5-5094030916e4", -- Main campaign mod
	Shared = "2bd9bdbe-22ae-4aa2-9c93-205880fc6564",
	Shared_DOS = "eedf7638-36ff-4f26-a50a-076b87d53ba0",
	Arena = "a99afe76-e1b0-43a1-98c2-0fd1448c223b",
	GameMaster = "00550ab2-ac92-410c-8d94-742f7629de0e",
	GiftBag = {
		AnimalEmpathy = "423fae51-61e3-469a-9c1f-8ad3fd349f02",
		ArmorSets = "3da57b9d-8b41-46c7-a33c-afb31eea38a3",
		Character_Creation_Pack = "b40e443e-badd-4727-82b3-f88a170c4db7",
		CombatRandomiser = "f30953bb-10d3-4ba4-958c-0f38d4906195",
		CraftersKit = "68a99fef-d125-4ed0-893f-bb6751e52c5e",
		DivineTalents = "ca32a698-d63e-4d20-92a7-dd83cba7bc56",
		EightActionPoints = "9b45f7e5-d4e2-4fc2-8ef7-3b8e90a5256c",
		EndlessRunner = "ec27251d-acc0-4ab8-920e-dbc851e79bb4",
		EnhancedSpiritVision = "8fe1719c-ef8f-4cb7-84bd-5a474ff7b6c1",
		FortJoyMagicMirror = "2d42113c-681a-47b6-96a1-d90b3b1b07d3",
		FromtheAshes = "af4b3f9c-c5cb-438d-91ae-08c5804c1983", -- AS_Resturrect
		Hagglers = "f33ded5d-23ab-4f0c-b71e-1aff68eee2cd",
		HerbGardens = "38608c30-1658-4f6a-8adf-e826a5295808",
		ImprovedOrganisation = "f243c84f-9322-43ac-96b7-7504f990a8f0",
		NineLives = "015de505-6e7f-460c-844c-395de6c2ce34",
		PetPower = "d2507d43-efce-48b8-ba5e-5dd136c715a7",
		SourceMeditation = "1273be96-6a1b-4da9-b377-249b98dc4b7e",
		SourcerousSundries = "a945eefa-530c-4bca-a29c-a51450f8e181",
	}
}

Data.HeroBaseSkeletonToRace = {
	---Dwarves_Hero_Female_Base_2e8d3ef9-33ec-4496-b0df-06ae85f26a62
	["2e8d3ef9-33ec-4496-b0df-06ae85f26a62"] = "Dwarf",
	---Dwarves_Hero_Male_Base_b8ddbc75-415f-4894-afc2-2256e11b723d
	["b8ddbc75-415f-4894-afc2-2256e11b723d"] = "Dwarf",
	---Elves_Hero_Female_Base_466d39b0-519d-4e00-809b-2da4ee3dbfc4
	["466d39b0-519d-4e00-809b-2da4ee3dbfc4"] = "Elf",
	---Elves_Hero_Male_Base_6439c71c-87f4-4c02-80c2-0f9537954f9d
	["6439c71c-87f4-4c02-80c2-0f9537954f9d"] = "Elf",
	---Humans_Hero_Female_Base_a19b45f9-1f2e-43f0-952e-3e3bcc9a88a4
	["a19b45f9-1f2e-43f0-952e-3e3bcc9a88a4"] = "Human",
	---Humans_Hero_Male_Base_ab01c22a-cce0-483b-84e6-2d331b6c2982
	["ab01c22a-cce0-483b-84e6-2d331b6c2982"] = "Human",
	---Lizards_Hero_Female_Base_80e8c237-da16-4fae-9252-ccbc774571a9
	["80e8c237-da16-4fae-9252-ccbc774571a9"] = "Lizard",
	---Lizards_Hero_Male_Base_d656291b-81f3-445e-84df-4e32cfc18d46
	["d656291b-81f3-445e-84df-4e32cfc18d46"] = "Lizard",
}